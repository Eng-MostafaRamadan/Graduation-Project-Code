
graduation_project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000add4  080002a0  080002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000130  0800b074  0800b074  0000c074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  0800b1a4  0800b1a4  0000c1a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .fini_array   00000004  0800b1a8  0800b1a8  0000c1a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         0000017c  24000000  0800b1ac  0000d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00004bd8  2400017c  0800b328  0000d17c  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  24004d54  0800b328  0000dd54  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  0000d17c  2**0
                  CONTENTS, READONLY
  9 .debug_info   0001e6cc  00000000  00000000  0000d1aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00003a34  00000000  00000000  0002b876  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00001940  00000000  00000000  0002f2b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00001380  00000000  00000000  00030bf0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0000424e  00000000  00000000  00031f70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   0001cb80  00000000  00000000  000361be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0017d7ef  00000000  00000000  00052d3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  001d052d  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00006c1c  00000000  00000000  001d0570  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000006f  00000000  00000000  001d718c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	@ (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	@ (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	@ (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	2400017c 	.word	0x2400017c
 80002bc:	00000000 	.word	0x00000000
 80002c0:	0800b05c 	.word	0x0800b05c

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	@ (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	@ (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	@ (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	24000180 	.word	0x24000180
 80002dc:	0800b05c 	.word	0x0800b05c

080002e0 <readStablePot>:
void HAL_Delay_us(uint32_t microseconds);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int readStablePot(MotorController* motor) {
 80002e0:	b590      	push	{r4, r7, lr}
 80002e2:	b08d      	sub	sp, #52	@ 0x34
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
    static int samples[5][POT_SAMPLES]; // Changed to 4 motors
    static int indices[5] = {0};       // Changed to 4 motors
    int motorIndex;

    // Determine motor index
    if(motor == &motor1) motorIndex = 0;
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	4a67      	ldr	r2, [pc, #412]	@ (8000488 <readStablePot+0x1a8>)
 80002ec:	4293      	cmp	r3, r2
 80002ee:	d102      	bne.n	80002f6 <readStablePot+0x16>
 80002f0:	2300      	movs	r3, #0
 80002f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80002f4:	e016      	b.n	8000324 <readStablePot+0x44>
    else if(motor == &motor2) motorIndex = 1;
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a64      	ldr	r2, [pc, #400]	@ (800048c <readStablePot+0x1ac>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d102      	bne.n	8000304 <readStablePot+0x24>
 80002fe:	2301      	movs	r3, #1
 8000300:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000302:	e00f      	b.n	8000324 <readStablePot+0x44>
    else if(motor == &motor3) motorIndex = 2;
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a62      	ldr	r2, [pc, #392]	@ (8000490 <readStablePot+0x1b0>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d102      	bne.n	8000312 <readStablePot+0x32>
 800030c:	2302      	movs	r3, #2
 800030e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000310:	e008      	b.n	8000324 <readStablePot+0x44>
    else if(motor == &motor4) motorIndex = 3;
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a5f      	ldr	r2, [pc, #380]	@ (8000494 <readStablePot+0x1b4>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d102      	bne.n	8000320 <readStablePot+0x40>
 800031a:	2303      	movs	r3, #3
 800031c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800031e:	e001      	b.n	8000324 <readStablePot+0x44>
    else motorIndex = 4;  // Added for motor4
 8000320:	2304      	movs	r3, #4
 8000322:	62fb      	str	r3, [r7, #44]	@ 0x2c

    // Configure ADC for this motor's channel
    ADC_ChannelConfTypeDef sConfig = {0};
 8000324:	f107 0308 	add.w	r3, r7, #8
 8000328:	2200      	movs	r2, #0
 800032a:	601a      	str	r2, [r3, #0]
 800032c:	605a      	str	r2, [r3, #4]
 800032e:	609a      	str	r2, [r3, #8]
 8000330:	60da      	str	r2, [r3, #12]
 8000332:	611a      	str	r2, [r3, #16]
 8000334:	615a      	str	r2, [r3, #20]
 8000336:	619a      	str	r2, [r3, #24]
    sConfig.Channel = motor->adcChannel;
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	69db      	ldr	r3, [r3, #28]
 800033c:	60bb      	str	r3, [r7, #8]
    sConfig.Rank = ADC_REGULAR_RANK_1;
 800033e:	2306      	movs	r3, #6
 8000340:	60fb      	str	r3, [r7, #12]
    sConfig.SamplingTime = ADC_SAMPLETIME_387CYCLES_5;
 8000342:	2306      	movs	r3, #6
 8000344:	613b      	str	r3, [r7, #16]
    sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000346:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 800034a:	617b      	str	r3, [r7, #20]
    HAL_ADC_ConfigChannel(motor->hadc, &sConfig);
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	699b      	ldr	r3, [r3, #24]
 8000350:	f107 0208 	add.w	r2, r7, #8
 8000354:	4611      	mov	r1, r2
 8000356:	4618      	mov	r0, r3
 8000358:	f002 fc0a 	bl	8002b70 <HAL_ADC_ConfigChannel>

    // Read ADC value
    HAL_ADC_Start(motor->hadc);
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	699b      	ldr	r3, [r3, #24]
 8000360:	4618      	mov	r0, r3
 8000362:	f002 fa05 	bl	8002770 <HAL_ADC_Start>
    if (HAL_ADC_PollForConversion(motor->hadc, 10) == HAL_OK) {
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	699b      	ldr	r3, [r3, #24]
 800036a:	210a      	movs	r1, #10
 800036c:	4618      	mov	r0, r3
 800036e:	f002 fafd 	bl	800296c <HAL_ADC_PollForConversion>
 8000372:	4603      	mov	r3, r0
 8000374:	2b00      	cmp	r3, #0
 8000376:	d111      	bne.n	800039c <readStablePot+0xbc>
        samples[motorIndex][indices[motorIndex]] = HAL_ADC_GetValue(motor->hadc);
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	699b      	ldr	r3, [r3, #24]
 800037c:	4618      	mov	r0, r3
 800037e:	f002 fbe9 	bl	8002b54 <HAL_ADC_GetValue>
 8000382:	4a45      	ldr	r2, [pc, #276]	@ (8000498 <readStablePot+0x1b8>)
 8000384:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000386:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800038a:	4604      	mov	r4, r0
 800038c:	4843      	ldr	r0, [pc, #268]	@ (800049c <readStablePot+0x1bc>)
 800038e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000390:	4613      	mov	r3, r2
 8000392:	011b      	lsls	r3, r3, #4
 8000394:	1a9b      	subs	r3, r3, r2
 8000396:	440b      	add	r3, r1
 8000398:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
    }
    HAL_ADC_Stop(motor->hadc);
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	699b      	ldr	r3, [r3, #24]
 80003a0:	4618      	mov	r0, r3
 80003a2:	f002 faaf 	bl	8002904 <HAL_ADC_Stop>

    indices[motorIndex] = (indices[motorIndex] + 1) % POT_SAMPLES;
 80003a6:	4a3c      	ldr	r2, [pc, #240]	@ (8000498 <readStablePot+0x1b8>)
 80003a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	4b3b      	ldr	r3, [pc, #236]	@ (80004a0 <readStablePot+0x1c0>)
 80003b2:	fb83 1302 	smull	r1, r3, r3, r2
 80003b6:	4413      	add	r3, r2
 80003b8:	10d9      	asrs	r1, r3, #3
 80003ba:	17d3      	asrs	r3, r2, #31
 80003bc:	1ac9      	subs	r1, r1, r3
 80003be:	460b      	mov	r3, r1
 80003c0:	011b      	lsls	r3, r3, #4
 80003c2:	1a5b      	subs	r3, r3, r1
 80003c4:	1ad1      	subs	r1, r2, r3
 80003c6:	4a34      	ldr	r2, [pc, #208]	@ (8000498 <readStablePot+0x1b8>)
 80003c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003ca:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

    // Exponential moving average
    float alpha = 0.2f;
 80003ce:	4b35      	ldr	r3, [pc, #212]	@ (80004a4 <readStablePot+0x1c4>)
 80003d0:	627b      	str	r3, [r7, #36]	@ 0x24
    static float filteredValues[5] = {0};  // Changed to 4 motors
    if (filteredValues[motorIndex] == 0) {
 80003d2:	4a35      	ldr	r2, [pc, #212]	@ (80004a8 <readStablePot+0x1c8>)
 80003d4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003d6:	009b      	lsls	r3, r3, #2
 80003d8:	4413      	add	r3, r2
 80003da:	edd3 7a00 	vldr	s15, [r3]
 80003de:	eef5 7a40 	vcmp.f32	s15, #0.0
 80003e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80003e6:	d111      	bne.n	800040c <readStablePot+0x12c>
        filteredValues[motorIndex] = samples[motorIndex][0];
 80003e8:	492c      	ldr	r1, [pc, #176]	@ (800049c <readStablePot+0x1bc>)
 80003ea:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80003ec:	4613      	mov	r3, r2
 80003ee:	011b      	lsls	r3, r3, #4
 80003f0:	1a9b      	subs	r3, r3, r2
 80003f2:	009b      	lsls	r3, r3, #2
 80003f4:	440b      	add	r3, r1
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	ee07 3a90 	vmov	s15, r3
 80003fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000400:	4a29      	ldr	r2, [pc, #164]	@ (80004a8 <readStablePot+0x1c8>)
 8000402:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000404:	009b      	lsls	r3, r3, #2
 8000406:	4413      	add	r3, r2
 8000408:	edc3 7a00 	vstr	s15, [r3]
    }

    for (int i = 0; i < POT_SAMPLES; i++) {
 800040c:	2300      	movs	r3, #0
 800040e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000410:	e029      	b.n	8000466 <readStablePot+0x186>
        filteredValues[motorIndex] = alpha * samples[motorIndex][i] +
 8000412:	4922      	ldr	r1, [pc, #136]	@ (800049c <readStablePot+0x1bc>)
 8000414:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8000416:	4613      	mov	r3, r2
 8000418:	011b      	lsls	r3, r3, #4
 800041a:	1a9b      	subs	r3, r3, r2
 800041c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800041e:	4413      	add	r3, r2
 8000420:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000424:	ee07 3a90 	vmov	s15, r3
 8000428:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800042c:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8000430:	ee27 7a27 	vmul.f32	s14, s14, s15
                                   (1 - alpha) * filteredValues[motorIndex];
 8000434:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8000438:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 800043c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8000440:	4a19      	ldr	r2, [pc, #100]	@ (80004a8 <readStablePot+0x1c8>)
 8000442:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000444:	009b      	lsls	r3, r3, #2
 8000446:	4413      	add	r3, r2
 8000448:	edd3 7a00 	vldr	s15, [r3]
 800044c:	ee66 7aa7 	vmul.f32	s15, s13, s15
        filteredValues[motorIndex] = alpha * samples[motorIndex][i] +
 8000450:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000454:	4a14      	ldr	r2, [pc, #80]	@ (80004a8 <readStablePot+0x1c8>)
 8000456:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000458:	009b      	lsls	r3, r3, #2
 800045a:	4413      	add	r3, r2
 800045c:	edc3 7a00 	vstr	s15, [r3]
    for (int i = 0; i < POT_SAMPLES; i++) {
 8000460:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000462:	3301      	adds	r3, #1
 8000464:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000466:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000468:	2b0e      	cmp	r3, #14
 800046a:	ddd2      	ble.n	8000412 <readStablePot+0x132>
    }

    return (int)filteredValues[motorIndex];
 800046c:	4a0e      	ldr	r2, [pc, #56]	@ (80004a8 <readStablePot+0x1c8>)
 800046e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000470:	009b      	lsls	r3, r3, #2
 8000472:	4413      	add	r3, r2
 8000474:	edd3 7a00 	vldr	s15, [r3]
 8000478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800047c:	ee17 3a90 	vmov	r3, s15
}
 8000480:	4618      	mov	r0, r3
 8000482:	3734      	adds	r7, #52	@ 0x34
 8000484:	46bd      	mov	sp, r7
 8000486:	bd90      	pop	{r4, r7, pc}
 8000488:	24000000 	.word	0x24000000
 800048c:	2400003c 	.word	0x2400003c
 8000490:	24000078 	.word	0x24000078
 8000494:	240000b4 	.word	0x240000b4
 8000498:	24000260 	.word	0x24000260
 800049c:	24000274 	.word	0x24000274
 80004a0:	88888889 	.word	0x88888889
 80004a4:	3e4ccccd 	.word	0x3e4ccccd
 80004a8:	240003a0 	.word	0x240003a0

080004ac <moveToPositionSmooth>:

void moveToPositionSmooth(MotorController* motor, int targetStep) {
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b090      	sub	sp, #64	@ 0x40
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	6078      	str	r0, [r7, #4]
 80004b4:	6039      	str	r1, [r7, #0]
    int direction;
    int stepsToMove = targetStep - motor->totalSteps;
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80004ba:	683a      	ldr	r2, [r7, #0]
 80004bc:	1ad3      	subs	r3, r2, r3
 80004be:	62bb      	str	r3, [r7, #40]	@ 0x28

    if (abs(stepsToMove) < MIN_MOVE_STEPS) {
 80004c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80004c2:	f113 0f13 	cmn.w	r3, #19
 80004c6:	db03      	blt.n	80004d0 <moveToPositionSmooth+0x24>
 80004c8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80004ca:	2b13      	cmp	r3, #19
 80004cc:	f340 8144 	ble.w	8000758 <moveToPositionSmooth+0x2ac>
        return;
    }

    // Handle multi-revolution movement properly
    int possibleSteps1 = stepsToMove;
 80004d0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80004d2:	627b      	str	r3, [r7, #36]	@ 0x24
    int possibleSteps2 = stepsToMove - (StepPerRevolution * (motor->rotationRange / 360.0f));
 80004d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80004d6:	ee07 3a90 	vmov	s15, r3
 80004da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	edd3 6a0e 	vldr	s13, [r3, #56]	@ 0x38
 80004e4:	ed9f 6a9e 	vldr	s12, [pc, #632]	@ 8000760 <moveToPositionSmooth+0x2b4>
 80004e8:	eec6 7a86 	vdiv.f32	s15, s13, s12
 80004ec:	eddf 6a9d 	vldr	s13, [pc, #628]	@ 8000764 <moveToPositionSmooth+0x2b8>
 80004f0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80004f4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80004f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80004fc:	ee17 3a90 	vmov	r3, s15
 8000500:	623b      	str	r3, [r7, #32]
    int possibleSteps3 = stepsToMove + (StepPerRevolution * (motor->rotationRange / 360.0f));
 8000502:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000504:	ee07 3a90 	vmov	s15, r3
 8000508:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	edd3 6a0e 	vldr	s13, [r3, #56]	@ 0x38
 8000512:	ed9f 6a93 	vldr	s12, [pc, #588]	@ 8000760 <moveToPositionSmooth+0x2b4>
 8000516:	eec6 7a86 	vdiv.f32	s15, s13, s12
 800051a:	eddf 6a92 	vldr	s13, [pc, #584]	@ 8000764 <moveToPositionSmooth+0x2b8>
 800051e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8000522:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000526:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800052a:	ee17 3a90 	vmov	r3, s15
 800052e:	61fb      	str	r3, [r7, #28]

    // Find the shortest path
    int shortestPath = possibleSteps1;
 8000530:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000532:	63bb      	str	r3, [r7, #56]	@ 0x38
    if (abs(possibleSteps2) < abs(shortestPath)) shortestPath = possibleSteps2;
 8000534:	6a3b      	ldr	r3, [r7, #32]
 8000536:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 800053a:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 800053e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000540:	2b00      	cmp	r3, #0
 8000542:	bfb8      	it	lt
 8000544:	425b      	neglt	r3, r3
 8000546:	429a      	cmp	r2, r3
 8000548:	da01      	bge.n	800054e <moveToPositionSmooth+0xa2>
 800054a:	6a3b      	ldr	r3, [r7, #32]
 800054c:	63bb      	str	r3, [r7, #56]	@ 0x38
    if (abs(possibleSteps3) < abs(shortestPath)) shortestPath = possibleSteps3;
 800054e:	69fb      	ldr	r3, [r7, #28]
 8000550:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8000554:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8000558:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800055a:	2b00      	cmp	r3, #0
 800055c:	bfb8      	it	lt
 800055e:	425b      	neglt	r3, r3
 8000560:	429a      	cmp	r2, r3
 8000562:	da01      	bge.n	8000568 <moveToPositionSmooth+0xbc>
 8000564:	69fb      	ldr	r3, [r7, #28]
 8000566:	63bb      	str	r3, [r7, #56]	@ 0x38

    direction = (shortestPath > 0) ? 1 : -1;
 8000568:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800056a:	2b00      	cmp	r3, #0
 800056c:	dd01      	ble.n	8000572 <moveToPositionSmooth+0xc6>
 800056e:	2301      	movs	r3, #1
 8000570:	e001      	b.n	8000576 <moveToPositionSmooth+0xca>
 8000572:	f04f 33ff 	mov.w	r3, #4294967295
 8000576:	63fb      	str	r3, [r7, #60]	@ 0x3c
    int totalSteps = abs(shortestPath);
 8000578:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800057a:	2b00      	cmp	r3, #0
 800057c:	bfb8      	it	lt
 800057e:	425b      	neglt	r3, r3
 8000580:	637b      	str	r3, [r7, #52]	@ 0x34

    if ((direction * motor->lastMovementDirection) < 0 &&
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000586:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8000588:	fb02 f303 	mul.w	r3, r2, r3
 800058c:	2b00      	cmp	r3, #0
 800058e:	da0f      	bge.n	80005b0 <moveToPositionSmooth+0x104>
 8000590:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000592:	2b63      	cmp	r3, #99	@ 0x63
 8000594:	dc0c      	bgt.n	80005b0 <moveToPositionSmooth+0x104>
            totalSteps < (POSITION_TOLERANCE*2)) {
        direction = motor->lastMovementDirection;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800059a:	63fb      	str	r3, [r7, #60]	@ 0x3c
        stepsToMove = targetStep - motor->totalSteps;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80005a0:	683a      	ldr	r2, [r7, #0]
 80005a2:	1ad3      	subs	r3, r2, r3
 80005a4:	62bb      	str	r3, [r7, #40]	@ 0x28
        totalSteps = abs(stepsToMove);
 80005a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80005a8:	2b00      	cmp	r3, #0
 80005aa:	bfb8      	it	lt
 80005ac:	425b      	neglt	r3, r3
 80005ae:	637b      	str	r3, [r7, #52]	@ 0x34
    }

    HAL_GPIO_WritePin(motor->directionPort, motor->directionPin,
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	6898      	ldr	r0, [r3, #8]
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	8999      	ldrh	r1, [r3, #12]
 80005b8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80005ba:	2b00      	cmp	r3, #0
 80005bc:	bfcc      	ite	gt
 80005be:	2301      	movgt	r3, #1
 80005c0:	2300      	movle	r3, #0
 80005c2:	b2db      	uxtb	r3, r3
 80005c4:	461a      	mov	r2, r3
 80005c6:	f003 fc81 	bl	8003ecc <HAL_GPIO_WritePin>
            (direction > 0) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    motor->lastMovementDirection = direction;
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80005ce:	631a      	str	r2, [r3, #48]	@ 0x30

    int accelSteps = min(ACCELERATION_STEPS, totalSteps/2);
 80005d0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80005d2:	f240 6241 	movw	r2, #1601	@ 0x641
 80005d6:	4293      	cmp	r3, r2
 80005d8:	dc05      	bgt.n	80005e6 <moveToPositionSmooth+0x13a>
 80005da:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80005dc:	2b00      	cmp	r3, #0
 80005de:	da00      	bge.n	80005e2 <moveToPositionSmooth+0x136>
 80005e0:	3301      	adds	r3, #1
 80005e2:	105b      	asrs	r3, r3, #1
 80005e4:	e001      	b.n	80005ea <moveToPositionSmooth+0x13e>
 80005e6:	f44f 7348 	mov.w	r3, #800	@ 0x320
 80005ea:	61bb      	str	r3, [r7, #24]
    int decelStart = totalSteps - accelSteps;
 80005ec:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80005ee:	69bb      	ldr	r3, [r7, #24]
 80005f0:	1ad3      	subs	r3, r2, r3
 80005f2:	617b      	str	r3, [r7, #20]

    for (int i = 0; i < totalSteps; i++) {
 80005f4:	2300      	movs	r3, #0
 80005f6:	633b      	str	r3, [r7, #48]	@ 0x30
 80005f8:	e0a8      	b.n	800074c <moveToPositionSmooth+0x2a0>
        int targetPulseWidth = BASE_PULSE_WIDTH;
 80005fa:	2396      	movs	r3, #150	@ 0x96
 80005fc:	62fb      	str	r3, [r7, #44]	@ 0x2c

        if (i < accelSteps) {
 80005fe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8000600:	69bb      	ldr	r3, [r7, #24]
 8000602:	429a      	cmp	r2, r3
 8000604:	da25      	bge.n	8000652 <moveToPositionSmooth+0x1a6>
            float progress = (float)i / accelSteps;
 8000606:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000608:	ee07 3a90 	vmov	s15, r3
 800060c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000610:	69bb      	ldr	r3, [r7, #24]
 8000612:	ee07 3a90 	vmov	s15, r3
 8000616:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800061a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800061e:	edc7 7a03 	vstr	s15, [r7, #12]
            targetPulseWidth = BASE_PULSE_WIDTH*2 - (BASE_PULSE_WIDTH * progress * progress * progress);
 8000622:	edd7 7a03 	vldr	s15, [r7, #12]
 8000626:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 8000768 <moveToPositionSmooth+0x2bc>
 800062a:	ee27 7a87 	vmul.f32	s14, s15, s14
 800062e:	edd7 7a03 	vldr	s15, [r7, #12]
 8000632:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000636:	edd7 7a03 	vldr	s15, [r7, #12]
 800063a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800063e:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 800076c <moveToPositionSmooth+0x2c0>
 8000642:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000646:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800064a:	ee17 3a90 	vmov	r3, s15
 800064e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8000650:	e02a      	b.n	80006a8 <moveToPositionSmooth+0x1fc>
        }
        else if (i >= decelStart) {
 8000652:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8000654:	697b      	ldr	r3, [r7, #20]
 8000656:	429a      	cmp	r2, r3
 8000658:	db26      	blt.n	80006a8 <moveToPositionSmooth+0x1fc>
            float progress = (float)(i-decelStart) / accelSteps;
 800065a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800065c:	697b      	ldr	r3, [r7, #20]
 800065e:	1ad3      	subs	r3, r2, r3
 8000660:	ee07 3a90 	vmov	s15, r3
 8000664:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000668:	69bb      	ldr	r3, [r7, #24]
 800066a:	ee07 3a90 	vmov	s15, r3
 800066e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000672:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000676:	edc7 7a04 	vstr	s15, [r7, #16]
            targetPulseWidth = BASE_PULSE_WIDTH + (BASE_PULSE_WIDTH * progress * progress * progress);
 800067a:	edd7 7a04 	vldr	s15, [r7, #16]
 800067e:	ed9f 7a3a 	vldr	s14, [pc, #232]	@ 8000768 <moveToPositionSmooth+0x2bc>
 8000682:	ee27 7a87 	vmul.f32	s14, s15, s14
 8000686:	edd7 7a04 	vldr	s15, [r7, #16]
 800068a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800068e:	edd7 7a04 	vldr	s15, [r7, #16]
 8000692:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000696:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8000768 <moveToPositionSmooth+0x2bc>
 800069a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800069e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80006a2:	ee17 3a90 	vmov	r3, s15
 80006a6:	62fb      	str	r3, [r7, #44]	@ 0x2c
        }

        if (abs(targetPulseWidth - motor->currentSpeed) > MAX_SPEED_CHANGE) {
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80006ac:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80006ae:	1ad3      	subs	r3, r2, r3
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	bfb8      	it	lt
 80006b4:	425b      	neglt	r3, r3
 80006b6:	2b32      	cmp	r3, #50	@ 0x32
 80006b8:	dd0d      	ble.n	80006d6 <moveToPositionSmooth+0x22a>
            if (targetPulseWidth < motor->currentSpeed) {
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80006be:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80006c0:	429a      	cmp	r2, r3
 80006c2:	da04      	bge.n	80006ce <moveToPositionSmooth+0x222>
                targetPulseWidth = motor->currentSpeed - MAX_SPEED_CHANGE;
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80006c8:	3b32      	subs	r3, #50	@ 0x32
 80006ca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80006cc:	e003      	b.n	80006d6 <moveToPositionSmooth+0x22a>
            } else {
                targetPulseWidth = motor->currentSpeed + MAX_SPEED_CHANGE;
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80006d2:	3332      	adds	r3, #50	@ 0x32
 80006d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
            }
        }
        motor->currentSpeed = targetPulseWidth;
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80006da:	635a      	str	r2, [r3, #52]	@ 0x34

        HAL_GPIO_WritePin(motor->stepPort, motor->stepPin, GPIO_PIN_SET);
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	6918      	ldr	r0, [r3, #16]
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	8a9b      	ldrh	r3, [r3, #20]
 80006e4:	2201      	movs	r2, #1
 80006e6:	4619      	mov	r1, r3
 80006e8:	f003 fbf0 	bl	8003ecc <HAL_GPIO_WritePin>
        HAL_Delay_us(targetPulseWidth/2);
 80006ec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80006ee:	2b00      	cmp	r3, #0
 80006f0:	da00      	bge.n	80006f4 <moveToPositionSmooth+0x248>
 80006f2:	3301      	adds	r3, #1
 80006f4:	105b      	asrs	r3, r3, #1
 80006f6:	4618      	mov	r0, r3
 80006f8:	f000 f83c 	bl	8000774 <HAL_Delay_us>
        HAL_GPIO_WritePin(motor->stepPort, motor->stepPin, GPIO_PIN_RESET);
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	6918      	ldr	r0, [r3, #16]
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	8a9b      	ldrh	r3, [r3, #20]
 8000704:	2200      	movs	r2, #0
 8000706:	4619      	mov	r1, r3
 8000708:	f003 fbe0 	bl	8003ecc <HAL_GPIO_WritePin>
        HAL_Delay_us(targetPulseWidth/2);
 800070c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800070e:	2b00      	cmp	r3, #0
 8000710:	da00      	bge.n	8000714 <moveToPositionSmooth+0x268>
 8000712:	3301      	adds	r3, #1
 8000714:	105b      	asrs	r3, r3, #1
 8000716:	4618      	mov	r0, r3
 8000718:	f000 f82c 	bl	8000774 <HAL_Delay_us>

        motor->totalSteps += direction;
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000720:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8000722:	441a      	add	r2, r3
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	625a      	str	r2, [r3, #36]	@ 0x24
        motor->lastStepPosition = motor->totalSteps % StepPerRevolution;
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800072c:	4b10      	ldr	r3, [pc, #64]	@ (8000770 <moveToPositionSmooth+0x2c4>)
 800072e:	fb83 1302 	smull	r1, r3, r3, r2
 8000732:	1299      	asrs	r1, r3, #10
 8000734:	17d3      	asrs	r3, r2, #31
 8000736:	1acb      	subs	r3, r1, r3
 8000738:	f44f 6148 	mov.w	r1, #3200	@ 0xc80
 800073c:	fb01 f303 	mul.w	r3, r1, r3
 8000740:	1ad3      	subs	r3, r2, r3
 8000742:	687a      	ldr	r2, [r7, #4]
 8000744:	6213      	str	r3, [r2, #32]
    for (int i = 0; i < totalSteps; i++) {
 8000746:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000748:	3301      	adds	r3, #1
 800074a:	633b      	str	r3, [r7, #48]	@ 0x30
 800074c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800074e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000750:	429a      	cmp	r2, r3
 8000752:	f6ff af52 	blt.w	80005fa <moveToPositionSmooth+0x14e>
 8000756:	e000      	b.n	800075a <moveToPositionSmooth+0x2ae>
        return;
 8000758:	bf00      	nop
    }
}
 800075a:	3740      	adds	r7, #64	@ 0x40
 800075c:	46bd      	mov	sp, r7
 800075e:	bd80      	pop	{r7, pc}
 8000760:	43b40000 	.word	0x43b40000
 8000764:	45480000 	.word	0x45480000
 8000768:	43160000 	.word	0x43160000
 800076c:	43960000 	.word	0x43960000
 8000770:	51eb851f 	.word	0x51eb851f

08000774 <HAL_Delay_us>:

// Microsecond delay function
void HAL_Delay_us(uint32_t microseconds) {
 8000774:	b480      	push	{r7}
 8000776:	b085      	sub	sp, #20
 8000778:	af00      	add	r7, sp, #0
 800077a:	6078      	str	r0, [r7, #4]
	uint32_t start = DWT->CYCCNT;
 800077c:	4b0d      	ldr	r3, [pc, #52]	@ (80007b4 <HAL_Delay_us+0x40>)
 800077e:	685b      	ldr	r3, [r3, #4]
 8000780:	60fb      	str	r3, [r7, #12]
	uint32_t cycles = (SystemCoreClock / 1000000) * microseconds;
 8000782:	4b0d      	ldr	r3, [pc, #52]	@ (80007b8 <HAL_Delay_us+0x44>)
 8000784:	681b      	ldr	r3, [r3, #0]
 8000786:	4a0d      	ldr	r2, [pc, #52]	@ (80007bc <HAL_Delay_us+0x48>)
 8000788:	fba2 2303 	umull	r2, r3, r2, r3
 800078c:	0c9a      	lsrs	r2, r3, #18
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	fb02 f303 	mul.w	r3, r2, r3
 8000794:	60bb      	str	r3, [r7, #8]

	while ((DWT->CYCCNT - start) < cycles) {
 8000796:	bf00      	nop
 8000798:	4b06      	ldr	r3, [pc, #24]	@ (80007b4 <HAL_Delay_us+0x40>)
 800079a:	685a      	ldr	r2, [r3, #4]
 800079c:	68fb      	ldr	r3, [r7, #12]
 800079e:	1ad3      	subs	r3, r2, r3
 80007a0:	68ba      	ldr	r2, [r7, #8]
 80007a2:	429a      	cmp	r2, r3
 80007a4:	d8f8      	bhi.n	8000798 <HAL_Delay_us+0x24>
		// Wait
	}
}
 80007a6:	bf00      	nop
 80007a8:	bf00      	nop
 80007aa:	3714      	adds	r7, #20
 80007ac:	46bd      	mov	sp, r7
 80007ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b2:	4770      	bx	lr
 80007b4:	e0001000 	.word	0xe0001000
 80007b8:	24000168 	.word	0x24000168
 80007bc:	431bde83 	.word	0x431bde83

080007c0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80007c0:	b580      	push	{r7, lr}
 80007c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 80007c4:	f001 f902 	bl	80019cc <MPU_Config>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80007c8:	f001 fb62 	bl	8001e90 <HAL_Init>

  /* USER CODE BEGIN Init */
	// Enable DWT for microsecond delay
	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 80007cc:	4b3f      	ldr	r3, [pc, #252]	@ (80008cc <main+0x10c>)
 80007ce:	68db      	ldr	r3, [r3, #12]
 80007d0:	4a3e      	ldr	r2, [pc, #248]	@ (80008cc <main+0x10c>)
 80007d2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80007d6:	60d3      	str	r3, [r2, #12]
	DWT->CYCCNT = 0;
 80007d8:	4b3d      	ldr	r3, [pc, #244]	@ (80008d0 <main+0x110>)
 80007da:	2200      	movs	r2, #0
 80007dc:	605a      	str	r2, [r3, #4]
	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 80007de:	4b3c      	ldr	r3, [pc, #240]	@ (80008d0 <main+0x110>)
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	4a3b      	ldr	r2, [pc, #236]	@ (80008d0 <main+0x110>)
 80007e4:	f043 0301 	orr.w	r3, r3, #1
 80007e8:	6013      	str	r3, [r2, #0]
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80007ea:	f000 f8a5 	bl	8000938 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80007ee:	f000 fa31 	bl	8000c54 <MX_GPIO_Init>
  MX_ADC1_Init();
 80007f2:	f000 f91d 	bl	8000a30 <MX_ADC1_Init>
  MX_TIM8_Init();
 80007f6:	f000 f9d9 	bl	8000bac <MX_TIM8_Init>
  /* USER CODE BEGIN 2 */
	// Start TIM8 for ADC triggering
	HAL_TIM_Base_Start(&htim8);
 80007fa:	4836      	ldr	r0, [pc, #216]	@ (80008d4 <main+0x114>)
 80007fc:	f007 f938 	bl	8007a70 <HAL_TIM_Base_Start>

	// Initialize motor states
	HAL_GPIO_WritePin(motor1.enablePort, motor1.enablePin, GPIO_PIN_SET);
 8000800:	4b35      	ldr	r3, [pc, #212]	@ (80008d8 <main+0x118>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	4a34      	ldr	r2, [pc, #208]	@ (80008d8 <main+0x118>)
 8000806:	8891      	ldrh	r1, [r2, #4]
 8000808:	2201      	movs	r2, #1
 800080a:	4618      	mov	r0, r3
 800080c:	f003 fb5e 	bl	8003ecc <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(motor2.enablePort, motor2.enablePin, GPIO_PIN_SET);
 8000810:	4b32      	ldr	r3, [pc, #200]	@ (80008dc <main+0x11c>)
 8000812:	681b      	ldr	r3, [r3, #0]
 8000814:	4a31      	ldr	r2, [pc, #196]	@ (80008dc <main+0x11c>)
 8000816:	8891      	ldrh	r1, [r2, #4]
 8000818:	2201      	movs	r2, #1
 800081a:	4618      	mov	r0, r3
 800081c:	f003 fb56 	bl	8003ecc <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(motor3.enablePort, motor3.enablePin, GPIO_PIN_SET);
 8000820:	4b2f      	ldr	r3, [pc, #188]	@ (80008e0 <main+0x120>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	4a2e      	ldr	r2, [pc, #184]	@ (80008e0 <main+0x120>)
 8000826:	8891      	ldrh	r1, [r2, #4]
 8000828:	2201      	movs	r2, #1
 800082a:	4618      	mov	r0, r3
 800082c:	f003 fb4e 	bl	8003ecc <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(motor4.enablePort, motor4.enablePin, GPIO_PIN_SET);
 8000830:	4b2c      	ldr	r3, [pc, #176]	@ (80008e4 <main+0x124>)
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	4a2b      	ldr	r2, [pc, #172]	@ (80008e4 <main+0x124>)
 8000836:	8891      	ldrh	r1, [r2, #4]
 8000838:	2201      	movs	r2, #1
 800083a:	4618      	mov	r0, r3
 800083c:	f003 fb46 	bl	8003ecc <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(motor5.enablePort, motor5.enablePin, GPIO_PIN_SET);
 8000840:	4b29      	ldr	r3, [pc, #164]	@ (80008e8 <main+0x128>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	4a28      	ldr	r2, [pc, #160]	@ (80008e8 <main+0x128>)
 8000846:	8891      	ldrh	r1, [r2, #4]
 8000848:	2201      	movs	r2, #1
 800084a:	4618      	mov	r0, r3
 800084c:	f003 fb3e 	bl	8003ecc <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(motor6.enablePort, motor6.enablePin, GPIO_PIN_SET);
 8000850:	4b26      	ldr	r3, [pc, #152]	@ (80008ec <main+0x12c>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	4a25      	ldr	r2, [pc, #148]	@ (80008ec <main+0x12c>)
 8000856:	8891      	ldrh	r1, [r2, #4]
 8000858:	2201      	movs	r2, #1
 800085a:	4618      	mov	r0, r3
 800085c:	f003 fb36 	bl	8003ecc <HAL_GPIO_WritePin>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8000860:	f007 fe44 	bl	80084ec <osKernelInitialize>
	/* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of First */
  FirstHandle = osThreadNew(FirstMotor, NULL, &First_attributes);
 8000864:	4a22      	ldr	r2, [pc, #136]	@ (80008f0 <main+0x130>)
 8000866:	2100      	movs	r1, #0
 8000868:	4822      	ldr	r0, [pc, #136]	@ (80008f4 <main+0x134>)
 800086a:	f007 fe89 	bl	8008580 <osThreadNew>
 800086e:	4603      	mov	r3, r0
 8000870:	4a21      	ldr	r2, [pc, #132]	@ (80008f8 <main+0x138>)
 8000872:	6013      	str	r3, [r2, #0]

  /* creation of Second */
  SecondHandle = osThreadNew(SecondMotor, NULL, &Second_attributes);
 8000874:	4a21      	ldr	r2, [pc, #132]	@ (80008fc <main+0x13c>)
 8000876:	2100      	movs	r1, #0
 8000878:	4821      	ldr	r0, [pc, #132]	@ (8000900 <main+0x140>)
 800087a:	f007 fe81 	bl	8008580 <osThreadNew>
 800087e:	4603      	mov	r3, r0
 8000880:	4a20      	ldr	r2, [pc, #128]	@ (8000904 <main+0x144>)
 8000882:	6013      	str	r3, [r2, #0]

  /* creation of Third */
  ThirdHandle = osThreadNew(ThirdMotor, NULL, &Third_attributes);
 8000884:	4a20      	ldr	r2, [pc, #128]	@ (8000908 <main+0x148>)
 8000886:	2100      	movs	r1, #0
 8000888:	4820      	ldr	r0, [pc, #128]	@ (800090c <main+0x14c>)
 800088a:	f007 fe79 	bl	8008580 <osThreadNew>
 800088e:	4603      	mov	r3, r0
 8000890:	4a1f      	ldr	r2, [pc, #124]	@ (8000910 <main+0x150>)
 8000892:	6013      	str	r3, [r2, #0]

  /* creation of Fourth */
  FourthHandle = osThreadNew(FourthMotor, NULL, &Fourth_attributes);
 8000894:	4a1f      	ldr	r2, [pc, #124]	@ (8000914 <main+0x154>)
 8000896:	2100      	movs	r1, #0
 8000898:	481f      	ldr	r0, [pc, #124]	@ (8000918 <main+0x158>)
 800089a:	f007 fe71 	bl	8008580 <osThreadNew>
 800089e:	4603      	mov	r3, r0
 80008a0:	4a1e      	ldr	r2, [pc, #120]	@ (800091c <main+0x15c>)
 80008a2:	6013      	str	r3, [r2, #0]

  /* creation of Fifth */
  FifthHandle = osThreadNew(FifthMotor, NULL, &Fifth_attributes);
 80008a4:	4a1e      	ldr	r2, [pc, #120]	@ (8000920 <main+0x160>)
 80008a6:	2100      	movs	r1, #0
 80008a8:	481e      	ldr	r0, [pc, #120]	@ (8000924 <main+0x164>)
 80008aa:	f007 fe69 	bl	8008580 <osThreadNew>
 80008ae:	4603      	mov	r3, r0
 80008b0:	4a1d      	ldr	r2, [pc, #116]	@ (8000928 <main+0x168>)
 80008b2:	6013      	str	r3, [r2, #0]

  /* creation of Sixth */
  SixthHandle = osThreadNew(SixthMotor, NULL, &Sixth_attributes);
 80008b4:	4a1d      	ldr	r2, [pc, #116]	@ (800092c <main+0x16c>)
 80008b6:	2100      	movs	r1, #0
 80008b8:	481d      	ldr	r0, [pc, #116]	@ (8000930 <main+0x170>)
 80008ba:	f007 fe61 	bl	8008580 <osThreadNew>
 80008be:	4603      	mov	r3, r0
 80008c0:	4a1c      	ldr	r2, [pc, #112]	@ (8000934 <main+0x174>)
 80008c2:	6013      	str	r3, [r2, #0]
  /* USER CODE BEGIN RTOS_EVENTS */
	/* add events, ... */
  /* USER CODE END RTOS_EVENTS */

  /* Start scheduler */
  osKernelStart();
 80008c4:	f007 fe36 	bl	8008534 <osKernelStart>

  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
 80008c8:	bf00      	nop
 80008ca:	e7fd      	b.n	80008c8 <main+0x108>
 80008cc:	e000edf0 	.word	0xe000edf0
 80008d0:	e0001000 	.word	0xe0001000
 80008d4:	240001fc 	.word	0x240001fc
 80008d8:	24000000 	.word	0x24000000
 80008dc:	2400003c 	.word	0x2400003c
 80008e0:	24000078 	.word	0x24000078
 80008e4:	240000b4 	.word	0x240000b4
 80008e8:	240000f0 	.word	0x240000f0
 80008ec:	2400012c 	.word	0x2400012c
 80008f0:	0800b0bc 	.word	0x0800b0bc
 80008f4:	08000de1 	.word	0x08000de1
 80008f8:	24000248 	.word	0x24000248
 80008fc:	0800b0e0 	.word	0x0800b0e0
 8000900:	08000fdd 	.word	0x08000fdd
 8000904:	2400024c 	.word	0x2400024c
 8000908:	0800b104 	.word	0x0800b104
 800090c:	080011d9 	.word	0x080011d9
 8000910:	24000250 	.word	0x24000250
 8000914:	0800b128 	.word	0x0800b128
 8000918:	080013d5 	.word	0x080013d5
 800091c:	24000254 	.word	0x24000254
 8000920:	0800b14c 	.word	0x0800b14c
 8000924:	080015d1 	.word	0x080015d1
 8000928:	24000258 	.word	0x24000258
 800092c:	0800b170 	.word	0x0800b170
 8000930:	080017cd 	.word	0x080017cd
 8000934:	2400025c 	.word	0x2400025c

08000938 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000938:	b580      	push	{r7, lr}
 800093a:	b09c      	sub	sp, #112	@ 0x70
 800093c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800093e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000942:	224c      	movs	r2, #76	@ 0x4c
 8000944:	2100      	movs	r1, #0
 8000946:	4618      	mov	r0, r3
 8000948:	f00a fb4e 	bl	800afe8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800094c:	1d3b      	adds	r3, r7, #4
 800094e:	2220      	movs	r2, #32
 8000950:	2100      	movs	r1, #0
 8000952:	4618      	mov	r0, r3
 8000954:	f00a fb48 	bl	800afe8 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000958:	2002      	movs	r0, #2
 800095a:	f003 fad1 	bl	8003f00 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800095e:	2300      	movs	r3, #0
 8000960:	603b      	str	r3, [r7, #0]
 8000962:	4b31      	ldr	r3, [pc, #196]	@ (8000a28 <SystemClock_Config+0xf0>)
 8000964:	699b      	ldr	r3, [r3, #24]
 8000966:	4a30      	ldr	r2, [pc, #192]	@ (8000a28 <SystemClock_Config+0xf0>)
 8000968:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800096c:	6193      	str	r3, [r2, #24]
 800096e:	4b2e      	ldr	r3, [pc, #184]	@ (8000a28 <SystemClock_Config+0xf0>)
 8000970:	699b      	ldr	r3, [r3, #24]
 8000972:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000976:	603b      	str	r3, [r7, #0]
 8000978:	4b2c      	ldr	r3, [pc, #176]	@ (8000a2c <SystemClock_Config+0xf4>)
 800097a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800097c:	4a2b      	ldr	r2, [pc, #172]	@ (8000a2c <SystemClock_Config+0xf4>)
 800097e:	f043 0301 	orr.w	r3, r3, #1
 8000982:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8000984:	4b29      	ldr	r3, [pc, #164]	@ (8000a2c <SystemClock_Config+0xf4>)
 8000986:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000988:	f003 0301 	and.w	r3, r3, #1
 800098c:	603b      	str	r3, [r7, #0]
 800098e:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000990:	bf00      	nop
 8000992:	4b25      	ldr	r3, [pc, #148]	@ (8000a28 <SystemClock_Config+0xf0>)
 8000994:	699b      	ldr	r3, [r3, #24]
 8000996:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800099a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800099e:	d1f8      	bne.n	8000992 <SystemClock_Config+0x5a>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80009a0:	2302      	movs	r3, #2
 80009a2:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 80009a4:	2301      	movs	r3, #1
 80009a6:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80009a8:	2340      	movs	r3, #64	@ 0x40
 80009aa:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80009ac:	2302      	movs	r3, #2
 80009ae:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80009b0:	2300      	movs	r3, #0
 80009b2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 80009b4:	2304      	movs	r3, #4
 80009b6:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 60;
 80009b8:	233c      	movs	r3, #60	@ 0x3c
 80009ba:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 80009bc:	2302      	movs	r3, #2
 80009be:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80009c0:	2302      	movs	r3, #2
 80009c2:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 80009c4:	2302      	movs	r3, #2
 80009c6:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 80009c8:	230c      	movs	r3, #12
 80009ca:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80009cc:	2300      	movs	r3, #0
 80009ce:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80009d0:	2300      	movs	r3, #0
 80009d2:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80009d4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80009d8:	4618      	mov	r0, r3
 80009da:	f003 facb 	bl	8003f74 <HAL_RCC_OscConfig>
 80009de:	4603      	mov	r3, r0
 80009e0:	2b00      	cmp	r3, #0
 80009e2:	d001      	beq.n	80009e8 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 80009e4:	f001 f830 	bl	8001a48 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80009e8:	233f      	movs	r3, #63	@ 0x3f
 80009ea:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80009ec:	2303      	movs	r3, #3
 80009ee:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 80009f0:	2300      	movs	r3, #0
 80009f2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 80009f4:	2308      	movs	r3, #8
 80009f6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 80009f8:	2340      	movs	r3, #64	@ 0x40
 80009fa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 80009fc:	2340      	movs	r3, #64	@ 0x40
 80009fe:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000a00:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000a04:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000a06:	2340      	movs	r3, #64	@ 0x40
 8000a08:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000a0a:	1d3b      	adds	r3, r7, #4
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	4618      	mov	r0, r3
 8000a10:	f003 ff0a 	bl	8004828 <HAL_RCC_ClockConfig>
 8000a14:	4603      	mov	r3, r0
 8000a16:	2b00      	cmp	r3, #0
 8000a18:	d001      	beq.n	8000a1e <SystemClock_Config+0xe6>
  {
    Error_Handler();
 8000a1a:	f001 f815 	bl	8001a48 <Error_Handler>
  }
}
 8000a1e:	bf00      	nop
 8000a20:	3770      	adds	r7, #112	@ 0x70
 8000a22:	46bd      	mov	sp, r7
 8000a24:	bd80      	pop	{r7, pc}
 8000a26:	bf00      	nop
 8000a28:	58024800 	.word	0x58024800
 8000a2c:	58000400 	.word	0x58000400

08000a30 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000a30:	b580      	push	{r7, lr}
 8000a32:	b08a      	sub	sp, #40	@ 0x28
 8000a34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000a36:	f107 031c 	add.w	r3, r7, #28
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	601a      	str	r2, [r3, #0]
 8000a3e:	605a      	str	r2, [r3, #4]
 8000a40:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000a42:	463b      	mov	r3, r7
 8000a44:	2200      	movs	r2, #0
 8000a46:	601a      	str	r2, [r3, #0]
 8000a48:	605a      	str	r2, [r3, #4]
 8000a4a:	609a      	str	r2, [r3, #8]
 8000a4c:	60da      	str	r2, [r3, #12]
 8000a4e:	611a      	str	r2, [r3, #16]
 8000a50:	615a      	str	r2, [r3, #20]
 8000a52:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000a54:	4b4e      	ldr	r3, [pc, #312]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a56:	4a4f      	ldr	r2, [pc, #316]	@ (8000b94 <MX_ADC1_Init+0x164>)
 8000a58:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV2;
 8000a5a:	4b4d      	ldr	r3, [pc, #308]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a5c:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 8000a60:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 8000a62:	4b4b      	ldr	r3, [pc, #300]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a64:	2200      	movs	r2, #0
 8000a66:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8000a68:	4b49      	ldr	r3, [pc, #292]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a6a:	2201      	movs	r2, #1
 8000a6c:	60da      	str	r2, [r3, #12]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000a6e:	4b48      	ldr	r3, [pc, #288]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a70:	2204      	movs	r2, #4
 8000a72:	611a      	str	r2, [r3, #16]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000a74:	4b46      	ldr	r3, [pc, #280]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a76:	2200      	movs	r2, #0
 8000a78:	751a      	strb	r2, [r3, #20]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000a7a:	4b45      	ldr	r3, [pc, #276]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	755a      	strb	r2, [r3, #21]
  hadc1.Init.NbrOfConversion = 5;
 8000a80:	4b43      	ldr	r3, [pc, #268]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a82:	2205      	movs	r2, #5
 8000a84:	619a      	str	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000a86:	4b42      	ldr	r3, [pc, #264]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a88:	2200      	movs	r2, #0
 8000a8a:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000a8c:	4b40      	ldr	r3, [pc, #256]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a8e:	2200      	movs	r2, #0
 8000a90:	625a      	str	r2, [r3, #36]	@ 0x24
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000a92:	4b3f      	ldr	r3, [pc, #252]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a94:	2200      	movs	r2, #0
 8000a96:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 8000a98:	4b3d      	ldr	r3, [pc, #244]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000a9e:	4b3c      	ldr	r3, [pc, #240]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000aa4:	4b3a      	ldr	r3, [pc, #232]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 8000aaa:	4b39      	ldr	r3, [pc, #228]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000aac:	2200      	movs	r2, #0
 8000aae:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  hadc1.Init.Oversampling.Ratio = 1;
 8000ab2:	4b37      	ldr	r3, [pc, #220]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000ab4:	2201      	movs	r2, #1
 8000ab6:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000ab8:	4835      	ldr	r0, [pc, #212]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000aba:	f001 fcb7 	bl	800242c <HAL_ADC_Init>
 8000abe:	4603      	mov	r3, r0
 8000ac0:	2b00      	cmp	r3, #0
 8000ac2:	d001      	beq.n	8000ac8 <MX_ADC1_Init+0x98>
  {
    Error_Handler();
 8000ac4:	f000 ffc0 	bl	8001a48 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000ac8:	2300      	movs	r3, #0
 8000aca:	61fb      	str	r3, [r7, #28]
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000acc:	f107 031c 	add.w	r3, r7, #28
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	482f      	ldr	r0, [pc, #188]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000ad4:	f002 fe14 	bl	8003700 <HAL_ADCEx_MultiModeConfigChannel>
 8000ad8:	4603      	mov	r3, r0
 8000ada:	2b00      	cmp	r3, #0
 8000adc:	d001      	beq.n	8000ae2 <MX_ADC1_Init+0xb2>
  {
    Error_Handler();
 8000ade:	f000 ffb3 	bl	8001a48 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_15;
 8000ae2:	4b2d      	ldr	r3, [pc, #180]	@ (8000b98 <MX_ADC1_Init+0x168>)
 8000ae4:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000ae6:	2306      	movs	r3, #6
 8000ae8:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_387CYCLES_5;
 8000aea:	2306      	movs	r3, #6
 8000aec:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000aee:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 8000af2:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000af4:	2304      	movs	r3, #4
 8000af6:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000af8:	2300      	movs	r3, #0
 8000afa:	617b      	str	r3, [r7, #20]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000afc:	2300      	movs	r3, #0
 8000afe:	767b      	strb	r3, [r7, #25]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b00:	463b      	mov	r3, r7
 8000b02:	4619      	mov	r1, r3
 8000b04:	4822      	ldr	r0, [pc, #136]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000b06:	f002 f833 	bl	8002b70 <HAL_ADC_ConfigChannel>
 8000b0a:	4603      	mov	r3, r0
 8000b0c:	2b00      	cmp	r3, #0
 8000b0e:	d001      	beq.n	8000b14 <MX_ADC1_Init+0xe4>
  {
    Error_Handler();
 8000b10:	f000 ff9a 	bl	8001a48 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_14;
 8000b14:	4b21      	ldr	r3, [pc, #132]	@ (8000b9c <MX_ADC1_Init+0x16c>)
 8000b16:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8000b18:	230c      	movs	r3, #12
 8000b1a:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b1c:	463b      	mov	r3, r7
 8000b1e:	4619      	mov	r1, r3
 8000b20:	481b      	ldr	r0, [pc, #108]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000b22:	f002 f825 	bl	8002b70 <HAL_ADC_ConfigChannel>
 8000b26:	4603      	mov	r3, r0
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d001      	beq.n	8000b30 <MX_ADC1_Init+0x100>
  {
    Error_Handler();
 8000b2c:	f000 ff8c 	bl	8001a48 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_17;
 8000b30:	4b1b      	ldr	r3, [pc, #108]	@ (8000ba0 <MX_ADC1_Init+0x170>)
 8000b32:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8000b34:	2312      	movs	r3, #18
 8000b36:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b38:	463b      	mov	r3, r7
 8000b3a:	4619      	mov	r1, r3
 8000b3c:	4814      	ldr	r0, [pc, #80]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000b3e:	f002 f817 	bl	8002b70 <HAL_ADC_ConfigChannel>
 8000b42:	4603      	mov	r3, r0
 8000b44:	2b00      	cmp	r3, #0
 8000b46:	d001      	beq.n	8000b4c <MX_ADC1_Init+0x11c>
  {
    Error_Handler();
 8000b48:	f000 ff7e 	bl	8001a48 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_16;
 8000b4c:	4b15      	ldr	r3, [pc, #84]	@ (8000ba4 <MX_ADC1_Init+0x174>)
 8000b4e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000b50:	2318      	movs	r3, #24
 8000b52:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b54:	463b      	mov	r3, r7
 8000b56:	4619      	mov	r1, r3
 8000b58:	480d      	ldr	r0, [pc, #52]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000b5a:	f002 f809 	bl	8002b70 <HAL_ADC_ConfigChannel>
 8000b5e:	4603      	mov	r3, r0
 8000b60:	2b00      	cmp	r3, #0
 8000b62:	d001      	beq.n	8000b68 <MX_ADC1_Init+0x138>
  {
    Error_Handler();
 8000b64:	f000 ff70 	bl	8001a48 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_18;
 8000b68:	4b0f      	ldr	r3, [pc, #60]	@ (8000ba8 <MX_ADC1_Init+0x178>)
 8000b6a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_5;
 8000b6c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000b70:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b72:	463b      	mov	r3, r7
 8000b74:	4619      	mov	r1, r3
 8000b76:	4806      	ldr	r0, [pc, #24]	@ (8000b90 <MX_ADC1_Init+0x160>)
 8000b78:	f001 fffa 	bl	8002b70 <HAL_ADC_ConfigChannel>
 8000b7c:	4603      	mov	r3, r0
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	d001      	beq.n	8000b86 <MX_ADC1_Init+0x156>
  {
    Error_Handler();
 8000b82:	f000 ff61 	bl	8001a48 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000b86:	bf00      	nop
 8000b88:	3728      	adds	r7, #40	@ 0x28
 8000b8a:	46bd      	mov	sp, r7
 8000b8c:	bd80      	pop	{r7, pc}
 8000b8e:	bf00      	nop
 8000b90:	24000198 	.word	0x24000198
 8000b94:	40022000 	.word	0x40022000
 8000b98:	3ef08000 	.word	0x3ef08000
 8000b9c:	3ac04000 	.word	0x3ac04000
 8000ba0:	47520000 	.word	0x47520000
 8000ba4:	43210000 	.word	0x43210000
 8000ba8:	4b840000 	.word	0x4b840000

08000bac <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8000bac:	b580      	push	{r7, lr}
 8000bae:	b088      	sub	sp, #32
 8000bb0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000bb2:	f107 0310 	add.w	r3, r7, #16
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	601a      	str	r2, [r3, #0]
 8000bba:	605a      	str	r2, [r3, #4]
 8000bbc:	609a      	str	r2, [r3, #8]
 8000bbe:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bc0:	1d3b      	adds	r3, r7, #4
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	601a      	str	r2, [r3, #0]
 8000bc6:	605a      	str	r2, [r3, #4]
 8000bc8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8000bca:	4b20      	ldr	r3, [pc, #128]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bcc:	4a20      	ldr	r2, [pc, #128]	@ (8000c50 <MX_TIM8_Init+0xa4>)
 8000bce:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 28000-1;
 8000bd0:	4b1e      	ldr	r3, [pc, #120]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bd2:	f646 525f 	movw	r2, #27999	@ 0x6d5f
 8000bd6:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000bd8:	4b1c      	ldr	r3, [pc, #112]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bda:	2200      	movs	r2, #0
 8000bdc:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 1000-1;
 8000bde:	4b1b      	ldr	r3, [pc, #108]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000be0:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8000be4:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000be6:	4b19      	ldr	r3, [pc, #100]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000be8:	2200      	movs	r2, #0
 8000bea:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8000bec:	4b17      	ldr	r3, [pc, #92]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bf2:	4b16      	ldr	r3, [pc, #88]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bf4:	2200      	movs	r2, #0
 8000bf6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8000bf8:	4814      	ldr	r0, [pc, #80]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000bfa:	f006 fee1 	bl	80079c0 <HAL_TIM_Base_Init>
 8000bfe:	4603      	mov	r3, r0
 8000c00:	2b00      	cmp	r3, #0
 8000c02:	d001      	beq.n	8000c08 <MX_TIM8_Init+0x5c>
  {
    Error_Handler();
 8000c04:	f000 ff20 	bl	8001a48 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c08:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000c0c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 8000c0e:	f107 0310 	add.w	r3, r7, #16
 8000c12:	4619      	mov	r1, r3
 8000c14:	480d      	ldr	r0, [pc, #52]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000c16:	f007 f91b 	bl	8007e50 <HAL_TIM_ConfigClockSource>
 8000c1a:	4603      	mov	r3, r0
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d001      	beq.n	8000c24 <MX_TIM8_Init+0x78>
  {
    Error_Handler();
 8000c20:	f000 ff12 	bl	8001a48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c24:	2300      	movs	r3, #0
 8000c26:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8000c28:	2300      	movs	r3, #0
 8000c2a:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8000c30:	1d3b      	adds	r3, r7, #4
 8000c32:	4619      	mov	r1, r3
 8000c34:	4805      	ldr	r0, [pc, #20]	@ (8000c4c <MX_TIM8_Init+0xa0>)
 8000c36:	f007 fb69 	bl	800830c <HAL_TIMEx_MasterConfigSynchronization>
 8000c3a:	4603      	mov	r3, r0
 8000c3c:	2b00      	cmp	r3, #0
 8000c3e:	d001      	beq.n	8000c44 <MX_TIM8_Init+0x98>
  {
    Error_Handler();
 8000c40:	f000 ff02 	bl	8001a48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 8000c44:	bf00      	nop
 8000c46:	3720      	adds	r7, #32
 8000c48:	46bd      	mov	sp, r7
 8000c4a:	bd80      	pop	{r7, pc}
 8000c4c:	240001fc 	.word	0x240001fc
 8000c50:	40010400 	.word	0x40010400

08000c54 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b08c      	sub	sp, #48	@ 0x30
 8000c58:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c5a:	f107 031c 	add.w	r3, r7, #28
 8000c5e:	2200      	movs	r2, #0
 8000c60:	601a      	str	r2, [r3, #0]
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	60da      	str	r2, [r3, #12]
 8000c68:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c6a:	4b58      	ldr	r3, [pc, #352]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c6c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000c70:	4a56      	ldr	r2, [pc, #344]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c72:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c76:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000c7a:	4b54      	ldr	r3, [pc, #336]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c7c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000c80:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c84:	61bb      	str	r3, [r7, #24]
 8000c86:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c88:	4b50      	ldr	r3, [pc, #320]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c8a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000c8e:	4a4f      	ldr	r2, [pc, #316]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c90:	f043 0301 	orr.w	r3, r3, #1
 8000c94:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000c98:	4b4c      	ldr	r3, [pc, #304]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000c9a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000c9e:	f003 0301 	and.w	r3, r3, #1
 8000ca2:	617b      	str	r3, [r7, #20]
 8000ca4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ca6:	4b49      	ldr	r3, [pc, #292]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000ca8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cac:	4a47      	ldr	r2, [pc, #284]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cae:	f043 0302 	orr.w	r3, r3, #2
 8000cb2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000cb6:	4b45      	ldr	r3, [pc, #276]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cb8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cbc:	f003 0302 	and.w	r3, r3, #2
 8000cc0:	613b      	str	r3, [r7, #16]
 8000cc2:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000cc4:	4b41      	ldr	r3, [pc, #260]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cc6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cca:	4a40      	ldr	r2, [pc, #256]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000ccc:	f043 0310 	orr.w	r3, r3, #16
 8000cd0:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000cd4:	4b3d      	ldr	r3, [pc, #244]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cd6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cda:	f003 0310 	and.w	r3, r3, #16
 8000cde:	60fb      	str	r3, [r7, #12]
 8000ce0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000ce2:	4b3a      	ldr	r3, [pc, #232]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000ce4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ce8:	4a38      	ldr	r2, [pc, #224]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cea:	f043 0308 	orr.w	r3, r3, #8
 8000cee:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000cf2:	4b36      	ldr	r3, [pc, #216]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000cf4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cf8:	f003 0308 	and.w	r3, r3, #8
 8000cfc:	60bb      	str	r3, [r7, #8]
 8000cfe:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d00:	4b32      	ldr	r3, [pc, #200]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000d02:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000d06:	4a31      	ldr	r2, [pc, #196]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000d08:	f043 0304 	orr.w	r3, r3, #4
 8000d0c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000d10:	4b2e      	ldr	r3, [pc, #184]	@ (8000dcc <MX_GPIO_Init+0x178>)
 8000d12:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000d16:	f003 0304 	and.w	r3, r3, #4
 8000d1a:	607b      	str	r3, [r7, #4]
 8000d1c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, PUL_Motor3_Pin|DIR_Motor3_Pin|ENA_Motor3_Pin, GPIO_PIN_RESET);
 8000d1e:	2200      	movs	r2, #0
 8000d20:	2107      	movs	r1, #7
 8000d22:	482b      	ldr	r0, [pc, #172]	@ (8000dd0 <MX_GPIO_Init+0x17c>)
 8000d24:	f003 f8d2 	bl	8003ecc <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, PUL_Motor4_Pin|DIR_Motor4_Pin|ENA_Motor4_Pin|PUL_Motor1_Pin
 8000d28:	2200      	movs	r2, #0
 8000d2a:	f44f 51fc 	mov.w	r1, #8064	@ 0x1f80
 8000d2e:	4829      	ldr	r0, [pc, #164]	@ (8000dd4 <MX_GPIO_Init+0x180>)
 8000d30:	f003 f8cc 	bl	8003ecc <HAL_GPIO_WritePin>
                          |DIR_Motro1_Pin|ENA_Motor1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, PUL_Motor5_Pin|DIR_Motor5_Pin|ENA_Motor5_Pin|PUL_Motor6_Pin
 8000d34:	2200      	movs	r2, #0
 8000d36:	f44f 417c 	mov.w	r1, #64512	@ 0xfc00
 8000d3a:	4827      	ldr	r0, [pc, #156]	@ (8000dd8 <MX_GPIO_Init+0x184>)
 8000d3c:	f003 f8c6 	bl	8003ecc <HAL_GPIO_WritePin>
                          |DIR_Motor6_Pin|ENA_Motor6_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, PUL_Motor2_Pin|DIR_Motor2_Pin|ENA_Motor2_Pin, GPIO_PIN_RESET);
 8000d40:	2200      	movs	r2, #0
 8000d42:	f44f 71e0 	mov.w	r1, #448	@ 0x1c0
 8000d46:	4825      	ldr	r0, [pc, #148]	@ (8000ddc <MX_GPIO_Init+0x188>)
 8000d48:	f003 f8c0 	bl	8003ecc <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PUL_Motor3_Pin DIR_Motor3_Pin ENA_Motor3_Pin */
  GPIO_InitStruct.Pin = PUL_Motor3_Pin|DIR_Motor3_Pin|ENA_Motor3_Pin;
 8000d4c:	2307      	movs	r3, #7
 8000d4e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d50:	2301      	movs	r3, #1
 8000d52:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d54:	2300      	movs	r3, #0
 8000d56:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d58:	2300      	movs	r3, #0
 8000d5a:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d5c:	f107 031c 	add.w	r3, r7, #28
 8000d60:	4619      	mov	r1, r3
 8000d62:	481b      	ldr	r0, [pc, #108]	@ (8000dd0 <MX_GPIO_Init+0x17c>)
 8000d64:	f002 ff02 	bl	8003b6c <HAL_GPIO_Init>

  /*Configure GPIO pins : PUL_Motor4_Pin DIR_Motor4_Pin ENA_Motor4_Pin PUL_Motor1_Pin
                           DIR_Motro1_Pin ENA_Motor1_Pin */
  GPIO_InitStruct.Pin = PUL_Motor4_Pin|DIR_Motor4_Pin|ENA_Motor4_Pin|PUL_Motor1_Pin
 8000d68:	f44f 53fc 	mov.w	r3, #8064	@ 0x1f80
 8000d6c:	61fb      	str	r3, [r7, #28]
                          |DIR_Motro1_Pin|ENA_Motor1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d6e:	2301      	movs	r3, #1
 8000d70:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d72:	2300      	movs	r3, #0
 8000d74:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d76:	2300      	movs	r3, #0
 8000d78:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000d7a:	f107 031c 	add.w	r3, r7, #28
 8000d7e:	4619      	mov	r1, r3
 8000d80:	4814      	ldr	r0, [pc, #80]	@ (8000dd4 <MX_GPIO_Init+0x180>)
 8000d82:	f002 fef3 	bl	8003b6c <HAL_GPIO_Init>

  /*Configure GPIO pins : PUL_Motor5_Pin DIR_Motor5_Pin ENA_Motor5_Pin PUL_Motor6_Pin
                           DIR_Motor6_Pin ENA_Motor6_Pin */
  GPIO_InitStruct.Pin = PUL_Motor5_Pin|DIR_Motor5_Pin|ENA_Motor5_Pin|PUL_Motor6_Pin
 8000d86:	f44f 437c 	mov.w	r3, #64512	@ 0xfc00
 8000d8a:	61fb      	str	r3, [r7, #28]
                          |DIR_Motor6_Pin|ENA_Motor6_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d8c:	2301      	movs	r3, #1
 8000d8e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d90:	2300      	movs	r3, #0
 8000d92:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d94:	2300      	movs	r3, #0
 8000d96:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d98:	f107 031c 	add.w	r3, r7, #28
 8000d9c:	4619      	mov	r1, r3
 8000d9e:	480e      	ldr	r0, [pc, #56]	@ (8000dd8 <MX_GPIO_Init+0x184>)
 8000da0:	f002 fee4 	bl	8003b6c <HAL_GPIO_Init>

  /*Configure GPIO pins : PUL_Motor2_Pin DIR_Motor2_Pin ENA_Motor2_Pin */
  GPIO_InitStruct.Pin = PUL_Motor2_Pin|DIR_Motor2_Pin|ENA_Motor2_Pin;
 8000da4:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
 8000da8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000daa:	2301      	movs	r3, #1
 8000dac:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dae:	2300      	movs	r3, #0
 8000db0:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000db2:	2300      	movs	r3, #0
 8000db4:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000db6:	f107 031c 	add.w	r3, r7, #28
 8000dba:	4619      	mov	r1, r3
 8000dbc:	4807      	ldr	r0, [pc, #28]	@ (8000ddc <MX_GPIO_Init+0x188>)
 8000dbe:	f002 fed5 	bl	8003b6c <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000dc2:	bf00      	nop
 8000dc4:	3730      	adds	r7, #48	@ 0x30
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	bd80      	pop	{r7, pc}
 8000dca:	bf00      	nop
 8000dcc:	58024400 	.word	0x58024400
 8000dd0:	58020400 	.word	0x58020400
 8000dd4:	58021000 	.word	0x58021000
 8000dd8:	58020c00 	.word	0x58020c00
 8000ddc:	58020800 	.word	0x58020800

08000de0 <FirstMotor>:
 * @param  argument: Not used
 * @retval None
 */
/* USER CODE END Header_FirstMotor */
void FirstMotor(void *argument)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b08a      	sub	sp, #40	@ 0x28
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
    HAL_GPIO_WritePin(motor1.enablePort, motor1.enablePin, GPIO_PIN_SET);
 8000de8:	4b78      	ldr	r3, [pc, #480]	@ (8000fcc <FirstMotor+0x1ec>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	4a77      	ldr	r2, [pc, #476]	@ (8000fcc <FirstMotor+0x1ec>)
 8000dee:	8891      	ldrh	r1, [r2, #4]
 8000df0:	2201      	movs	r2, #1
 8000df2:	4618      	mov	r0, r3
 8000df4:	f003 f86a 	bl	8003ecc <HAL_GPIO_WritePin>
    motor1.enabled = MOTOR_DISABLED;
 8000df8:	4b74      	ldr	r3, [pc, #464]	@ (8000fcc <FirstMotor+0x1ec>)
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor1.lastStablePotValue = readStablePot(&motor1);
 8000e00:	4872      	ldr	r0, [pc, #456]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e02:	f7ff fa6d 	bl	80002e0 <readStablePot>
 8000e06:	4603      	mov	r3, r0
 8000e08:	4a70      	ldr	r2, [pc, #448]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e0a:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor1);
 8000e0c:	486f      	ldr	r0, [pc, #444]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e0e:	f7ff fa67 	bl	80002e0 <readStablePot>
 8000e12:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor1.lastStablePotValue);
 8000e14:	4b6d      	ldr	r3, [pc, #436]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000e18:	6a3a      	ldr	r2, [r7, #32]
 8000e1a:	1ad3      	subs	r3, r2, r3
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	bfb8      	it	lt
 8000e20:	425b      	neglt	r3, r3
 8000e22:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 8000e24:	69fb      	ldr	r3, [r7, #28]
 8000e26:	2b64      	cmp	r3, #100	@ 0x64
 8000e28:	dc09      	bgt.n	8000e3e <FirstMotor+0x5e>
                (motor1.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8000e2a:	4b68      	ldr	r3, [pc, #416]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e2c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 8000e30:	2b01      	cmp	r3, #1
 8000e32:	f040 8089 	bne.w	8000f48 <FirstMotor+0x168>
                (motor1.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8000e36:	69fb      	ldr	r3, [r7, #28]
 8000e38:	2b32      	cmp	r3, #50	@ 0x32
 8000e3a:	f340 8085 	ble.w	8000f48 <FirstMotor+0x168>
            if(motor1.enabled == MOTOR_DISABLED) {
 8000e3e:	4b63      	ldr	r3, [pc, #396]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e40:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d10b      	bne.n	8000e60 <FirstMotor+0x80>
                HAL_GPIO_WritePin(motor1.enablePort, motor1.enablePin, GPIO_PIN_RESET);
 8000e48:	4b60      	ldr	r3, [pc, #384]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	4a5f      	ldr	r2, [pc, #380]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e4e:	8891      	ldrh	r1, [r2, #4]
 8000e50:	2200      	movs	r2, #0
 8000e52:	4618      	mov	r0, r3
 8000e54:	f003 f83a 	bl	8003ecc <HAL_GPIO_WritePin>
                motor1.enabled = MOTOR_ENABLED;
 8000e58:	4b5c      	ldr	r3, [pc, #368]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e5a:	2201      	movs	r2, #1
 8000e5c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor1.rotationRange;
 8000e60:	6a3b      	ldr	r3, [r7, #32]
 8000e62:	ee07 3a90 	vmov	s15, r3
 8000e66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000e6a:	eddf 6a59 	vldr	s13, [pc, #356]	@ 8000fd0 <FirstMotor+0x1f0>
 8000e6e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8000e72:	4b56      	ldr	r3, [pc, #344]	@ (8000fcc <FirstMotor+0x1ec>)
 8000e74:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8000e78:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000e7c:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8000e80:	ed97 7a04 	vldr	s14, [r7, #16]
 8000e84:	eddf 6a53 	vldr	s13, [pc, #332]	@ 8000fd4 <FirstMotor+0x1f4>
 8000e88:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000e8c:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 8000fd8 <FirstMotor+0x1f8>
 8000e90:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000e94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000e98:	ee17 3a90 	vmov	r3, s15
 8000e9c:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor1.rotationRange / 360.0f);
 8000e9e:	4b4b      	ldr	r3, [pc, #300]	@ (8000fcc <FirstMotor+0x1ec>)
 8000ea0:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8000ea4:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 8000fd4 <FirstMotor+0x1f4>
 8000ea8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000eac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000eb0:	ee17 3a90 	vmov	r3, s15
 8000eb4:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor1.lastStablePotValue > 64535) {
 8000eb6:	6a3b      	ldr	r3, [r7, #32]
 8000eb8:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000ebc:	da1e      	bge.n	8000efc <FirstMotor+0x11c>
 8000ebe:	4b43      	ldr	r3, [pc, #268]	@ (8000fcc <FirstMotor+0x1ec>)
 8000ec0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000ec2:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 8000ec6:	4293      	cmp	r3, r2
 8000ec8:	dd18      	ble.n	8000efc <FirstMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 8000eca:	68fb      	ldr	r3, [r7, #12]
 8000ecc:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 8000ed0:	fb02 f303 	mul.w	r3, r2, r3
 8000ed4:	6a3a      	ldr	r2, [r7, #32]
 8000ed6:	ee07 2a90 	vmov	s15, r2
 8000eda:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000ede:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 8000fd0 <FirstMotor+0x1f0>
 8000ee2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000ee6:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 8000fd8 <FirstMotor+0x1f8>
 8000eea:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000eee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000ef2:	ee17 2a90 	vmov	r2, s15
 8000ef6:	4413      	add	r3, r2
 8000ef8:	627b      	str	r3, [r7, #36]	@ 0x24
 8000efa:	e01d      	b.n	8000f38 <FirstMotor+0x158>
            } else if (potValue > 64535 && motor1.lastStablePotValue < 1000) {
 8000efc:	6a3b      	ldr	r3, [r7, #32]
 8000efe:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 8000f02:	4293      	cmp	r3, r2
 8000f04:	dd18      	ble.n	8000f38 <FirstMotor+0x158>
 8000f06:	4b31      	ldr	r3, [pc, #196]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000f0a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000f0e:	da13      	bge.n	8000f38 <FirstMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 8000f10:	6a3b      	ldr	r3, [r7, #32]
 8000f12:	ee07 3a90 	vmov	s15, r3
 8000f16:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f1a:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 8000fd0 <FirstMotor+0x1f0>
 8000f1e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f22:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 8000fd8 <FirstMotor+0x1f8>
 8000f26:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f2e:	ee17 3a90 	vmov	r3, s15
 8000f32:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 8000f36:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor1, targetSteps);
 8000f38:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8000f3a:	4824      	ldr	r0, [pc, #144]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f3c:	f7ff fab6 	bl	80004ac <moveToPositionSmooth>
            motor1.lastStablePotValue = potValue;
 8000f40:	4a22      	ldr	r2, [pc, #136]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f42:	6a3b      	ldr	r3, [r7, #32]
 8000f44:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor1.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8000f46:	e03d      	b.n	8000fc4 <FirstMotor+0x1e4>
        }
        else if(motor1.enabled == MOTOR_ENABLED) {
 8000f48:	4b20      	ldr	r3, [pc, #128]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f4a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8000f4e:	2b01      	cmp	r3, #1
 8000f50:	d138      	bne.n	8000fc4 <FirstMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor1.lastStablePotValue / 65535.0f * motor1.rotationRange;
 8000f52:	4b1e      	ldr	r3, [pc, #120]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000f56:	ee07 3a90 	vmov	s15, r3
 8000f5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f5e:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 8000fd0 <FirstMotor+0x1f0>
 8000f62:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8000f66:	4b19      	ldr	r3, [pc, #100]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f68:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8000f6c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8000f70:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8000f74:	ed97 7a06 	vldr	s14, [r7, #24]
 8000f78:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8000fd4 <FirstMotor+0x1f4>
 8000f7c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000f80:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 8000fd8 <FirstMotor+0x1f8>
 8000f84:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000f88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f8c:	ee17 3a90 	vmov	r3, s15
 8000f90:	617b      	str	r3, [r7, #20]

            if(abs(motor1.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 8000f92:	4b0e      	ldr	r3, [pc, #56]	@ (8000fcc <FirstMotor+0x1ec>)
 8000f94:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000f96:	697b      	ldr	r3, [r7, #20]
 8000f98:	1ad3      	subs	r3, r2, r3
 8000f9a:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 8000f9e:	db11      	blt.n	8000fc4 <FirstMotor+0x1e4>
 8000fa0:	4b0a      	ldr	r3, [pc, #40]	@ (8000fcc <FirstMotor+0x1ec>)
 8000fa2:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000fa4:	697b      	ldr	r3, [r7, #20]
 8000fa6:	1ad3      	subs	r3, r2, r3
 8000fa8:	2b32      	cmp	r3, #50	@ 0x32
 8000faa:	dc0b      	bgt.n	8000fc4 <FirstMotor+0x1e4>
                HAL_GPIO_WritePin(motor1.enablePort, motor1.enablePin, GPIO_PIN_SET);
 8000fac:	4b07      	ldr	r3, [pc, #28]	@ (8000fcc <FirstMotor+0x1ec>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	4a06      	ldr	r2, [pc, #24]	@ (8000fcc <FirstMotor+0x1ec>)
 8000fb2:	8891      	ldrh	r1, [r2, #4]
 8000fb4:	2201      	movs	r2, #1
 8000fb6:	4618      	mov	r0, r3
 8000fb8:	f002 ff88 	bl	8003ecc <HAL_GPIO_WritePin>
                motor1.enabled = MOTOR_DISABLED;
 8000fbc:	4b03      	ldr	r3, [pc, #12]	@ (8000fcc <FirstMotor+0x1ec>)
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
        osDelay(10);
 8000fc4:	200a      	movs	r0, #10
 8000fc6:	f007 fb6d 	bl	80086a4 <osDelay>
    for(;;) {
 8000fca:	e71f      	b.n	8000e0c <FirstMotor+0x2c>
 8000fcc:	24000000 	.word	0x24000000
 8000fd0:	477fff00 	.word	0x477fff00
 8000fd4:	43b40000 	.word	0x43b40000
 8000fd8:	45480000 	.word	0x45480000

08000fdc <SecondMotor>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_SecondMotor */
void SecondMotor(void *argument)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b08a      	sub	sp, #40	@ 0x28
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
	/* USER CODE BEGIN SecondMotor */
    HAL_GPIO_WritePin(motor2.enablePort, motor2.enablePin, GPIO_PIN_SET);
 8000fe4:	4b78      	ldr	r3, [pc, #480]	@ (80011c8 <SecondMotor+0x1ec>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	4a77      	ldr	r2, [pc, #476]	@ (80011c8 <SecondMotor+0x1ec>)
 8000fea:	8891      	ldrh	r1, [r2, #4]
 8000fec:	2201      	movs	r2, #1
 8000fee:	4618      	mov	r0, r3
 8000ff0:	f002 ff6c 	bl	8003ecc <HAL_GPIO_WritePin>
    motor2.enabled = MOTOR_DISABLED;
 8000ff4:	4b74      	ldr	r3, [pc, #464]	@ (80011c8 <SecondMotor+0x1ec>)
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor2.lastStablePotValue = readStablePot(&motor2);
 8000ffc:	4872      	ldr	r0, [pc, #456]	@ (80011c8 <SecondMotor+0x1ec>)
 8000ffe:	f7ff f96f 	bl	80002e0 <readStablePot>
 8001002:	4603      	mov	r3, r0
 8001004:	4a70      	ldr	r2, [pc, #448]	@ (80011c8 <SecondMotor+0x1ec>)
 8001006:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor2);
 8001008:	486f      	ldr	r0, [pc, #444]	@ (80011c8 <SecondMotor+0x1ec>)
 800100a:	f7ff f969 	bl	80002e0 <readStablePot>
 800100e:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor2.lastStablePotValue);
 8001010:	4b6d      	ldr	r3, [pc, #436]	@ (80011c8 <SecondMotor+0x1ec>)
 8001012:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001014:	6a3a      	ldr	r2, [r7, #32]
 8001016:	1ad3      	subs	r3, r2, r3
 8001018:	2b00      	cmp	r3, #0
 800101a:	bfb8      	it	lt
 800101c:	425b      	neglt	r3, r3
 800101e:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 8001020:	69fb      	ldr	r3, [r7, #28]
 8001022:	2b64      	cmp	r3, #100	@ 0x64
 8001024:	dc09      	bgt.n	800103a <SecondMotor+0x5e>
                (motor2.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001026:	4b68      	ldr	r3, [pc, #416]	@ (80011c8 <SecondMotor+0x1ec>)
 8001028:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 800102c:	2b01      	cmp	r3, #1
 800102e:	f040 8089 	bne.w	8001144 <SecondMotor+0x168>
                (motor2.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001032:	69fb      	ldr	r3, [r7, #28]
 8001034:	2b32      	cmp	r3, #50	@ 0x32
 8001036:	f340 8085 	ble.w	8001144 <SecondMotor+0x168>
            if(motor2.enabled == MOTOR_DISABLED) {
 800103a:	4b63      	ldr	r3, [pc, #396]	@ (80011c8 <SecondMotor+0x1ec>)
 800103c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001040:	2b00      	cmp	r3, #0
 8001042:	d10b      	bne.n	800105c <SecondMotor+0x80>
                HAL_GPIO_WritePin(motor2.enablePort, motor2.enablePin, GPIO_PIN_RESET);
 8001044:	4b60      	ldr	r3, [pc, #384]	@ (80011c8 <SecondMotor+0x1ec>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	4a5f      	ldr	r2, [pc, #380]	@ (80011c8 <SecondMotor+0x1ec>)
 800104a:	8891      	ldrh	r1, [r2, #4]
 800104c:	2200      	movs	r2, #0
 800104e:	4618      	mov	r0, r3
 8001050:	f002 ff3c 	bl	8003ecc <HAL_GPIO_WritePin>
                motor2.enabled = MOTOR_ENABLED;
 8001054:	4b5c      	ldr	r3, [pc, #368]	@ (80011c8 <SecondMotor+0x1ec>)
 8001056:	2201      	movs	r2, #1
 8001058:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor2.rotationRange;
 800105c:	6a3b      	ldr	r3, [r7, #32]
 800105e:	ee07 3a90 	vmov	s15, r3
 8001062:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001066:	eddf 6a59 	vldr	s13, [pc, #356]	@ 80011cc <SecondMotor+0x1f0>
 800106a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800106e:	4b56      	ldr	r3, [pc, #344]	@ (80011c8 <SecondMotor+0x1ec>)
 8001070:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001074:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001078:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 800107c:	ed97 7a04 	vldr	s14, [r7, #16]
 8001080:	eddf 6a53 	vldr	s13, [pc, #332]	@ 80011d0 <SecondMotor+0x1f4>
 8001084:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001088:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80011d4 <SecondMotor+0x1f8>
 800108c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001090:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001094:	ee17 3a90 	vmov	r3, s15
 8001098:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor2.rotationRange / 360.0f);
 800109a:	4b4b      	ldr	r3, [pc, #300]	@ (80011c8 <SecondMotor+0x1ec>)
 800109c:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 80010a0:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80011d0 <SecondMotor+0x1f4>
 80010a4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80010a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80010ac:	ee17 3a90 	vmov	r3, s15
 80010b0:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor2.lastStablePotValue > 64535) {
 80010b2:	6a3b      	ldr	r3, [r7, #32]
 80010b4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80010b8:	da1e      	bge.n	80010f8 <SecondMotor+0x11c>
 80010ba:	4b43      	ldr	r3, [pc, #268]	@ (80011c8 <SecondMotor+0x1ec>)
 80010bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80010be:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80010c2:	4293      	cmp	r3, r2
 80010c4:	dd18      	ble.n	80010f8 <SecondMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 80010c6:	68fb      	ldr	r3, [r7, #12]
 80010c8:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 80010cc:	fb02 f303 	mul.w	r3, r2, r3
 80010d0:	6a3a      	ldr	r2, [r7, #32]
 80010d2:	ee07 2a90 	vmov	s15, r2
 80010d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80010da:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 80011cc <SecondMotor+0x1f0>
 80010de:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80010e2:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 80011d4 <SecondMotor+0x1f8>
 80010e6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80010ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80010ee:	ee17 2a90 	vmov	r2, s15
 80010f2:	4413      	add	r3, r2
 80010f4:	627b      	str	r3, [r7, #36]	@ 0x24
 80010f6:	e01d      	b.n	8001134 <SecondMotor+0x158>
            } else if (potValue > 64535 && motor2.lastStablePotValue < 1000) {
 80010f8:	6a3b      	ldr	r3, [r7, #32]
 80010fa:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80010fe:	4293      	cmp	r3, r2
 8001100:	dd18      	ble.n	8001134 <SecondMotor+0x158>
 8001102:	4b31      	ldr	r3, [pc, #196]	@ (80011c8 <SecondMotor+0x1ec>)
 8001104:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001106:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800110a:	da13      	bge.n	8001134 <SecondMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 800110c:	6a3b      	ldr	r3, [r7, #32]
 800110e:	ee07 3a90 	vmov	s15, r3
 8001112:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001116:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 80011cc <SecondMotor+0x1f0>
 800111a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800111e:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 80011d4 <SecondMotor+0x1f8>
 8001122:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001126:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800112a:	ee17 3a90 	vmov	r3, s15
 800112e:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 8001132:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor2, targetSteps);
 8001134:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8001136:	4824      	ldr	r0, [pc, #144]	@ (80011c8 <SecondMotor+0x1ec>)
 8001138:	f7ff f9b8 	bl	80004ac <moveToPositionSmooth>
            motor2.lastStablePotValue = potValue;
 800113c:	4a22      	ldr	r2, [pc, #136]	@ (80011c8 <SecondMotor+0x1ec>)
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor2.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001142:	e03d      	b.n	80011c0 <SecondMotor+0x1e4>
        }
        else if(motor2.enabled == MOTOR_ENABLED) {
 8001144:	4b20      	ldr	r3, [pc, #128]	@ (80011c8 <SecondMotor+0x1ec>)
 8001146:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800114a:	2b01      	cmp	r3, #1
 800114c:	d138      	bne.n	80011c0 <SecondMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor2.lastStablePotValue / 65535.0f * motor2.rotationRange;
 800114e:	4b1e      	ldr	r3, [pc, #120]	@ (80011c8 <SecondMotor+0x1ec>)
 8001150:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001152:	ee07 3a90 	vmov	s15, r3
 8001156:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800115a:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80011cc <SecondMotor+0x1f0>
 800115e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001162:	4b19      	ldr	r3, [pc, #100]	@ (80011c8 <SecondMotor+0x1ec>)
 8001164:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001168:	ee67 7a27 	vmul.f32	s15, s14, s15
 800116c:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001170:	ed97 7a06 	vldr	s14, [r7, #24]
 8001174:	eddf 6a16 	vldr	s13, [pc, #88]	@ 80011d0 <SecondMotor+0x1f4>
 8001178:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800117c:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80011d4 <SecondMotor+0x1f8>
 8001180:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001184:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001188:	ee17 3a90 	vmov	r3, s15
 800118c:	617b      	str	r3, [r7, #20]

            if(abs(motor2.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 800118e:	4b0e      	ldr	r3, [pc, #56]	@ (80011c8 <SecondMotor+0x1ec>)
 8001190:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001192:	697b      	ldr	r3, [r7, #20]
 8001194:	1ad3      	subs	r3, r2, r3
 8001196:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 800119a:	db11      	blt.n	80011c0 <SecondMotor+0x1e4>
 800119c:	4b0a      	ldr	r3, [pc, #40]	@ (80011c8 <SecondMotor+0x1ec>)
 800119e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80011a0:	697b      	ldr	r3, [r7, #20]
 80011a2:	1ad3      	subs	r3, r2, r3
 80011a4:	2b32      	cmp	r3, #50	@ 0x32
 80011a6:	dc0b      	bgt.n	80011c0 <SecondMotor+0x1e4>
                HAL_GPIO_WritePin(motor2.enablePort, motor2.enablePin, GPIO_PIN_SET);
 80011a8:	4b07      	ldr	r3, [pc, #28]	@ (80011c8 <SecondMotor+0x1ec>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	4a06      	ldr	r2, [pc, #24]	@ (80011c8 <SecondMotor+0x1ec>)
 80011ae:	8891      	ldrh	r1, [r2, #4]
 80011b0:	2201      	movs	r2, #1
 80011b2:	4618      	mov	r0, r3
 80011b4:	f002 fe8a 	bl	8003ecc <HAL_GPIO_WritePin>
                motor2.enabled = MOTOR_DISABLED;
 80011b8:	4b03      	ldr	r3, [pc, #12]	@ (80011c8 <SecondMotor+0x1ec>)
 80011ba:	2200      	movs	r2, #0
 80011bc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
		osDelay(10); // Delay using FreeRTOS (10ms delay)
 80011c0:	200a      	movs	r0, #10
 80011c2:	f007 fa6f 	bl	80086a4 <osDelay>
    for(;;) {
 80011c6:	e71f      	b.n	8001008 <SecondMotor+0x2c>
 80011c8:	2400003c 	.word	0x2400003c
 80011cc:	477fff00 	.word	0x477fff00
 80011d0:	43b40000 	.word	0x43b40000
 80011d4:	45480000 	.word	0x45480000

080011d8 <ThirdMotor>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_ThirdMotor */
void ThirdMotor(void *argument)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b08a      	sub	sp, #40	@ 0x28
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN ThirdMotor */
    HAL_GPIO_WritePin(motor3.enablePort, motor3.enablePin, GPIO_PIN_SET);
 80011e0:	4b78      	ldr	r3, [pc, #480]	@ (80013c4 <ThirdMotor+0x1ec>)
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	4a77      	ldr	r2, [pc, #476]	@ (80013c4 <ThirdMotor+0x1ec>)
 80011e6:	8891      	ldrh	r1, [r2, #4]
 80011e8:	2201      	movs	r2, #1
 80011ea:	4618      	mov	r0, r3
 80011ec:	f002 fe6e 	bl	8003ecc <HAL_GPIO_WritePin>
    motor3.enabled = MOTOR_DISABLED;
 80011f0:	4b74      	ldr	r3, [pc, #464]	@ (80013c4 <ThirdMotor+0x1ec>)
 80011f2:	2200      	movs	r2, #0
 80011f4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor3.lastStablePotValue = readStablePot(&motor3);
 80011f8:	4872      	ldr	r0, [pc, #456]	@ (80013c4 <ThirdMotor+0x1ec>)
 80011fa:	f7ff f871 	bl	80002e0 <readStablePot>
 80011fe:	4603      	mov	r3, r0
 8001200:	4a70      	ldr	r2, [pc, #448]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001202:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor3);
 8001204:	486f      	ldr	r0, [pc, #444]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001206:	f7ff f86b 	bl	80002e0 <readStablePot>
 800120a:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor3.lastStablePotValue);
 800120c:	4b6d      	ldr	r3, [pc, #436]	@ (80013c4 <ThirdMotor+0x1ec>)
 800120e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001210:	6a3a      	ldr	r2, [r7, #32]
 8001212:	1ad3      	subs	r3, r2, r3
 8001214:	2b00      	cmp	r3, #0
 8001216:	bfb8      	it	lt
 8001218:	425b      	neglt	r3, r3
 800121a:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 800121c:	69fb      	ldr	r3, [r7, #28]
 800121e:	2b64      	cmp	r3, #100	@ 0x64
 8001220:	dc09      	bgt.n	8001236 <ThirdMotor+0x5e>
                (motor3.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001222:	4b68      	ldr	r3, [pc, #416]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001224:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 8001228:	2b01      	cmp	r3, #1
 800122a:	f040 8089 	bne.w	8001340 <ThirdMotor+0x168>
                (motor3.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800122e:	69fb      	ldr	r3, [r7, #28]
 8001230:	2b32      	cmp	r3, #50	@ 0x32
 8001232:	f340 8085 	ble.w	8001340 <ThirdMotor+0x168>
            if(motor3.enabled == MOTOR_DISABLED) {
 8001236:	4b63      	ldr	r3, [pc, #396]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001238:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800123c:	2b00      	cmp	r3, #0
 800123e:	d10b      	bne.n	8001258 <ThirdMotor+0x80>
                HAL_GPIO_WritePin(motor3.enablePort, motor3.enablePin, GPIO_PIN_RESET);
 8001240:	4b60      	ldr	r3, [pc, #384]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	4a5f      	ldr	r2, [pc, #380]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001246:	8891      	ldrh	r1, [r2, #4]
 8001248:	2200      	movs	r2, #0
 800124a:	4618      	mov	r0, r3
 800124c:	f002 fe3e 	bl	8003ecc <HAL_GPIO_WritePin>
                motor3.enabled = MOTOR_ENABLED;
 8001250:	4b5c      	ldr	r3, [pc, #368]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001252:	2201      	movs	r2, #1
 8001254:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor3.rotationRange;
 8001258:	6a3b      	ldr	r3, [r7, #32]
 800125a:	ee07 3a90 	vmov	s15, r3
 800125e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001262:	eddf 6a59 	vldr	s13, [pc, #356]	@ 80013c8 <ThirdMotor+0x1f0>
 8001266:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800126a:	4b56      	ldr	r3, [pc, #344]	@ (80013c4 <ThirdMotor+0x1ec>)
 800126c:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001270:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001274:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001278:	ed97 7a04 	vldr	s14, [r7, #16]
 800127c:	eddf 6a53 	vldr	s13, [pc, #332]	@ 80013cc <ThirdMotor+0x1f4>
 8001280:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001284:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80013d0 <ThirdMotor+0x1f8>
 8001288:	ee67 7a87 	vmul.f32	s15, s15, s14
 800128c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001290:	ee17 3a90 	vmov	r3, s15
 8001294:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor3.rotationRange / 360.0f);
 8001296:	4b4b      	ldr	r3, [pc, #300]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001298:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 800129c:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80013cc <ThirdMotor+0x1f4>
 80012a0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80012a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80012a8:	ee17 3a90 	vmov	r3, s15
 80012ac:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor3.lastStablePotValue > 64535) {
 80012ae:	6a3b      	ldr	r3, [r7, #32]
 80012b0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80012b4:	da1e      	bge.n	80012f4 <ThirdMotor+0x11c>
 80012b6:	4b43      	ldr	r3, [pc, #268]	@ (80013c4 <ThirdMotor+0x1ec>)
 80012b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80012ba:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80012be:	4293      	cmp	r3, r2
 80012c0:	dd18      	ble.n	80012f4 <ThirdMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 80012c2:	68fb      	ldr	r3, [r7, #12]
 80012c4:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 80012c8:	fb02 f303 	mul.w	r3, r2, r3
 80012cc:	6a3a      	ldr	r2, [r7, #32]
 80012ce:	ee07 2a90 	vmov	s15, r2
 80012d2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012d6:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 80013c8 <ThirdMotor+0x1f0>
 80012da:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80012de:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 80013d0 <ThirdMotor+0x1f8>
 80012e2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80012ea:	ee17 2a90 	vmov	r2, s15
 80012ee:	4413      	add	r3, r2
 80012f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80012f2:	e01d      	b.n	8001330 <ThirdMotor+0x158>
            } else if (potValue > 64535 && motor3.lastStablePotValue < 1000) {
 80012f4:	6a3b      	ldr	r3, [r7, #32]
 80012f6:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80012fa:	4293      	cmp	r3, r2
 80012fc:	dd18      	ble.n	8001330 <ThirdMotor+0x158>
 80012fe:	4b31      	ldr	r3, [pc, #196]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001300:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001302:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001306:	da13      	bge.n	8001330 <ThirdMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 8001308:	6a3b      	ldr	r3, [r7, #32]
 800130a:	ee07 3a90 	vmov	s15, r3
 800130e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001312:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 80013c8 <ThirdMotor+0x1f0>
 8001316:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800131a:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 80013d0 <ThirdMotor+0x1f8>
 800131e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001322:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001326:	ee17 3a90 	vmov	r3, s15
 800132a:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 800132e:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor3, targetSteps);
 8001330:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8001332:	4824      	ldr	r0, [pc, #144]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001334:	f7ff f8ba 	bl	80004ac <moveToPositionSmooth>
            motor3.lastStablePotValue = potValue;
 8001338:	4a22      	ldr	r2, [pc, #136]	@ (80013c4 <ThirdMotor+0x1ec>)
 800133a:	6a3b      	ldr	r3, [r7, #32]
 800133c:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor3.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800133e:	e03d      	b.n	80013bc <ThirdMotor+0x1e4>
        }
        else if(motor3.enabled == MOTOR_ENABLED) {
 8001340:	4b20      	ldr	r3, [pc, #128]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001342:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001346:	2b01      	cmp	r3, #1
 8001348:	d138      	bne.n	80013bc <ThirdMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor3.lastStablePotValue / 65535.0f * motor3.rotationRange;
 800134a:	4b1e      	ldr	r3, [pc, #120]	@ (80013c4 <ThirdMotor+0x1ec>)
 800134c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800134e:	ee07 3a90 	vmov	s15, r3
 8001352:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001356:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80013c8 <ThirdMotor+0x1f0>
 800135a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800135e:	4b19      	ldr	r3, [pc, #100]	@ (80013c4 <ThirdMotor+0x1ec>)
 8001360:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001364:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001368:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 800136c:	ed97 7a06 	vldr	s14, [r7, #24]
 8001370:	eddf 6a16 	vldr	s13, [pc, #88]	@ 80013cc <ThirdMotor+0x1f4>
 8001374:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001378:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80013d0 <ThirdMotor+0x1f8>
 800137c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001380:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001384:	ee17 3a90 	vmov	r3, s15
 8001388:	617b      	str	r3, [r7, #20]

            if(abs(motor3.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 800138a:	4b0e      	ldr	r3, [pc, #56]	@ (80013c4 <ThirdMotor+0x1ec>)
 800138c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800138e:	697b      	ldr	r3, [r7, #20]
 8001390:	1ad3      	subs	r3, r2, r3
 8001392:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 8001396:	db11      	blt.n	80013bc <ThirdMotor+0x1e4>
 8001398:	4b0a      	ldr	r3, [pc, #40]	@ (80013c4 <ThirdMotor+0x1ec>)
 800139a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800139c:	697b      	ldr	r3, [r7, #20]
 800139e:	1ad3      	subs	r3, r2, r3
 80013a0:	2b32      	cmp	r3, #50	@ 0x32
 80013a2:	dc0b      	bgt.n	80013bc <ThirdMotor+0x1e4>
                HAL_GPIO_WritePin(motor3.enablePort, motor3.enablePin, GPIO_PIN_SET);
 80013a4:	4b07      	ldr	r3, [pc, #28]	@ (80013c4 <ThirdMotor+0x1ec>)
 80013a6:	681b      	ldr	r3, [r3, #0]
 80013a8:	4a06      	ldr	r2, [pc, #24]	@ (80013c4 <ThirdMotor+0x1ec>)
 80013aa:	8891      	ldrh	r1, [r2, #4]
 80013ac:	2201      	movs	r2, #1
 80013ae:	4618      	mov	r0, r3
 80013b0:	f002 fd8c 	bl	8003ecc <HAL_GPIO_WritePin>
                motor3.enabled = MOTOR_DISABLED;
 80013b4:	4b03      	ldr	r3, [pc, #12]	@ (80013c4 <ThirdMotor+0x1ec>)
 80013b6:	2200      	movs	r2, #0
 80013b8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
		osDelay(10); // Delay using FreeRTOS (10ms delay)
 80013bc:	200a      	movs	r0, #10
 80013be:	f007 f971 	bl	80086a4 <osDelay>
    for(;;) {
 80013c2:	e71f      	b.n	8001204 <ThirdMotor+0x2c>
 80013c4:	24000078 	.word	0x24000078
 80013c8:	477fff00 	.word	0x477fff00
 80013cc:	43b40000 	.word	0x43b40000
 80013d0:	45480000 	.word	0x45480000

080013d4 <FourthMotor>:
 * @param argument: Not used
 * @retval None
 */
/* USER CODE END Header_FourthMotor */
void FourthMotor(void *argument)
{
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b08a      	sub	sp, #40	@ 0x28
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN FourthMotor */
    HAL_GPIO_WritePin(motor4.enablePort, motor4.enablePin, GPIO_PIN_SET);
 80013dc:	4b78      	ldr	r3, [pc, #480]	@ (80015c0 <FourthMotor+0x1ec>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	4a77      	ldr	r2, [pc, #476]	@ (80015c0 <FourthMotor+0x1ec>)
 80013e2:	8891      	ldrh	r1, [r2, #4]
 80013e4:	2201      	movs	r2, #1
 80013e6:	4618      	mov	r0, r3
 80013e8:	f002 fd70 	bl	8003ecc <HAL_GPIO_WritePin>
    motor4.enabled = MOTOR_DISABLED;
 80013ec:	4b74      	ldr	r3, [pc, #464]	@ (80015c0 <FourthMotor+0x1ec>)
 80013ee:	2200      	movs	r2, #0
 80013f0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor4.lastStablePotValue = readStablePot(&motor4);
 80013f4:	4872      	ldr	r0, [pc, #456]	@ (80015c0 <FourthMotor+0x1ec>)
 80013f6:	f7fe ff73 	bl	80002e0 <readStablePot>
 80013fa:	4603      	mov	r3, r0
 80013fc:	4a70      	ldr	r2, [pc, #448]	@ (80015c0 <FourthMotor+0x1ec>)
 80013fe:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor4);
 8001400:	486f      	ldr	r0, [pc, #444]	@ (80015c0 <FourthMotor+0x1ec>)
 8001402:	f7fe ff6d 	bl	80002e0 <readStablePot>
 8001406:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor4.lastStablePotValue);
 8001408:	4b6d      	ldr	r3, [pc, #436]	@ (80015c0 <FourthMotor+0x1ec>)
 800140a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800140c:	6a3a      	ldr	r2, [r7, #32]
 800140e:	1ad3      	subs	r3, r2, r3
 8001410:	2b00      	cmp	r3, #0
 8001412:	bfb8      	it	lt
 8001414:	425b      	neglt	r3, r3
 8001416:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 8001418:	69fb      	ldr	r3, [r7, #28]
 800141a:	2b64      	cmp	r3, #100	@ 0x64
 800141c:	dc09      	bgt.n	8001432 <FourthMotor+0x5e>
                (motor4.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800141e:	4b68      	ldr	r3, [pc, #416]	@ (80015c0 <FourthMotor+0x1ec>)
 8001420:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 8001424:	2b01      	cmp	r3, #1
 8001426:	f040 8089 	bne.w	800153c <FourthMotor+0x168>
                (motor4.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800142a:	69fb      	ldr	r3, [r7, #28]
 800142c:	2b32      	cmp	r3, #50	@ 0x32
 800142e:	f340 8085 	ble.w	800153c <FourthMotor+0x168>
            if(motor4.enabled == MOTOR_DISABLED) {
 8001432:	4b63      	ldr	r3, [pc, #396]	@ (80015c0 <FourthMotor+0x1ec>)
 8001434:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001438:	2b00      	cmp	r3, #0
 800143a:	d10b      	bne.n	8001454 <FourthMotor+0x80>
                HAL_GPIO_WritePin(motor4.enablePort, motor4.enablePin, GPIO_PIN_RESET);
 800143c:	4b60      	ldr	r3, [pc, #384]	@ (80015c0 <FourthMotor+0x1ec>)
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	4a5f      	ldr	r2, [pc, #380]	@ (80015c0 <FourthMotor+0x1ec>)
 8001442:	8891      	ldrh	r1, [r2, #4]
 8001444:	2200      	movs	r2, #0
 8001446:	4618      	mov	r0, r3
 8001448:	f002 fd40 	bl	8003ecc <HAL_GPIO_WritePin>
                motor4.enabled = MOTOR_ENABLED;
 800144c:	4b5c      	ldr	r3, [pc, #368]	@ (80015c0 <FourthMotor+0x1ec>)
 800144e:	2201      	movs	r2, #1
 8001450:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor4.rotationRange;
 8001454:	6a3b      	ldr	r3, [r7, #32]
 8001456:	ee07 3a90 	vmov	s15, r3
 800145a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800145e:	eddf 6a59 	vldr	s13, [pc, #356]	@ 80015c4 <FourthMotor+0x1f0>
 8001462:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001466:	4b56      	ldr	r3, [pc, #344]	@ (80015c0 <FourthMotor+0x1ec>)
 8001468:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 800146c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001470:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001474:	ed97 7a04 	vldr	s14, [r7, #16]
 8001478:	eddf 6a53 	vldr	s13, [pc, #332]	@ 80015c8 <FourthMotor+0x1f4>
 800147c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001480:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80015cc <FourthMotor+0x1f8>
 8001484:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001488:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800148c:	ee17 3a90 	vmov	r3, s15
 8001490:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor4.rotationRange / 360.0f);
 8001492:	4b4b      	ldr	r3, [pc, #300]	@ (80015c0 <FourthMotor+0x1ec>)
 8001494:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8001498:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80015c8 <FourthMotor+0x1f4>
 800149c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80014a4:	ee17 3a90 	vmov	r3, s15
 80014a8:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor4.lastStablePotValue > 64535) {
 80014aa:	6a3b      	ldr	r3, [r7, #32]
 80014ac:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80014b0:	da1e      	bge.n	80014f0 <FourthMotor+0x11c>
 80014b2:	4b43      	ldr	r3, [pc, #268]	@ (80015c0 <FourthMotor+0x1ec>)
 80014b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014b6:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80014ba:	4293      	cmp	r3, r2
 80014bc:	dd18      	ble.n	80014f0 <FourthMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 80014be:	68fb      	ldr	r3, [r7, #12]
 80014c0:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 80014c4:	fb02 f303 	mul.w	r3, r2, r3
 80014c8:	6a3a      	ldr	r2, [r7, #32]
 80014ca:	ee07 2a90 	vmov	s15, r2
 80014ce:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80014d2:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 80015c4 <FourthMotor+0x1f0>
 80014d6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014da:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 80015cc <FourthMotor+0x1f8>
 80014de:	ee67 7a87 	vmul.f32	s15, s15, s14
 80014e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80014e6:	ee17 2a90 	vmov	r2, s15
 80014ea:	4413      	add	r3, r2
 80014ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80014ee:	e01d      	b.n	800152c <FourthMotor+0x158>
            } else if (potValue > 64535 && motor4.lastStablePotValue < 1000) {
 80014f0:	6a3b      	ldr	r3, [r7, #32]
 80014f2:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80014f6:	4293      	cmp	r3, r2
 80014f8:	dd18      	ble.n	800152c <FourthMotor+0x158>
 80014fa:	4b31      	ldr	r3, [pc, #196]	@ (80015c0 <FourthMotor+0x1ec>)
 80014fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80014fe:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8001502:	da13      	bge.n	800152c <FourthMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 8001504:	6a3b      	ldr	r3, [r7, #32]
 8001506:	ee07 3a90 	vmov	s15, r3
 800150a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800150e:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 80015c4 <FourthMotor+0x1f0>
 8001512:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001516:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 80015cc <FourthMotor+0x1f8>
 800151a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800151e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001522:	ee17 3a90 	vmov	r3, s15
 8001526:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 800152a:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor4, targetSteps);
 800152c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800152e:	4824      	ldr	r0, [pc, #144]	@ (80015c0 <FourthMotor+0x1ec>)
 8001530:	f7fe ffbc 	bl	80004ac <moveToPositionSmooth>
            motor4.lastStablePotValue = potValue;
 8001534:	4a22      	ldr	r2, [pc, #136]	@ (80015c0 <FourthMotor+0x1ec>)
 8001536:	6a3b      	ldr	r3, [r7, #32]
 8001538:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor4.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800153a:	e03d      	b.n	80015b8 <FourthMotor+0x1e4>
        }
        else if(motor4.enabled == MOTOR_ENABLED) {
 800153c:	4b20      	ldr	r3, [pc, #128]	@ (80015c0 <FourthMotor+0x1ec>)
 800153e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001542:	2b01      	cmp	r3, #1
 8001544:	d138      	bne.n	80015b8 <FourthMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor4.lastStablePotValue / 65535.0f * motor4.rotationRange;
 8001546:	4b1e      	ldr	r3, [pc, #120]	@ (80015c0 <FourthMotor+0x1ec>)
 8001548:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800154a:	ee07 3a90 	vmov	s15, r3
 800154e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001552:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80015c4 <FourthMotor+0x1f0>
 8001556:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800155a:	4b19      	ldr	r3, [pc, #100]	@ (80015c0 <FourthMotor+0x1ec>)
 800155c:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001560:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001564:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001568:	ed97 7a06 	vldr	s14, [r7, #24]
 800156c:	eddf 6a16 	vldr	s13, [pc, #88]	@ 80015c8 <FourthMotor+0x1f4>
 8001570:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001574:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80015cc <FourthMotor+0x1f8>
 8001578:	ee67 7a87 	vmul.f32	s15, s15, s14
 800157c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001580:	ee17 3a90 	vmov	r3, s15
 8001584:	617b      	str	r3, [r7, #20]

            if(abs(motor4.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 8001586:	4b0e      	ldr	r3, [pc, #56]	@ (80015c0 <FourthMotor+0x1ec>)
 8001588:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800158a:	697b      	ldr	r3, [r7, #20]
 800158c:	1ad3      	subs	r3, r2, r3
 800158e:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 8001592:	db11      	blt.n	80015b8 <FourthMotor+0x1e4>
 8001594:	4b0a      	ldr	r3, [pc, #40]	@ (80015c0 <FourthMotor+0x1ec>)
 8001596:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001598:	697b      	ldr	r3, [r7, #20]
 800159a:	1ad3      	subs	r3, r2, r3
 800159c:	2b32      	cmp	r3, #50	@ 0x32
 800159e:	dc0b      	bgt.n	80015b8 <FourthMotor+0x1e4>
                HAL_GPIO_WritePin(motor4.enablePort, motor4.enablePin, GPIO_PIN_SET);
 80015a0:	4b07      	ldr	r3, [pc, #28]	@ (80015c0 <FourthMotor+0x1ec>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	4a06      	ldr	r2, [pc, #24]	@ (80015c0 <FourthMotor+0x1ec>)
 80015a6:	8891      	ldrh	r1, [r2, #4]
 80015a8:	2201      	movs	r2, #1
 80015aa:	4618      	mov	r0, r3
 80015ac:	f002 fc8e 	bl	8003ecc <HAL_GPIO_WritePin>
                motor4.enabled = MOTOR_DISABLED;
 80015b0:	4b03      	ldr	r3, [pc, #12]	@ (80015c0 <FourthMotor+0x1ec>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
		osDelay(10); // Delay using FreeRTOS (10ms delay)
 80015b8:	200a      	movs	r0, #10
 80015ba:	f007 f873 	bl	80086a4 <osDelay>
    for(;;) {
 80015be:	e71f      	b.n	8001400 <FourthMotor+0x2c>
 80015c0:	240000b4 	.word	0x240000b4
 80015c4:	477fff00 	.word	0x477fff00
 80015c8:	43b40000 	.word	0x43b40000
 80015cc:	45480000 	.word	0x45480000

080015d0 <FifthMotor>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_FifthMotor */
void FifthMotor(void *argument)
{
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b08a      	sub	sp, #40	@ 0x28
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN FifthMotor */
    HAL_GPIO_WritePin(motor5.enablePort, motor5.enablePin, GPIO_PIN_SET);
 80015d8:	4b78      	ldr	r3, [pc, #480]	@ (80017bc <FifthMotor+0x1ec>)
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	4a77      	ldr	r2, [pc, #476]	@ (80017bc <FifthMotor+0x1ec>)
 80015de:	8891      	ldrh	r1, [r2, #4]
 80015e0:	2201      	movs	r2, #1
 80015e2:	4618      	mov	r0, r3
 80015e4:	f002 fc72 	bl	8003ecc <HAL_GPIO_WritePin>
    motor5.enabled = MOTOR_DISABLED;
 80015e8:	4b74      	ldr	r3, [pc, #464]	@ (80017bc <FifthMotor+0x1ec>)
 80015ea:	2200      	movs	r2, #0
 80015ec:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor5.lastStablePotValue = readStablePot(&motor5);
 80015f0:	4872      	ldr	r0, [pc, #456]	@ (80017bc <FifthMotor+0x1ec>)
 80015f2:	f7fe fe75 	bl	80002e0 <readStablePot>
 80015f6:	4603      	mov	r3, r0
 80015f8:	4a70      	ldr	r2, [pc, #448]	@ (80017bc <FifthMotor+0x1ec>)
 80015fa:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor5);
 80015fc:	486f      	ldr	r0, [pc, #444]	@ (80017bc <FifthMotor+0x1ec>)
 80015fe:	f7fe fe6f 	bl	80002e0 <readStablePot>
 8001602:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor5.lastStablePotValue);
 8001604:	4b6d      	ldr	r3, [pc, #436]	@ (80017bc <FifthMotor+0x1ec>)
 8001606:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001608:	6a3a      	ldr	r2, [r7, #32]
 800160a:	1ad3      	subs	r3, r2, r3
 800160c:	2b00      	cmp	r3, #0
 800160e:	bfb8      	it	lt
 8001610:	425b      	neglt	r3, r3
 8001612:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 8001614:	69fb      	ldr	r3, [r7, #28]
 8001616:	2b64      	cmp	r3, #100	@ 0x64
 8001618:	dc09      	bgt.n	800162e <FifthMotor+0x5e>
                (motor5.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 800161a:	4b68      	ldr	r3, [pc, #416]	@ (80017bc <FifthMotor+0x1ec>)
 800161c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 8001620:	2b01      	cmp	r3, #1
 8001622:	f040 8089 	bne.w	8001738 <FifthMotor+0x168>
                (motor5.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001626:	69fb      	ldr	r3, [r7, #28]
 8001628:	2b32      	cmp	r3, #50	@ 0x32
 800162a:	f340 8085 	ble.w	8001738 <FifthMotor+0x168>
            if(motor5.enabled == MOTOR_DISABLED) {
 800162e:	4b63      	ldr	r3, [pc, #396]	@ (80017bc <FifthMotor+0x1ec>)
 8001630:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001634:	2b00      	cmp	r3, #0
 8001636:	d10b      	bne.n	8001650 <FifthMotor+0x80>
                HAL_GPIO_WritePin(motor5.enablePort, motor5.enablePin, GPIO_PIN_RESET);
 8001638:	4b60      	ldr	r3, [pc, #384]	@ (80017bc <FifthMotor+0x1ec>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	4a5f      	ldr	r2, [pc, #380]	@ (80017bc <FifthMotor+0x1ec>)
 800163e:	8891      	ldrh	r1, [r2, #4]
 8001640:	2200      	movs	r2, #0
 8001642:	4618      	mov	r0, r3
 8001644:	f002 fc42 	bl	8003ecc <HAL_GPIO_WritePin>
                motor5.enabled = MOTOR_ENABLED;
 8001648:	4b5c      	ldr	r3, [pc, #368]	@ (80017bc <FifthMotor+0x1ec>)
 800164a:	2201      	movs	r2, #1
 800164c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor5.rotationRange;
 8001650:	6a3b      	ldr	r3, [r7, #32]
 8001652:	ee07 3a90 	vmov	s15, r3
 8001656:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800165a:	eddf 6a59 	vldr	s13, [pc, #356]	@ 80017c0 <FifthMotor+0x1f0>
 800165e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001662:	4b56      	ldr	r3, [pc, #344]	@ (80017bc <FifthMotor+0x1ec>)
 8001664:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001668:	ee67 7a27 	vmul.f32	s15, s14, s15
 800166c:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001670:	ed97 7a04 	vldr	s14, [r7, #16]
 8001674:	eddf 6a53 	vldr	s13, [pc, #332]	@ 80017c4 <FifthMotor+0x1f4>
 8001678:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800167c:	ed9f 7a52 	vldr	s14, [pc, #328]	@ 80017c8 <FifthMotor+0x1f8>
 8001680:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001684:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001688:	ee17 3a90 	vmov	r3, s15
 800168c:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor5.rotationRange / 360.0f);
 800168e:	4b4b      	ldr	r3, [pc, #300]	@ (80017bc <FifthMotor+0x1ec>)
 8001690:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8001694:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80017c4 <FifthMotor+0x1f4>
 8001698:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800169c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80016a0:	ee17 3a90 	vmov	r3, s15
 80016a4:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor5.lastStablePotValue > 64535) {
 80016a6:	6a3b      	ldr	r3, [r7, #32]
 80016a8:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80016ac:	da1e      	bge.n	80016ec <FifthMotor+0x11c>
 80016ae:	4b43      	ldr	r3, [pc, #268]	@ (80017bc <FifthMotor+0x1ec>)
 80016b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80016b2:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80016b6:	4293      	cmp	r3, r2
 80016b8:	dd18      	ble.n	80016ec <FifthMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 80016ba:	68fb      	ldr	r3, [r7, #12]
 80016bc:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 80016c0:	fb02 f303 	mul.w	r3, r2, r3
 80016c4:	6a3a      	ldr	r2, [r7, #32]
 80016c6:	ee07 2a90 	vmov	s15, r2
 80016ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80016ce:	eddf 6a3c 	vldr	s13, [pc, #240]	@ 80017c0 <FifthMotor+0x1f0>
 80016d2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80016d6:	ed9f 7a3c 	vldr	s14, [pc, #240]	@ 80017c8 <FifthMotor+0x1f8>
 80016da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80016e2:	ee17 2a90 	vmov	r2, s15
 80016e6:	4413      	add	r3, r2
 80016e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80016ea:	e01d      	b.n	8001728 <FifthMotor+0x158>
            } else if (potValue > 64535 && motor5.lastStablePotValue < 1000) {
 80016ec:	6a3b      	ldr	r3, [r7, #32]
 80016ee:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80016f2:	4293      	cmp	r3, r2
 80016f4:	dd18      	ble.n	8001728 <FifthMotor+0x158>
 80016f6:	4b31      	ldr	r3, [pc, #196]	@ (80017bc <FifthMotor+0x1ec>)
 80016f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80016fa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80016fe:	da13      	bge.n	8001728 <FifthMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 8001700:	6a3b      	ldr	r3, [r7, #32]
 8001702:	ee07 3a90 	vmov	s15, r3
 8001706:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800170a:	eddf 6a2d 	vldr	s13, [pc, #180]	@ 80017c0 <FifthMotor+0x1f0>
 800170e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001712:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 80017c8 <FifthMotor+0x1f8>
 8001716:	ee67 7a87 	vmul.f32	s15, s15, s14
 800171a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800171e:	ee17 3a90 	vmov	r3, s15
 8001722:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 8001726:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor5, targetSteps);
 8001728:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800172a:	4824      	ldr	r0, [pc, #144]	@ (80017bc <FifthMotor+0x1ec>)
 800172c:	f7fe febe 	bl	80004ac <moveToPositionSmooth>
            motor5.lastStablePotValue = potValue;
 8001730:	4a22      	ldr	r2, [pc, #136]	@ (80017bc <FifthMotor+0x1ec>)
 8001732:	6a3b      	ldr	r3, [r7, #32]
 8001734:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor5.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001736:	e03d      	b.n	80017b4 <FifthMotor+0x1e4>
        }
        else if(motor5.enabled == MOTOR_ENABLED) {
 8001738:	4b20      	ldr	r3, [pc, #128]	@ (80017bc <FifthMotor+0x1ec>)
 800173a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800173e:	2b01      	cmp	r3, #1
 8001740:	d138      	bne.n	80017b4 <FifthMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor5.lastStablePotValue / 65535.0f * motor5.rotationRange;
 8001742:	4b1e      	ldr	r3, [pc, #120]	@ (80017bc <FifthMotor+0x1ec>)
 8001744:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001746:	ee07 3a90 	vmov	s15, r3
 800174a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800174e:	eddf 6a1c 	vldr	s13, [pc, #112]	@ 80017c0 <FifthMotor+0x1f0>
 8001752:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001756:	4b19      	ldr	r3, [pc, #100]	@ (80017bc <FifthMotor+0x1ec>)
 8001758:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 800175c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001760:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001764:	ed97 7a06 	vldr	s14, [r7, #24]
 8001768:	eddf 6a16 	vldr	s13, [pc, #88]	@ 80017c4 <FifthMotor+0x1f4>
 800176c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001770:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80017c8 <FifthMotor+0x1f8>
 8001774:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001778:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800177c:	ee17 3a90 	vmov	r3, s15
 8001780:	617b      	str	r3, [r7, #20]

            if(abs(motor5.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 8001782:	4b0e      	ldr	r3, [pc, #56]	@ (80017bc <FifthMotor+0x1ec>)
 8001784:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001786:	697b      	ldr	r3, [r7, #20]
 8001788:	1ad3      	subs	r3, r2, r3
 800178a:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 800178e:	db11      	blt.n	80017b4 <FifthMotor+0x1e4>
 8001790:	4b0a      	ldr	r3, [pc, #40]	@ (80017bc <FifthMotor+0x1ec>)
 8001792:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001794:	697b      	ldr	r3, [r7, #20]
 8001796:	1ad3      	subs	r3, r2, r3
 8001798:	2b32      	cmp	r3, #50	@ 0x32
 800179a:	dc0b      	bgt.n	80017b4 <FifthMotor+0x1e4>
                HAL_GPIO_WritePin(motor5.enablePort, motor5.enablePin, GPIO_PIN_SET);
 800179c:	4b07      	ldr	r3, [pc, #28]	@ (80017bc <FifthMotor+0x1ec>)
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	4a06      	ldr	r2, [pc, #24]	@ (80017bc <FifthMotor+0x1ec>)
 80017a2:	8891      	ldrh	r1, [r2, #4]
 80017a4:	2201      	movs	r2, #1
 80017a6:	4618      	mov	r0, r3
 80017a8:	f002 fb90 	bl	8003ecc <HAL_GPIO_WritePin>
                motor5.enabled = MOTOR_DISABLED;
 80017ac:	4b03      	ldr	r3, [pc, #12]	@ (80017bc <FifthMotor+0x1ec>)
 80017ae:	2200      	movs	r2, #0
 80017b0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
		osDelay(10); // Delay using FreeRTOS (10ms delay)
 80017b4:	200a      	movs	r0, #10
 80017b6:	f006 ff75 	bl	80086a4 <osDelay>
    for(;;) {
 80017ba:	e71f      	b.n	80015fc <FifthMotor+0x2c>
 80017bc:	240000f0 	.word	0x240000f0
 80017c0:	477fff00 	.word	0x477fff00
 80017c4:	43b40000 	.word	0x43b40000
 80017c8:	45480000 	.word	0x45480000

080017cc <SixthMotor>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_SixthMotor */
void SixthMotor(void *argument)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	b08a      	sub	sp, #40	@ 0x28
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SixthMotor */
    HAL_GPIO_WritePin(motor6.enablePort, motor6.enablePin, GPIO_PIN_SET);
 80017d4:	4b78      	ldr	r3, [pc, #480]	@ (80019b8 <SixthMotor+0x1ec>)
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	4a77      	ldr	r2, [pc, #476]	@ (80019b8 <SixthMotor+0x1ec>)
 80017da:	8891      	ldrh	r1, [r2, #4]
 80017dc:	2201      	movs	r2, #1
 80017de:	4618      	mov	r0, r3
 80017e0:	f002 fb74 	bl	8003ecc <HAL_GPIO_WritePin>
    motor6.enabled = MOTOR_DISABLED;
 80017e4:	4b74      	ldr	r3, [pc, #464]	@ (80019b8 <SixthMotor+0x1ec>)
 80017e6:	2200      	movs	r2, #0
 80017e8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    motor6.lastStablePotValue = readStablePot(&motor5);
 80017ec:	4873      	ldr	r0, [pc, #460]	@ (80019bc <SixthMotor+0x1f0>)
 80017ee:	f7fe fd77 	bl	80002e0 <readStablePot>
 80017f2:	4603      	mov	r3, r0
 80017f4:	4a70      	ldr	r2, [pc, #448]	@ (80019b8 <SixthMotor+0x1ec>)
 80017f6:	62d3      	str	r3, [r2, #44]	@ 0x2c

    for(;;) {
        int potValue = readStablePot(&motor5);
 80017f8:	4870      	ldr	r0, [pc, #448]	@ (80019bc <SixthMotor+0x1f0>)
 80017fa:	f7fe fd71 	bl	80002e0 <readStablePot>
 80017fe:	6238      	str	r0, [r7, #32]
        int potDifference = abs(potValue - motor6.lastStablePotValue);
 8001800:	4b6d      	ldr	r3, [pc, #436]	@ (80019b8 <SixthMotor+0x1ec>)
 8001802:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001804:	6a3a      	ldr	r2, [r7, #32]
 8001806:	1ad3      	subs	r3, r2, r3
 8001808:	2b00      	cmp	r3, #0
 800180a:	bfb8      	it	lt
 800180c:	425b      	neglt	r3, r3
 800180e:	61fb      	str	r3, [r7, #28]

        if(potDifference > POT_DEADZONE ||
 8001810:	69fb      	ldr	r3, [r7, #28]
 8001812:	2b64      	cmp	r3, #100	@ 0x64
 8001814:	dc09      	bgt.n	800182a <SixthMotor+0x5e>
                (motor6.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001816:	4b68      	ldr	r3, [pc, #416]	@ (80019b8 <SixthMotor+0x1ec>)
 8001818:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
        if(potDifference > POT_DEADZONE ||
 800181c:	2b01      	cmp	r3, #1
 800181e:	f040 8089 	bne.w	8001934 <SixthMotor+0x168>
                (motor6.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001822:	69fb      	ldr	r3, [r7, #28]
 8001824:	2b32      	cmp	r3, #50	@ 0x32
 8001826:	f340 8085 	ble.w	8001934 <SixthMotor+0x168>
            if(motor6.enabled == MOTOR_DISABLED) {
 800182a:	4b63      	ldr	r3, [pc, #396]	@ (80019b8 <SixthMotor+0x1ec>)
 800182c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8001830:	2b00      	cmp	r3, #0
 8001832:	d10b      	bne.n	800184c <SixthMotor+0x80>
                HAL_GPIO_WritePin(motor6.enablePort, motor6.enablePin, GPIO_PIN_RESET);
 8001834:	4b60      	ldr	r3, [pc, #384]	@ (80019b8 <SixthMotor+0x1ec>)
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	4a5f      	ldr	r2, [pc, #380]	@ (80019b8 <SixthMotor+0x1ec>)
 800183a:	8891      	ldrh	r1, [r2, #4]
 800183c:	2200      	movs	r2, #0
 800183e:	4618      	mov	r0, r3
 8001840:	f002 fb44 	bl	8003ecc <HAL_GPIO_WritePin>
                motor6.enabled = MOTOR_ENABLED;
 8001844:	4b5c      	ldr	r3, [pc, #368]	@ (80019b8 <SixthMotor+0x1ec>)
 8001846:	2201      	movs	r2, #1
 8001848:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }

            // Calculate target steps based on full rotation range
            float targetAngle = (float)potValue / 65535.0f * motor6.rotationRange;
 800184c:	6a3b      	ldr	r3, [r7, #32]
 800184e:	ee07 3a90 	vmov	s15, r3
 8001852:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001856:	eddf 6a5a 	vldr	s13, [pc, #360]	@ 80019c0 <SixthMotor+0x1f4>
 800185a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800185e:	4b56      	ldr	r3, [pc, #344]	@ (80019b8 <SixthMotor+0x1ec>)
 8001860:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001864:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001868:	edc7 7a04 	vstr	s15, [r7, #16]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 800186c:	ed97 7a04 	vldr	s14, [r7, #16]
 8001870:	eddf 6a54 	vldr	s13, [pc, #336]	@ 80019c4 <SixthMotor+0x1f8>
 8001874:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001878:	ed9f 7a53 	vldr	s14, [pc, #332]	@ 80019c8 <SixthMotor+0x1fc>
 800187c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001880:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001884:	ee17 3a90 	vmov	r3, s15
 8001888:	627b      	str	r3, [r7, #36]	@ 0x24

            // Handle wrap-around for multi-revolution ranges
            int maxRevolutions = (int)(motor6.rotationRange / 360.0f);
 800188a:	4b4b      	ldr	r3, [pc, #300]	@ (80019b8 <SixthMotor+0x1ec>)
 800188c:	ed93 7a0e 	vldr	s14, [r3, #56]	@ 0x38
 8001890:	eddf 6a4c 	vldr	s13, [pc, #304]	@ 80019c4 <SixthMotor+0x1f8>
 8001894:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001898:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800189c:	ee17 3a90 	vmov	r3, s15
 80018a0:	60fb      	str	r3, [r7, #12]

            // Check if we need to wrap around (e.g., from 1080° back to 0°)
            if (potValue < 1000 && motor6.lastStablePotValue > 64535) {
 80018a2:	6a3b      	ldr	r3, [r7, #32]
 80018a4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80018a8:	da1e      	bge.n	80018e8 <SixthMotor+0x11c>
 80018aa:	4b43      	ldr	r3, [pc, #268]	@ (80019b8 <SixthMotor+0x1ec>)
 80018ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80018ae:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80018b2:	4293      	cmp	r3, r2
 80018b4:	dd18      	ble.n	80018e8 <SixthMotor+0x11c>
                // Moving from high to low (wrap around forward)
                targetSteps = (maxRevolutions * StepPerRevolution) + (int)((float)potValue / 65535.0f * StepPerRevolution);
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	f44f 6248 	mov.w	r2, #3200	@ 0xc80
 80018bc:	fb02 f303 	mul.w	r3, r2, r3
 80018c0:	6a3a      	ldr	r2, [r7, #32]
 80018c2:	ee07 2a90 	vmov	s15, r2
 80018c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80018ca:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80019c0 <SixthMotor+0x1f4>
 80018ce:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80018d2:	ed9f 7a3d 	vldr	s14, [pc, #244]	@ 80019c8 <SixthMotor+0x1fc>
 80018d6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80018da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80018de:	ee17 2a90 	vmov	r2, s15
 80018e2:	4413      	add	r3, r2
 80018e4:	627b      	str	r3, [r7, #36]	@ 0x24
 80018e6:	e01d      	b.n	8001924 <SixthMotor+0x158>
            } else if (potValue > 64535 && motor6.lastStablePotValue < 1000) {
 80018e8:	6a3b      	ldr	r3, [r7, #32]
 80018ea:	f64f 4217 	movw	r2, #64535	@ 0xfc17
 80018ee:	4293      	cmp	r3, r2
 80018f0:	dd18      	ble.n	8001924 <SixthMotor+0x158>
 80018f2:	4b31      	ldr	r3, [pc, #196]	@ (80019b8 <SixthMotor+0x1ec>)
 80018f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80018f6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80018fa:	da13      	bge.n	8001924 <SixthMotor+0x158>
                // Moving from low to high (wrap around backward)
                targetSteps = (int)((float)potValue / 65535.0f * StepPerRevolution) - StepPerRevolution;
 80018fc:	6a3b      	ldr	r3, [r7, #32]
 80018fe:	ee07 3a90 	vmov	s15, r3
 8001902:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001906:	eddf 6a2e 	vldr	s13, [pc, #184]	@ 80019c0 <SixthMotor+0x1f4>
 800190a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800190e:	ed9f 7a2e 	vldr	s14, [pc, #184]	@ 80019c8 <SixthMotor+0x1fc>
 8001912:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001916:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800191a:	ee17 3a90 	vmov	r3, s15
 800191e:	f5a3 6348 	sub.w	r3, r3, #3200	@ 0xc80
 8001922:	627b      	str	r3, [r7, #36]	@ 0x24
            }

            moveToPositionSmooth(&motor6, targetSteps);
 8001924:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8001926:	4824      	ldr	r0, [pc, #144]	@ (80019b8 <SixthMotor+0x1ec>)
 8001928:	f7fe fdc0 	bl	80004ac <moveToPositionSmooth>
            motor6.lastStablePotValue = potValue;
 800192c:	4a22      	ldr	r2, [pc, #136]	@ (80019b8 <SixthMotor+0x1ec>)
 800192e:	6a3b      	ldr	r3, [r7, #32]
 8001930:	62d3      	str	r3, [r2, #44]	@ 0x2c
                (motor6.enabled == MOTOR_ENABLED && potDifference > POT_DEADZONE/2)) {
 8001932:	e03d      	b.n	80019b0 <SixthMotor+0x1e4>
        }
        else if(motor6.enabled == MOTOR_ENABLED) {
 8001934:	4b20      	ldr	r3, [pc, #128]	@ (80019b8 <SixthMotor+0x1ec>)
 8001936:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800193a:	2b01      	cmp	r3, #1
 800193c:	d138      	bne.n	80019b0 <SixthMotor+0x1e4>
            // Compare absolute step positions
            float targetAngle = (float)motor6.lastStablePotValue / 65535.0f * motor6.rotationRange;
 800193e:	4b1e      	ldr	r3, [pc, #120]	@ (80019b8 <SixthMotor+0x1ec>)
 8001940:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001942:	ee07 3a90 	vmov	s15, r3
 8001946:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800194a:	eddf 6a1d 	vldr	s13, [pc, #116]	@ 80019c0 <SixthMotor+0x1f4>
 800194e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001952:	4b19      	ldr	r3, [pc, #100]	@ (80019b8 <SixthMotor+0x1ec>)
 8001954:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8001958:	ee67 7a27 	vmul.f32	s15, s14, s15
 800195c:	edc7 7a06 	vstr	s15, [r7, #24]
            int targetSteps = (int)(targetAngle/360.0f * StepPerRevolution);
 8001960:	ed97 7a06 	vldr	s14, [r7, #24]
 8001964:	eddf 6a17 	vldr	s13, [pc, #92]	@ 80019c4 <SixthMotor+0x1f8>
 8001968:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800196c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 80019c8 <SixthMotor+0x1fc>
 8001970:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001974:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001978:	ee17 3a90 	vmov	r3, s15
 800197c:	617b      	str	r3, [r7, #20]

            if(abs(motor6.totalSteps - targetSteps) <= POSITION_TOLERANCE) {
 800197e:	4b0e      	ldr	r3, [pc, #56]	@ (80019b8 <SixthMotor+0x1ec>)
 8001980:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001982:	697b      	ldr	r3, [r7, #20]
 8001984:	1ad3      	subs	r3, r2, r3
 8001986:	f113 0f32 	cmn.w	r3, #50	@ 0x32
 800198a:	db11      	blt.n	80019b0 <SixthMotor+0x1e4>
 800198c:	4b0a      	ldr	r3, [pc, #40]	@ (80019b8 <SixthMotor+0x1ec>)
 800198e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001990:	697b      	ldr	r3, [r7, #20]
 8001992:	1ad3      	subs	r3, r2, r3
 8001994:	2b32      	cmp	r3, #50	@ 0x32
 8001996:	dc0b      	bgt.n	80019b0 <SixthMotor+0x1e4>
                HAL_GPIO_WritePin(motor6.enablePort, motor6.enablePin, GPIO_PIN_SET);
 8001998:	4b07      	ldr	r3, [pc, #28]	@ (80019b8 <SixthMotor+0x1ec>)
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	4a06      	ldr	r2, [pc, #24]	@ (80019b8 <SixthMotor+0x1ec>)
 800199e:	8891      	ldrh	r1, [r2, #4]
 80019a0:	2201      	movs	r2, #1
 80019a2:	4618      	mov	r0, r3
 80019a4:	f002 fa92 	bl	8003ecc <HAL_GPIO_WritePin>
                motor6.enabled = MOTOR_DISABLED;
 80019a8:	4b03      	ldr	r3, [pc, #12]	@ (80019b8 <SixthMotor+0x1ec>)
 80019aa:	2200      	movs	r2, #0
 80019ac:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
            }
        }
		osDelay(10); // Delay using FreeRTOS (10ms delay)
 80019b0:	200a      	movs	r0, #10
 80019b2:	f006 fe77 	bl	80086a4 <osDelay>
    for(;;) {
 80019b6:	e71f      	b.n	80017f8 <SixthMotor+0x2c>
 80019b8:	2400012c 	.word	0x2400012c
 80019bc:	240000f0 	.word	0x240000f0
 80019c0:	477fff00 	.word	0x477fff00
 80019c4:	43b40000 	.word	0x43b40000
 80019c8:	45480000 	.word	0x45480000

080019cc <MPU_Config>:
}

 /* MPU Configuration */

void MPU_Config(void)
{
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b084      	sub	sp, #16
 80019d0:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 80019d2:	463b      	mov	r3, r7
 80019d4:	2200      	movs	r2, #0
 80019d6:	601a      	str	r2, [r3, #0]
 80019d8:	605a      	str	r2, [r3, #4]
 80019da:	609a      	str	r2, [r3, #8]
 80019dc:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 80019de:	f002 f84d 	bl	8003a7c <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80019e2:	2301      	movs	r3, #1
 80019e4:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 80019e6:	2300      	movs	r3, #0
 80019e8:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x0;
 80019ea:	2300      	movs	r3, #0
 80019ec:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 80019ee:	231f      	movs	r3, #31
 80019f0:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x87;
 80019f2:	2387      	movs	r3, #135	@ 0x87
 80019f4:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 80019f6:	2300      	movs	r3, #0
 80019f8:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80019fa:	2300      	movs	r3, #0
 80019fc:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 80019fe:	2301      	movs	r3, #1
 8001a00:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 8001a02:	2301      	movs	r3, #1
 8001a04:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8001a06:	2300      	movs	r3, #0
 8001a08:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 8001a0a:	2300      	movs	r3, #0
 8001a0c:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001a0e:	463b      	mov	r3, r7
 8001a10:	4618      	mov	r0, r3
 8001a12:	f002 f86b 	bl	8003aec <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8001a16:	2004      	movs	r0, #4
 8001a18:	f002 f848 	bl	8003aac <HAL_MPU_Enable>

}
 8001a1c:	bf00      	nop
 8001a1e:	3710      	adds	r7, #16
 8001a20:	46bd      	mov	sp, r7
 8001a22:	bd80      	pop	{r7, pc}

08001a24 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b082      	sub	sp, #8
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1)
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	4a04      	ldr	r2, [pc, #16]	@ (8001a44 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8001a32:	4293      	cmp	r3, r2
 8001a34:	d101      	bne.n	8001a3a <HAL_TIM_PeriodElapsedCallback+0x16>
  {
    HAL_IncTick();
 8001a36:	f000 fa67 	bl	8001f08 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a3a:	bf00      	nop
 8001a3c:	3708      	adds	r7, #8
 8001a3e:	46bd      	mov	sp, r7
 8001a40:	bd80      	pop	{r7, pc}
 8001a42:	bf00      	nop
 8001a44:	40010000 	.word	0x40010000

08001a48 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001a48:	b480      	push	{r7}
 8001a4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001a4c:	b672      	cpsid	i
}
 8001a4e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001a50:	bf00      	nop
 8001a52:	e7fd      	b.n	8001a50 <Error_Handler+0x8>

08001a54 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a54:	b580      	push	{r7, lr}
 8001a56:	b082      	sub	sp, #8
 8001a58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a5a:	4b0c      	ldr	r3, [pc, #48]	@ (8001a8c <HAL_MspInit+0x38>)
 8001a5c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a60:	4a0a      	ldr	r2, [pc, #40]	@ (8001a8c <HAL_MspInit+0x38>)
 8001a62:	f043 0302 	orr.w	r3, r3, #2
 8001a66:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8001a6a:	4b08      	ldr	r3, [pc, #32]	@ (8001a8c <HAL_MspInit+0x38>)
 8001a6c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001a70:	f003 0302 	and.w	r3, r3, #2
 8001a74:	607b      	str	r3, [r7, #4]
 8001a76:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a78:	2200      	movs	r2, #0
 8001a7a:	210f      	movs	r1, #15
 8001a7c:	f06f 0001 	mvn.w	r0, #1
 8001a80:	f001 ffd4 	bl	8003a2c <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a84:	bf00      	nop
 8001a86:	3708      	adds	r7, #8
 8001a88:	46bd      	mov	sp, r7
 8001a8a:	bd80      	pop	{r7, pc}
 8001a8c:	58024400 	.word	0x58024400

08001a90 <HAL_ADC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hadc: ADC handle pointer
  * @retval None
  */
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a90:	b580      	push	{r7, lr}
 8001a92:	b0ba      	sub	sp, #232	@ 0xe8
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a98:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8001a9c:	2200      	movs	r2, #0
 8001a9e:	601a      	str	r2, [r3, #0]
 8001aa0:	605a      	str	r2, [r3, #4]
 8001aa2:	609a      	str	r2, [r3, #8]
 8001aa4:	60da      	str	r2, [r3, #12]
 8001aa6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001aa8:	f107 0310 	add.w	r3, r7, #16
 8001aac:	22c0      	movs	r2, #192	@ 0xc0
 8001aae:	2100      	movs	r1, #0
 8001ab0:	4618      	mov	r0, r3
 8001ab2:	f009 fa99 	bl	800afe8 <memset>
  if(hadc->Instance==ADC1)
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	4a2b      	ldr	r2, [pc, #172]	@ (8001b68 <HAL_ADC_MspInit+0xd8>)
 8001abc:	4293      	cmp	r3, r2
 8001abe:	d14f      	bne.n	8001b60 <HAL_ADC_MspInit+0xd0>

    /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8001ac0:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8001ac4:	f04f 0300 	mov.w	r3, #0
 8001ac8:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.PLL2.PLL2M = 4;
 8001acc:	2304      	movs	r3, #4
 8001ace:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.PLL2.PLL2N = 10;
 8001ad0:	230a      	movs	r3, #10
 8001ad2:	61fb      	str	r3, [r7, #28]
    PeriphClkInitStruct.PLL2.PLL2P = 2;
 8001ad4:	2302      	movs	r3, #2
 8001ad6:	623b      	str	r3, [r7, #32]
    PeriphClkInitStruct.PLL2.PLL2Q = 2;
 8001ad8:	2302      	movs	r3, #2
 8001ada:	627b      	str	r3, [r7, #36]	@ 0x24
    PeriphClkInitStruct.PLL2.PLL2R = 2;
 8001adc:	2302      	movs	r3, #2
 8001ade:	62bb      	str	r3, [r7, #40]	@ 0x28
    PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 8001ae0:	23c0      	movs	r3, #192	@ 0xc0
 8001ae2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
 8001ae4:	2320      	movs	r3, #32
 8001ae6:	633b      	str	r3, [r7, #48]	@ 0x30
    PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 8001ae8:	2300      	movs	r3, #0
 8001aea:	637b      	str	r3, [r7, #52]	@ 0x34
    PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 8001aec:	2300      	movs	r3, #0
 8001aee:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001af2:	f107 0310 	add.w	r3, r7, #16
 8001af6:	4618      	mov	r0, r3
 8001af8:	f003 fa64 	bl	8004fc4 <HAL_RCCEx_PeriphCLKConfig>
 8001afc:	4603      	mov	r3, r0
 8001afe:	2b00      	cmp	r3, #0
 8001b00:	d001      	beq.n	8001b06 <HAL_ADC_MspInit+0x76>
    {
      Error_Handler();
 8001b02:	f7ff ffa1 	bl	8001a48 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8001b06:	4b19      	ldr	r3, [pc, #100]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b08:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b0c:	4a17      	ldr	r2, [pc, #92]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b0e:	f043 0320 	orr.w	r3, r3, #32
 8001b12:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8001b16:	4b15      	ldr	r3, [pc, #84]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b18:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8001b1c:	f003 0320 	and.w	r3, r3, #32
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b24:	4b11      	ldr	r3, [pc, #68]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b26:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b2a:	4a10      	ldr	r2, [pc, #64]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b2c:	f043 0301 	orr.w	r3, r3, #1
 8001b30:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001b34:	4b0d      	ldr	r3, [pc, #52]	@ (8001b6c <HAL_ADC_MspInit+0xdc>)
 8001b36:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001b3a:	f003 0301 	and.w	r3, r3, #1
 8001b3e:	60bb      	str	r3, [r7, #8]
 8001b40:	68bb      	ldr	r3, [r7, #8]
    PA1     ------> ADC1_INP17
    PA2     ------> ADC1_INP14
    PA3     ------> ADC1_INP15
    PA4     ------> ADC1_INP18
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001b42:	231f      	movs	r3, #31
 8001b44:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
                          |GPIO_PIN_4;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b48:	2303      	movs	r3, #3
 8001b4a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b4e:	2300      	movs	r3, #0
 8001b50:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b54:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8001b58:	4619      	mov	r1, r3
 8001b5a:	4805      	ldr	r0, [pc, #20]	@ (8001b70 <HAL_ADC_MspInit+0xe0>)
 8001b5c:	f002 f806 	bl	8003b6c <HAL_GPIO_Init>

    /* USER CODE END ADC1_MspInit 1 */

  }

}
 8001b60:	bf00      	nop
 8001b62:	37e8      	adds	r7, #232	@ 0xe8
 8001b64:	46bd      	mov	sp, r7
 8001b66:	bd80      	pop	{r7, pc}
 8001b68:	40022000 	.word	0x40022000
 8001b6c:	58024400 	.word	0x58024400
 8001b70:	58020000 	.word	0x58020000

08001b74 <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001b74:	b480      	push	{r7}
 8001b76:	b085      	sub	sp, #20
 8001b78:	af00      	add	r7, sp, #0
 8001b7a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM8)
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	4a0b      	ldr	r2, [pc, #44]	@ (8001bb0 <HAL_TIM_Base_MspInit+0x3c>)
 8001b82:	4293      	cmp	r3, r2
 8001b84:	d10e      	bne.n	8001ba4 <HAL_TIM_Base_MspInit+0x30>
  {
    /* USER CODE BEGIN TIM8_MspInit 0 */

    /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001b86:	4b0b      	ldr	r3, [pc, #44]	@ (8001bb4 <HAL_TIM_Base_MspInit+0x40>)
 8001b88:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001b8c:	4a09      	ldr	r2, [pc, #36]	@ (8001bb4 <HAL_TIM_Base_MspInit+0x40>)
 8001b8e:	f043 0302 	orr.w	r3, r3, #2
 8001b92:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001b96:	4b07      	ldr	r3, [pc, #28]	@ (8001bb4 <HAL_TIM_Base_MspInit+0x40>)
 8001b98:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001b9c:	f003 0302 	and.w	r3, r3, #2
 8001ba0:	60fb      	str	r3, [r7, #12]
 8001ba2:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END TIM8_MspInit 1 */

  }

}
 8001ba4:	bf00      	nop
 8001ba6:	3714      	adds	r7, #20
 8001ba8:	46bd      	mov	sp, r7
 8001baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bae:	4770      	bx	lr
 8001bb0:	40010400 	.word	0x40010400
 8001bb4:	58024400 	.word	0x58024400

08001bb8 <HAL_InitTick>:
 8001bb8:	b580      	push	{r7, lr}
 8001bba:	b08e      	sub	sp, #56	@ 0x38
 8001bbc:	af00      	add	r7, sp, #0
 8001bbe:	6078      	str	r0, [r7, #4]
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	2b0f      	cmp	r3, #15
 8001bc4:	d844      	bhi.n	8001c50 <HAL_InitTick+0x98>
 8001bc6:	2200      	movs	r2, #0
 8001bc8:	6879      	ldr	r1, [r7, #4]
 8001bca:	2019      	movs	r0, #25
 8001bcc:	f001 ff2e 	bl	8003a2c <HAL_NVIC_SetPriority>
 8001bd0:	2019      	movs	r0, #25
 8001bd2:	f001 ff45 	bl	8003a60 <HAL_NVIC_EnableIRQ>
 8001bd6:	4a24      	ldr	r2, [pc, #144]	@ (8001c68 <HAL_InitTick+0xb0>)
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	6013      	str	r3, [r2, #0]
 8001bdc:	4b23      	ldr	r3, [pc, #140]	@ (8001c6c <HAL_InitTick+0xb4>)
 8001bde:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001be2:	4a22      	ldr	r2, [pc, #136]	@ (8001c6c <HAL_InitTick+0xb4>)
 8001be4:	f043 0301 	orr.w	r3, r3, #1
 8001be8:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001bec:	4b1f      	ldr	r3, [pc, #124]	@ (8001c6c <HAL_InitTick+0xb4>)
 8001bee:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001bf2:	f003 0301 	and.w	r3, r3, #1
 8001bf6:	60bb      	str	r3, [r7, #8]
 8001bf8:	68bb      	ldr	r3, [r7, #8]
 8001bfa:	f107 020c 	add.w	r2, r7, #12
 8001bfe:	f107 0310 	add.w	r3, r7, #16
 8001c02:	4611      	mov	r1, r2
 8001c04:	4618      	mov	r0, r3
 8001c06:	f003 f99b 	bl	8004f40 <HAL_RCC_GetClockConfig>
 8001c0a:	f003 f983 	bl	8004f14 <HAL_RCC_GetPCLK2Freq>
 8001c0e:	4603      	mov	r3, r0
 8001c10:	005b      	lsls	r3, r3, #1
 8001c12:	637b      	str	r3, [r7, #52]	@ 0x34
 8001c14:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8001c16:	4a16      	ldr	r2, [pc, #88]	@ (8001c70 <HAL_InitTick+0xb8>)
 8001c18:	fba2 2303 	umull	r2, r3, r2, r3
 8001c1c:	0c9b      	lsrs	r3, r3, #18
 8001c1e:	3b01      	subs	r3, #1
 8001c20:	633b      	str	r3, [r7, #48]	@ 0x30
 8001c22:	4b14      	ldr	r3, [pc, #80]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c24:	4a14      	ldr	r2, [pc, #80]	@ (8001c78 <HAL_InitTick+0xc0>)
 8001c26:	601a      	str	r2, [r3, #0]
 8001c28:	4b12      	ldr	r3, [pc, #72]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c2a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001c2e:	60da      	str	r2, [r3, #12]
 8001c30:	4a10      	ldr	r2, [pc, #64]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c32:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001c34:	6053      	str	r3, [r2, #4]
 8001c36:	4b0f      	ldr	r3, [pc, #60]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c38:	2200      	movs	r2, #0
 8001c3a:	611a      	str	r2, [r3, #16]
 8001c3c:	4b0d      	ldr	r3, [pc, #52]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c3e:	2200      	movs	r2, #0
 8001c40:	609a      	str	r2, [r3, #8]
 8001c42:	480c      	ldr	r0, [pc, #48]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c44:	f005 febc 	bl	80079c0 <HAL_TIM_Base_Init>
 8001c48:	4603      	mov	r3, r0
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	d107      	bne.n	8001c5e <HAL_InitTick+0xa6>
 8001c4e:	e001      	b.n	8001c54 <HAL_InitTick+0x9c>
 8001c50:	2301      	movs	r3, #1
 8001c52:	e005      	b.n	8001c60 <HAL_InitTick+0xa8>
 8001c54:	4807      	ldr	r0, [pc, #28]	@ (8001c74 <HAL_InitTick+0xbc>)
 8001c56:	f005 ff7b 	bl	8007b50 <HAL_TIM_Base_Start_IT>
 8001c5a:	4603      	mov	r3, r0
 8001c5c:	e000      	b.n	8001c60 <HAL_InitTick+0xa8>
 8001c5e:	2301      	movs	r3, #1
 8001c60:	4618      	mov	r0, r3
 8001c62:	3738      	adds	r7, #56	@ 0x38
 8001c64:	46bd      	mov	sp, r7
 8001c66:	bd80      	pop	{r7, pc}
 8001c68:	24000170 	.word	0x24000170
 8001c6c:	58024400 	.word	0x58024400
 8001c70:	431bde83 	.word	0x431bde83
 8001c74:	240003b4 	.word	0x240003b4
 8001c78:	40010000 	.word	0x40010000

08001c7c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001c7c:	b480      	push	{r7}
 8001c7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001c80:	bf00      	nop
 8001c82:	e7fd      	b.n	8001c80 <NMI_Handler+0x4>

08001c84 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001c84:	b480      	push	{r7}
 8001c86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001c88:	bf00      	nop
 8001c8a:	e7fd      	b.n	8001c88 <HardFault_Handler+0x4>

08001c8c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001c8c:	b480      	push	{r7}
 8001c8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001c90:	bf00      	nop
 8001c92:	e7fd      	b.n	8001c90 <MemManage_Handler+0x4>

08001c94 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001c94:	b480      	push	{r7}
 8001c96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001c98:	bf00      	nop
 8001c9a:	e7fd      	b.n	8001c98 <BusFault_Handler+0x4>

08001c9c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001c9c:	b480      	push	{r7}
 8001c9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ca0:	bf00      	nop
 8001ca2:	e7fd      	b.n	8001ca0 <UsageFault_Handler+0x4>

08001ca4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001ca8:	bf00      	nop
 8001caa:	46bd      	mov	sp, r7
 8001cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb0:	4770      	bx	lr
	...

08001cb4 <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 8001cb4:	b580      	push	{r7, lr}
 8001cb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001cb8:	4802      	ldr	r0, [pc, #8]	@ (8001cc4 <TIM1_UP_IRQHandler+0x10>)
 8001cba:	f005 ffc1 	bl	8007c40 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 8001cbe:	bf00      	nop
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	240003b4 	.word	0x240003b4

08001cc8 <SystemInit>:
 8001cc8:	b480      	push	{r7}
 8001cca:	af00      	add	r7, sp, #0
 8001ccc:	4b43      	ldr	r3, [pc, #268]	@ (8001ddc <SystemInit+0x114>)
 8001cce:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001cd2:	4a42      	ldr	r2, [pc, #264]	@ (8001ddc <SystemInit+0x114>)
 8001cd4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001cd8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001cdc:	4b40      	ldr	r3, [pc, #256]	@ (8001de0 <SystemInit+0x118>)
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	f003 030f 	and.w	r3, r3, #15
 8001ce4:	2b06      	cmp	r3, #6
 8001ce6:	d807      	bhi.n	8001cf8 <SystemInit+0x30>
 8001ce8:	4b3d      	ldr	r3, [pc, #244]	@ (8001de0 <SystemInit+0x118>)
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	f023 030f 	bic.w	r3, r3, #15
 8001cf0:	4a3b      	ldr	r2, [pc, #236]	@ (8001de0 <SystemInit+0x118>)
 8001cf2:	f043 0307 	orr.w	r3, r3, #7
 8001cf6:	6013      	str	r3, [r2, #0]
 8001cf8:	4b3a      	ldr	r3, [pc, #232]	@ (8001de4 <SystemInit+0x11c>)
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	4a39      	ldr	r2, [pc, #228]	@ (8001de4 <SystemInit+0x11c>)
 8001cfe:	f043 0301 	orr.w	r3, r3, #1
 8001d02:	6013      	str	r3, [r2, #0]
 8001d04:	4b37      	ldr	r3, [pc, #220]	@ (8001de4 <SystemInit+0x11c>)
 8001d06:	2200      	movs	r2, #0
 8001d08:	611a      	str	r2, [r3, #16]
 8001d0a:	4b36      	ldr	r3, [pc, #216]	@ (8001de4 <SystemInit+0x11c>)
 8001d0c:	681a      	ldr	r2, [r3, #0]
 8001d0e:	4935      	ldr	r1, [pc, #212]	@ (8001de4 <SystemInit+0x11c>)
 8001d10:	4b35      	ldr	r3, [pc, #212]	@ (8001de8 <SystemInit+0x120>)
 8001d12:	4013      	ands	r3, r2
 8001d14:	600b      	str	r3, [r1, #0]
 8001d16:	4b32      	ldr	r3, [pc, #200]	@ (8001de0 <SystemInit+0x118>)
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	f003 0308 	and.w	r3, r3, #8
 8001d1e:	2b00      	cmp	r3, #0
 8001d20:	d007      	beq.n	8001d32 <SystemInit+0x6a>
 8001d22:	4b2f      	ldr	r3, [pc, #188]	@ (8001de0 <SystemInit+0x118>)
 8001d24:	681b      	ldr	r3, [r3, #0]
 8001d26:	f023 030f 	bic.w	r3, r3, #15
 8001d2a:	4a2d      	ldr	r2, [pc, #180]	@ (8001de0 <SystemInit+0x118>)
 8001d2c:	f043 0307 	orr.w	r3, r3, #7
 8001d30:	6013      	str	r3, [r2, #0]
 8001d32:	4b2c      	ldr	r3, [pc, #176]	@ (8001de4 <SystemInit+0x11c>)
 8001d34:	2200      	movs	r2, #0
 8001d36:	619a      	str	r2, [r3, #24]
 8001d38:	4b2a      	ldr	r3, [pc, #168]	@ (8001de4 <SystemInit+0x11c>)
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	61da      	str	r2, [r3, #28]
 8001d3e:	4b29      	ldr	r3, [pc, #164]	@ (8001de4 <SystemInit+0x11c>)
 8001d40:	2200      	movs	r2, #0
 8001d42:	621a      	str	r2, [r3, #32]
 8001d44:	4b27      	ldr	r3, [pc, #156]	@ (8001de4 <SystemInit+0x11c>)
 8001d46:	4a29      	ldr	r2, [pc, #164]	@ (8001dec <SystemInit+0x124>)
 8001d48:	629a      	str	r2, [r3, #40]	@ 0x28
 8001d4a:	4b26      	ldr	r3, [pc, #152]	@ (8001de4 <SystemInit+0x11c>)
 8001d4c:	4a28      	ldr	r2, [pc, #160]	@ (8001df0 <SystemInit+0x128>)
 8001d4e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001d50:	4b24      	ldr	r3, [pc, #144]	@ (8001de4 <SystemInit+0x11c>)
 8001d52:	4a28      	ldr	r2, [pc, #160]	@ (8001df4 <SystemInit+0x12c>)
 8001d54:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d56:	4b23      	ldr	r3, [pc, #140]	@ (8001de4 <SystemInit+0x11c>)
 8001d58:	2200      	movs	r2, #0
 8001d5a:	635a      	str	r2, [r3, #52]	@ 0x34
 8001d5c:	4b21      	ldr	r3, [pc, #132]	@ (8001de4 <SystemInit+0x11c>)
 8001d5e:	4a25      	ldr	r2, [pc, #148]	@ (8001df4 <SystemInit+0x12c>)
 8001d60:	639a      	str	r2, [r3, #56]	@ 0x38
 8001d62:	4b20      	ldr	r3, [pc, #128]	@ (8001de4 <SystemInit+0x11c>)
 8001d64:	2200      	movs	r2, #0
 8001d66:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001d68:	4b1e      	ldr	r3, [pc, #120]	@ (8001de4 <SystemInit+0x11c>)
 8001d6a:	4a22      	ldr	r2, [pc, #136]	@ (8001df4 <SystemInit+0x12c>)
 8001d6c:	641a      	str	r2, [r3, #64]	@ 0x40
 8001d6e:	4b1d      	ldr	r3, [pc, #116]	@ (8001de4 <SystemInit+0x11c>)
 8001d70:	2200      	movs	r2, #0
 8001d72:	645a      	str	r2, [r3, #68]	@ 0x44
 8001d74:	4b1b      	ldr	r3, [pc, #108]	@ (8001de4 <SystemInit+0x11c>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	4a1a      	ldr	r2, [pc, #104]	@ (8001de4 <SystemInit+0x11c>)
 8001d7a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001d7e:	6013      	str	r3, [r2, #0]
 8001d80:	4b18      	ldr	r3, [pc, #96]	@ (8001de4 <SystemInit+0x11c>)
 8001d82:	2200      	movs	r2, #0
 8001d84:	661a      	str	r2, [r3, #96]	@ 0x60
 8001d86:	4b1c      	ldr	r3, [pc, #112]	@ (8001df8 <SystemInit+0x130>)
 8001d88:	681a      	ldr	r2, [r3, #0]
 8001d8a:	4b1c      	ldr	r3, [pc, #112]	@ (8001dfc <SystemInit+0x134>)
 8001d8c:	4013      	ands	r3, r2
 8001d8e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8001d92:	d202      	bcs.n	8001d9a <SystemInit+0xd2>
 8001d94:	4b1a      	ldr	r3, [pc, #104]	@ (8001e00 <SystemInit+0x138>)
 8001d96:	2201      	movs	r2, #1
 8001d98:	601a      	str	r2, [r3, #0]
 8001d9a:	4b12      	ldr	r3, [pc, #72]	@ (8001de4 <SystemInit+0x11c>)
 8001d9c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8001da0:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001da4:	2b00      	cmp	r3, #0
 8001da6:	d113      	bne.n	8001dd0 <SystemInit+0x108>
 8001da8:	4b0e      	ldr	r3, [pc, #56]	@ (8001de4 <SystemInit+0x11c>)
 8001daa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8001dae:	4a0d      	ldr	r2, [pc, #52]	@ (8001de4 <SystemInit+0x11c>)
 8001db0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001db4:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 8001db8:	4b12      	ldr	r3, [pc, #72]	@ (8001e04 <SystemInit+0x13c>)
 8001dba:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8001dbe:	601a      	str	r2, [r3, #0]
 8001dc0:	4b08      	ldr	r3, [pc, #32]	@ (8001de4 <SystemInit+0x11c>)
 8001dc2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8001dc6:	4a07      	ldr	r2, [pc, #28]	@ (8001de4 <SystemInit+0x11c>)
 8001dc8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001dcc:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 8001dd0:	bf00      	nop
 8001dd2:	46bd      	mov	sp, r7
 8001dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd8:	4770      	bx	lr
 8001dda:	bf00      	nop
 8001ddc:	e000ed00 	.word	0xe000ed00
 8001de0:	52002000 	.word	0x52002000
 8001de4:	58024400 	.word	0x58024400
 8001de8:	eaf6ed7f 	.word	0xeaf6ed7f
 8001dec:	02020200 	.word	0x02020200
 8001df0:	01ff0000 	.word	0x01ff0000
 8001df4:	01010280 	.word	0x01010280
 8001df8:	5c001000 	.word	0x5c001000
 8001dfc:	ffff0000 	.word	0xffff0000
 8001e00:	51008108 	.word	0x51008108
 8001e04:	52004000 	.word	0x52004000

08001e08 <ExitRun0Mode>:
 8001e08:	b480      	push	{r7}
 8001e0a:	af00      	add	r7, sp, #0
 8001e0c:	4b09      	ldr	r3, [pc, #36]	@ (8001e34 <ExitRun0Mode+0x2c>)
 8001e0e:	68db      	ldr	r3, [r3, #12]
 8001e10:	4a08      	ldr	r2, [pc, #32]	@ (8001e34 <ExitRun0Mode+0x2c>)
 8001e12:	f043 0302 	orr.w	r3, r3, #2
 8001e16:	60d3      	str	r3, [r2, #12]
 8001e18:	bf00      	nop
 8001e1a:	4b06      	ldr	r3, [pc, #24]	@ (8001e34 <ExitRun0Mode+0x2c>)
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d0f9      	beq.n	8001e1a <ExitRun0Mode+0x12>
 8001e26:	bf00      	nop
 8001e28:	bf00      	nop
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e30:	4770      	bx	lr
 8001e32:	bf00      	nop
 8001e34:	58024800 	.word	0x58024800

08001e38 <Reset_Handler>:
 8001e38:	f8df d038 	ldr.w	sp, [pc, #56]	@ 8001e74 <LoopFillZerobss+0xe>
 8001e3c:	f7ff ffe4 	bl	8001e08 <ExitRun0Mode>
 8001e40:	f7ff ff42 	bl	8001cc8 <SystemInit>
 8001e44:	480c      	ldr	r0, [pc, #48]	@ (8001e78 <LoopFillZerobss+0x12>)
 8001e46:	490d      	ldr	r1, [pc, #52]	@ (8001e7c <LoopFillZerobss+0x16>)
 8001e48:	4a0d      	ldr	r2, [pc, #52]	@ (8001e80 <LoopFillZerobss+0x1a>)
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	e002      	b.n	8001e54 <LoopCopyDataInit>

08001e4e <CopyDataInit>:
 8001e4e:	58d4      	ldr	r4, [r2, r3]
 8001e50:	50c4      	str	r4, [r0, r3]
 8001e52:	3304      	adds	r3, #4

08001e54 <LoopCopyDataInit>:
 8001e54:	18c4      	adds	r4, r0, r3
 8001e56:	428c      	cmp	r4, r1
 8001e58:	d3f9      	bcc.n	8001e4e <CopyDataInit>
 8001e5a:	4a0a      	ldr	r2, [pc, #40]	@ (8001e84 <LoopFillZerobss+0x1e>)
 8001e5c:	4c0a      	ldr	r4, [pc, #40]	@ (8001e88 <LoopFillZerobss+0x22>)
 8001e5e:	2300      	movs	r3, #0
 8001e60:	e001      	b.n	8001e66 <LoopFillZerobss>

08001e62 <FillZerobss>:
 8001e62:	6013      	str	r3, [r2, #0]
 8001e64:	3204      	adds	r2, #4

08001e66 <LoopFillZerobss>:
 8001e66:	42a2      	cmp	r2, r4
 8001e68:	d3fb      	bcc.n	8001e62 <FillZerobss>
 8001e6a:	f009 f8c5 	bl	800aff8 <__libc_init_array>
 8001e6e:	f7fe fca7 	bl	80007c0 <main>
 8001e72:	4770      	bx	lr
 8001e74:	24080000 	.word	0x24080000
 8001e78:	24000000 	.word	0x24000000
 8001e7c:	2400017c 	.word	0x2400017c
 8001e80:	0800b1ac 	.word	0x0800b1ac
 8001e84:	2400017c 	.word	0x2400017c
 8001e88:	24004d54 	.word	0x24004d54

08001e8c <ADC3_IRQHandler>:
 8001e8c:	e7fe      	b.n	8001e8c <ADC3_IRQHandler>
	...

08001e90 <HAL_Init>:
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b082      	sub	sp, #8
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	2003      	movs	r0, #3
 8001e98:	f001 fdbd 	bl	8003a16 <HAL_NVIC_SetPriorityGrouping>
 8001e9c:	f002 fe7a 	bl	8004b94 <HAL_RCC_GetSysClockFreq>
 8001ea0:	4602      	mov	r2, r0
 8001ea2:	4b15      	ldr	r3, [pc, #84]	@ (8001ef8 <HAL_Init+0x68>)
 8001ea4:	699b      	ldr	r3, [r3, #24]
 8001ea6:	0a1b      	lsrs	r3, r3, #8
 8001ea8:	f003 030f 	and.w	r3, r3, #15
 8001eac:	4913      	ldr	r1, [pc, #76]	@ (8001efc <HAL_Init+0x6c>)
 8001eae:	5ccb      	ldrb	r3, [r1, r3]
 8001eb0:	f003 031f 	and.w	r3, r3, #31
 8001eb4:	fa22 f303 	lsr.w	r3, r2, r3
 8001eb8:	607b      	str	r3, [r7, #4]
 8001eba:	4b0f      	ldr	r3, [pc, #60]	@ (8001ef8 <HAL_Init+0x68>)
 8001ebc:	699b      	ldr	r3, [r3, #24]
 8001ebe:	f003 030f 	and.w	r3, r3, #15
 8001ec2:	4a0e      	ldr	r2, [pc, #56]	@ (8001efc <HAL_Init+0x6c>)
 8001ec4:	5cd3      	ldrb	r3, [r2, r3]
 8001ec6:	f003 031f 	and.w	r3, r3, #31
 8001eca:	687a      	ldr	r2, [r7, #4]
 8001ecc:	fa22 f303 	lsr.w	r3, r2, r3
 8001ed0:	4a0b      	ldr	r2, [pc, #44]	@ (8001f00 <HAL_Init+0x70>)
 8001ed2:	6013      	str	r3, [r2, #0]
 8001ed4:	4a0b      	ldr	r2, [pc, #44]	@ (8001f04 <HAL_Init+0x74>)
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	6013      	str	r3, [r2, #0]
 8001eda:	200f      	movs	r0, #15
 8001edc:	f7ff fe6c 	bl	8001bb8 <HAL_InitTick>
 8001ee0:	4603      	mov	r3, r0
 8001ee2:	2b00      	cmp	r3, #0
 8001ee4:	d001      	beq.n	8001eea <HAL_Init+0x5a>
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	e002      	b.n	8001ef0 <HAL_Init+0x60>
 8001eea:	f7ff fdb3 	bl	8001a54 <HAL_MspInit>
 8001eee:	2300      	movs	r3, #0
 8001ef0:	4618      	mov	r0, r3
 8001ef2:	3708      	adds	r7, #8
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	bd80      	pop	{r7, pc}
 8001ef8:	58024400 	.word	0x58024400
 8001efc:	0800b194 	.word	0x0800b194
 8001f00:	2400016c 	.word	0x2400016c
 8001f04:	24000168 	.word	0x24000168

08001f08 <HAL_IncTick>:
 8001f08:	b480      	push	{r7}
 8001f0a:	af00      	add	r7, sp, #0
 8001f0c:	4b06      	ldr	r3, [pc, #24]	@ (8001f28 <HAL_IncTick+0x20>)
 8001f0e:	781b      	ldrb	r3, [r3, #0]
 8001f10:	461a      	mov	r2, r3
 8001f12:	4b06      	ldr	r3, [pc, #24]	@ (8001f2c <HAL_IncTick+0x24>)
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	4413      	add	r3, r2
 8001f18:	4a04      	ldr	r2, [pc, #16]	@ (8001f2c <HAL_IncTick+0x24>)
 8001f1a:	6013      	str	r3, [r2, #0]
 8001f1c:	bf00      	nop
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f24:	4770      	bx	lr
 8001f26:	bf00      	nop
 8001f28:	24000174 	.word	0x24000174
 8001f2c:	24000400 	.word	0x24000400

08001f30 <HAL_GetTick>:
 8001f30:	b480      	push	{r7}
 8001f32:	af00      	add	r7, sp, #0
 8001f34:	4b03      	ldr	r3, [pc, #12]	@ (8001f44 <HAL_GetTick+0x14>)
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	4618      	mov	r0, r3
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f40:	4770      	bx	lr
 8001f42:	bf00      	nop
 8001f44:	24000400 	.word	0x24000400

08001f48 <HAL_GetREVID>:
 8001f48:	b480      	push	{r7}
 8001f4a:	af00      	add	r7, sp, #0
 8001f4c:	4b03      	ldr	r3, [pc, #12]	@ (8001f5c <HAL_GetREVID+0x14>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	0c1b      	lsrs	r3, r3, #16
 8001f52:	4618      	mov	r0, r3
 8001f54:	46bd      	mov	sp, r7
 8001f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f5a:	4770      	bx	lr
 8001f5c:	5c001000 	.word	0x5c001000

08001f60 <LL_ADC_SetCommonClock>:
 8001f60:	b480      	push	{r7}
 8001f62:	b083      	sub	sp, #12
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	6078      	str	r0, [r7, #4]
 8001f68:	6039      	str	r1, [r7, #0]
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	689b      	ldr	r3, [r3, #8]
 8001f6e:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8001f72:	683b      	ldr	r3, [r7, #0]
 8001f74:	431a      	orrs	r2, r3
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	609a      	str	r2, [r3, #8]
 8001f7a:	bf00      	nop
 8001f7c:	370c      	adds	r7, #12
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f84:	4770      	bx	lr

08001f86 <LL_ADC_SetCommonPathInternalCh>:
 8001f86:	b480      	push	{r7}
 8001f88:	b083      	sub	sp, #12
 8001f8a:	af00      	add	r7, sp, #0
 8001f8c:	6078      	str	r0, [r7, #4]
 8001f8e:	6039      	str	r1, [r7, #0]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	689b      	ldr	r3, [r3, #8]
 8001f94:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8001f98:	683b      	ldr	r3, [r7, #0]
 8001f9a:	431a      	orrs	r2, r3
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	609a      	str	r2, [r3, #8]
 8001fa0:	bf00      	nop
 8001fa2:	370c      	adds	r7, #12
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001faa:	4770      	bx	lr

08001fac <LL_ADC_GetCommonPathInternalCh>:
 8001fac:	b480      	push	{r7}
 8001fae:	b083      	sub	sp, #12
 8001fb0:	af00      	add	r7, sp, #0
 8001fb2:	6078      	str	r0, [r7, #4]
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	689b      	ldr	r3, [r3, #8]
 8001fb8:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	370c      	adds	r7, #12
 8001fc0:	46bd      	mov	sp, r7
 8001fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc6:	4770      	bx	lr

08001fc8 <LL_ADC_SetChannelPreselection>:
 8001fc8:	b480      	push	{r7}
 8001fca:	b087      	sub	sp, #28
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	6078      	str	r0, [r7, #4]
 8001fd0:	6039      	str	r1, [r7, #0]
 8001fd2:	683b      	ldr	r3, [r7, #0]
 8001fd4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	d107      	bne.n	8001fec <LL_ADC_SetChannelPreselection+0x24>
 8001fdc:	683b      	ldr	r3, [r7, #0]
 8001fde:	0e9b      	lsrs	r3, r3, #26
 8001fe0:	f003 031f 	and.w	r3, r3, #31
 8001fe4:	2201      	movs	r2, #1
 8001fe6:	fa02 f303 	lsl.w	r3, r2, r3
 8001fea:	e015      	b.n	8002018 <LL_ADC_SetChannelPreselection+0x50>
 8001fec:	683b      	ldr	r3, [r7, #0]
 8001fee:	613b      	str	r3, [r7, #16]
 8001ff0:	693b      	ldr	r3, [r7, #16]
 8001ff2:	fa93 f3a3 	rbit	r3, r3
 8001ff6:	60fb      	str	r3, [r7, #12]
 8001ff8:	68fb      	ldr	r3, [r7, #12]
 8001ffa:	617b      	str	r3, [r7, #20]
 8001ffc:	697b      	ldr	r3, [r7, #20]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d101      	bne.n	8002006 <LL_ADC_SetChannelPreselection+0x3e>
 8002002:	2320      	movs	r3, #32
 8002004:	e003      	b.n	800200e <LL_ADC_SetChannelPreselection+0x46>
 8002006:	697b      	ldr	r3, [r7, #20]
 8002008:	fab3 f383 	clz	r3, r3
 800200c:	b2db      	uxtb	r3, r3
 800200e:	f003 031f 	and.w	r3, r3, #31
 8002012:	2201      	movs	r2, #1
 8002014:	fa02 f303 	lsl.w	r3, r2, r3
 8002018:	687a      	ldr	r2, [r7, #4]
 800201a:	69d2      	ldr	r2, [r2, #28]
 800201c:	431a      	orrs	r2, r3
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	61da      	str	r2, [r3, #28]
 8002022:	bf00      	nop
 8002024:	371c      	adds	r7, #28
 8002026:	46bd      	mov	sp, r7
 8002028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800202c:	4770      	bx	lr

0800202e <LL_ADC_SetOffset>:
 800202e:	b480      	push	{r7}
 8002030:	b087      	sub	sp, #28
 8002032:	af00      	add	r7, sp, #0
 8002034:	60f8      	str	r0, [r7, #12]
 8002036:	60b9      	str	r1, [r7, #8]
 8002038:	607a      	str	r2, [r7, #4]
 800203a:	603b      	str	r3, [r7, #0]
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	3360      	adds	r3, #96	@ 0x60
 8002040:	461a      	mov	r2, r3
 8002042:	68bb      	ldr	r3, [r7, #8]
 8002044:	009b      	lsls	r3, r3, #2
 8002046:	4413      	add	r3, r2
 8002048:	617b      	str	r3, [r7, #20]
 800204a:	697b      	ldr	r3, [r7, #20]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	f003 41f8 	and.w	r1, r3, #2080374784	@ 0x7c000000
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	430b      	orrs	r3, r1
 800205c:	431a      	orrs	r2, r3
 800205e:	697b      	ldr	r3, [r7, #20]
 8002060:	601a      	str	r2, [r3, #0]
 8002062:	bf00      	nop
 8002064:	371c      	adds	r7, #28
 8002066:	46bd      	mov	sp, r7
 8002068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206c:	4770      	bx	lr

0800206e <LL_ADC_SetDataRightShift>:
 800206e:	b480      	push	{r7}
 8002070:	b085      	sub	sp, #20
 8002072:	af00      	add	r7, sp, #0
 8002074:	60f8      	str	r0, [r7, #12]
 8002076:	60b9      	str	r1, [r7, #8]
 8002078:	607a      	str	r2, [r7, #4]
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	691b      	ldr	r3, [r3, #16]
 800207e:	f423 42f0 	bic.w	r2, r3, #30720	@ 0x7800
 8002082:	68bb      	ldr	r3, [r7, #8]
 8002084:	f003 031f 	and.w	r3, r3, #31
 8002088:	6879      	ldr	r1, [r7, #4]
 800208a:	fa01 f303 	lsl.w	r3, r1, r3
 800208e:	431a      	orrs	r2, r3
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	611a      	str	r2, [r3, #16]
 8002094:	bf00      	nop
 8002096:	3714      	adds	r7, #20
 8002098:	46bd      	mov	sp, r7
 800209a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800209e:	4770      	bx	lr

080020a0 <LL_ADC_SetOffsetSignedSaturation>:
 80020a0:	b480      	push	{r7}
 80020a2:	b087      	sub	sp, #28
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	60f8      	str	r0, [r7, #12]
 80020a8:	60b9      	str	r1, [r7, #8]
 80020aa:	607a      	str	r2, [r7, #4]
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	3360      	adds	r3, #96	@ 0x60
 80020b0:	461a      	mov	r2, r3
 80020b2:	68bb      	ldr	r3, [r7, #8]
 80020b4:	009b      	lsls	r3, r3, #2
 80020b6:	4413      	add	r3, r2
 80020b8:	617b      	str	r3, [r7, #20]
 80020ba:	697b      	ldr	r3, [r7, #20]
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	431a      	orrs	r2, r3
 80020c6:	697b      	ldr	r3, [r7, #20]
 80020c8:	601a      	str	r2, [r3, #0]
 80020ca:	bf00      	nop
 80020cc:	371c      	adds	r7, #28
 80020ce:	46bd      	mov	sp, r7
 80020d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d4:	4770      	bx	lr

080020d6 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80020d6:	b480      	push	{r7}
 80020d8:	b083      	sub	sp, #12
 80020da:	af00      	add	r7, sp, #0
 80020dc:	6078      	str	r0, [r7, #4]
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	68db      	ldr	r3, [r3, #12]
 80020e2:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 80020e6:	2b00      	cmp	r3, #0
 80020e8:	d101      	bne.n	80020ee <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 80020ea:	2301      	movs	r3, #1
 80020ec:	e000      	b.n	80020f0 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 80020ee:	2300      	movs	r3, #0
 80020f0:	4618      	mov	r0, r3
 80020f2:	370c      	adds	r7, #12
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr

080020fc <LL_ADC_REG_SetSequencerRanks>:
 80020fc:	b480      	push	{r7}
 80020fe:	b087      	sub	sp, #28
 8002100:	af00      	add	r7, sp, #0
 8002102:	60f8      	str	r0, [r7, #12]
 8002104:	60b9      	str	r1, [r7, #8]
 8002106:	607a      	str	r2, [r7, #4]
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	3330      	adds	r3, #48	@ 0x30
 800210c:	461a      	mov	r2, r3
 800210e:	68bb      	ldr	r3, [r7, #8]
 8002110:	0a1b      	lsrs	r3, r3, #8
 8002112:	009b      	lsls	r3, r3, #2
 8002114:	f003 030c 	and.w	r3, r3, #12
 8002118:	4413      	add	r3, r2
 800211a:	617b      	str	r3, [r7, #20]
 800211c:	697b      	ldr	r3, [r7, #20]
 800211e:	681a      	ldr	r2, [r3, #0]
 8002120:	68bb      	ldr	r3, [r7, #8]
 8002122:	f003 031f 	and.w	r3, r3, #31
 8002126:	211f      	movs	r1, #31
 8002128:	fa01 f303 	lsl.w	r3, r1, r3
 800212c:	43db      	mvns	r3, r3
 800212e:	401a      	ands	r2, r3
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	0e9b      	lsrs	r3, r3, #26
 8002134:	f003 011f 	and.w	r1, r3, #31
 8002138:	68bb      	ldr	r3, [r7, #8]
 800213a:	f003 031f 	and.w	r3, r3, #31
 800213e:	fa01 f303 	lsl.w	r3, r1, r3
 8002142:	431a      	orrs	r2, r3
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	601a      	str	r2, [r3, #0]
 8002148:	bf00      	nop
 800214a:	371c      	adds	r7, #28
 800214c:	46bd      	mov	sp, r7
 800214e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002152:	4770      	bx	lr

08002154 <LL_ADC_SetChannelSamplingTime>:
 8002154:	b480      	push	{r7}
 8002156:	b087      	sub	sp, #28
 8002158:	af00      	add	r7, sp, #0
 800215a:	60f8      	str	r0, [r7, #12]
 800215c:	60b9      	str	r1, [r7, #8]
 800215e:	607a      	str	r2, [r7, #4]
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	3314      	adds	r3, #20
 8002164:	461a      	mov	r2, r3
 8002166:	68bb      	ldr	r3, [r7, #8]
 8002168:	0e5b      	lsrs	r3, r3, #25
 800216a:	009b      	lsls	r3, r3, #2
 800216c:	f003 0304 	and.w	r3, r3, #4
 8002170:	4413      	add	r3, r2
 8002172:	617b      	str	r3, [r7, #20]
 8002174:	697b      	ldr	r3, [r7, #20]
 8002176:	681a      	ldr	r2, [r3, #0]
 8002178:	68bb      	ldr	r3, [r7, #8]
 800217a:	0d1b      	lsrs	r3, r3, #20
 800217c:	f003 031f 	and.w	r3, r3, #31
 8002180:	2107      	movs	r1, #7
 8002182:	fa01 f303 	lsl.w	r3, r1, r3
 8002186:	43db      	mvns	r3, r3
 8002188:	401a      	ands	r2, r3
 800218a:	68bb      	ldr	r3, [r7, #8]
 800218c:	0d1b      	lsrs	r3, r3, #20
 800218e:	f003 031f 	and.w	r3, r3, #31
 8002192:	6879      	ldr	r1, [r7, #4]
 8002194:	fa01 f303 	lsl.w	r3, r1, r3
 8002198:	431a      	orrs	r2, r3
 800219a:	697b      	ldr	r3, [r7, #20]
 800219c:	601a      	str	r2, [r3, #0]
 800219e:	bf00      	nop
 80021a0:	371c      	adds	r7, #28
 80021a2:	46bd      	mov	sp, r7
 80021a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a8:	4770      	bx	lr
	...

080021ac <LL_ADC_SetChannelSingleDiff>:
 80021ac:	b480      	push	{r7}
 80021ae:	b085      	sub	sp, #20
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	60f8      	str	r0, [r7, #12]
 80021b4:	60b9      	str	r1, [r7, #8]
 80021b6:	607a      	str	r2, [r7, #4]
 80021b8:	68fb      	ldr	r3, [r7, #12]
 80021ba:	f8d3 20c0 	ldr.w	r2, [r3, #192]	@ 0xc0
 80021be:	68bb      	ldr	r3, [r7, #8]
 80021c0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021c4:	43db      	mvns	r3, r3
 80021c6:	401a      	ands	r2, r3
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	f003 0318 	and.w	r3, r3, #24
 80021ce:	4908      	ldr	r1, [pc, #32]	@ (80021f0 <LL_ADC_SetChannelSingleDiff+0x44>)
 80021d0:	40d9      	lsrs	r1, r3
 80021d2:	68bb      	ldr	r3, [r7, #8]
 80021d4:	400b      	ands	r3, r1
 80021d6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021da:	431a      	orrs	r2, r3
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80021e2:	bf00      	nop
 80021e4:	3714      	adds	r7, #20
 80021e6:	46bd      	mov	sp, r7
 80021e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ec:	4770      	bx	lr
 80021ee:	bf00      	nop
 80021f0:	000fffff 	.word	0x000fffff

080021f4 <LL_ADC_GetMultimode>:
 80021f4:	b480      	push	{r7}
 80021f6:	b083      	sub	sp, #12
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	6078      	str	r0, [r7, #4]
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	689b      	ldr	r3, [r3, #8]
 8002200:	f003 031f 	and.w	r3, r3, #31
 8002204:	4618      	mov	r0, r3
 8002206:	370c      	adds	r7, #12
 8002208:	46bd      	mov	sp, r7
 800220a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220e:	4770      	bx	lr

08002210 <LL_ADC_GetMultiDMATransfer>:
 8002210:	b480      	push	{r7}
 8002212:	b083      	sub	sp, #12
 8002214:	af00      	add	r7, sp, #0
 8002216:	6078      	str	r0, [r7, #4]
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	689b      	ldr	r3, [r3, #8]
 800221c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002220:	4618      	mov	r0, r3
 8002222:	370c      	adds	r7, #12
 8002224:	46bd      	mov	sp, r7
 8002226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800222a:	4770      	bx	lr

0800222c <LL_ADC_DisableDeepPowerDown>:
 800222c:	b480      	push	{r7}
 800222e:	b083      	sub	sp, #12
 8002230:	af00      	add	r7, sp, #0
 8002232:	6078      	str	r0, [r7, #4]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	689a      	ldr	r2, [r3, #8]
 8002238:	4b04      	ldr	r3, [pc, #16]	@ (800224c <LL_ADC_DisableDeepPowerDown+0x20>)
 800223a:	4013      	ands	r3, r2
 800223c:	687a      	ldr	r2, [r7, #4]
 800223e:	6093      	str	r3, [r2, #8]
 8002240:	bf00      	nop
 8002242:	370c      	adds	r7, #12
 8002244:	46bd      	mov	sp, r7
 8002246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224a:	4770      	bx	lr
 800224c:	5fffffc0 	.word	0x5fffffc0

08002250 <LL_ADC_IsDeepPowerDownEnabled>:
 8002250:	b480      	push	{r7}
 8002252:	b083      	sub	sp, #12
 8002254:	af00      	add	r7, sp, #0
 8002256:	6078      	str	r0, [r7, #4]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	689b      	ldr	r3, [r3, #8]
 800225c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8002260:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8002264:	d101      	bne.n	800226a <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8002266:	2301      	movs	r3, #1
 8002268:	e000      	b.n	800226c <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 800226a:	2300      	movs	r3, #0
 800226c:	4618      	mov	r0, r3
 800226e:	370c      	adds	r7, #12
 8002270:	46bd      	mov	sp, r7
 8002272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002276:	4770      	bx	lr

08002278 <LL_ADC_EnableInternalRegulator>:
 8002278:	b480      	push	{r7}
 800227a:	b083      	sub	sp, #12
 800227c:	af00      	add	r7, sp, #0
 800227e:	6078      	str	r0, [r7, #4]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	689a      	ldr	r2, [r3, #8]
 8002284:	4b05      	ldr	r3, [pc, #20]	@ (800229c <LL_ADC_EnableInternalRegulator+0x24>)
 8002286:	4013      	ands	r3, r2
 8002288:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	609a      	str	r2, [r3, #8]
 8002290:	bf00      	nop
 8002292:	370c      	adds	r7, #12
 8002294:	46bd      	mov	sp, r7
 8002296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800229a:	4770      	bx	lr
 800229c:	6fffffc0 	.word	0x6fffffc0

080022a0 <LL_ADC_IsInternalRegulatorEnabled>:
 80022a0:	b480      	push	{r7}
 80022a2:	b083      	sub	sp, #12
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	689b      	ldr	r3, [r3, #8]
 80022ac:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80022b0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80022b4:	d101      	bne.n	80022ba <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80022b6:	2301      	movs	r3, #1
 80022b8:	e000      	b.n	80022bc <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80022ba:	2300      	movs	r3, #0
 80022bc:	4618      	mov	r0, r3
 80022be:	370c      	adds	r7, #12
 80022c0:	46bd      	mov	sp, r7
 80022c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c6:	4770      	bx	lr

080022c8 <LL_ADC_Enable>:
 80022c8:	b480      	push	{r7}
 80022ca:	b083      	sub	sp, #12
 80022cc:	af00      	add	r7, sp, #0
 80022ce:	6078      	str	r0, [r7, #4]
 80022d0:	687b      	ldr	r3, [r7, #4]
 80022d2:	689a      	ldr	r2, [r3, #8]
 80022d4:	4b05      	ldr	r3, [pc, #20]	@ (80022ec <LL_ADC_Enable+0x24>)
 80022d6:	4013      	ands	r3, r2
 80022d8:	f043 0201 	orr.w	r2, r3, #1
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	609a      	str	r2, [r3, #8]
 80022e0:	bf00      	nop
 80022e2:	370c      	adds	r7, #12
 80022e4:	46bd      	mov	sp, r7
 80022e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ea:	4770      	bx	lr
 80022ec:	7fffffc0 	.word	0x7fffffc0

080022f0 <LL_ADC_Disable>:
 80022f0:	b480      	push	{r7}
 80022f2:	b083      	sub	sp, #12
 80022f4:	af00      	add	r7, sp, #0
 80022f6:	6078      	str	r0, [r7, #4]
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	689a      	ldr	r2, [r3, #8]
 80022fc:	4b05      	ldr	r3, [pc, #20]	@ (8002314 <LL_ADC_Disable+0x24>)
 80022fe:	4013      	ands	r3, r2
 8002300:	f043 0202 	orr.w	r2, r3, #2
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	609a      	str	r2, [r3, #8]
 8002308:	bf00      	nop
 800230a:	370c      	adds	r7, #12
 800230c:	46bd      	mov	sp, r7
 800230e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002312:	4770      	bx	lr
 8002314:	7fffffc0 	.word	0x7fffffc0

08002318 <LL_ADC_IsEnabled>:
 8002318:	b480      	push	{r7}
 800231a:	b083      	sub	sp, #12
 800231c:	af00      	add	r7, sp, #0
 800231e:	6078      	str	r0, [r7, #4]
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	689b      	ldr	r3, [r3, #8]
 8002324:	f003 0301 	and.w	r3, r3, #1
 8002328:	2b01      	cmp	r3, #1
 800232a:	d101      	bne.n	8002330 <LL_ADC_IsEnabled+0x18>
 800232c:	2301      	movs	r3, #1
 800232e:	e000      	b.n	8002332 <LL_ADC_IsEnabled+0x1a>
 8002330:	2300      	movs	r3, #0
 8002332:	4618      	mov	r0, r3
 8002334:	370c      	adds	r7, #12
 8002336:	46bd      	mov	sp, r7
 8002338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800233c:	4770      	bx	lr

0800233e <LL_ADC_IsDisableOngoing>:
 800233e:	b480      	push	{r7}
 8002340:	b083      	sub	sp, #12
 8002342:	af00      	add	r7, sp, #0
 8002344:	6078      	str	r0, [r7, #4]
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	689b      	ldr	r3, [r3, #8]
 800234a:	f003 0302 	and.w	r3, r3, #2
 800234e:	2b02      	cmp	r3, #2
 8002350:	d101      	bne.n	8002356 <LL_ADC_IsDisableOngoing+0x18>
 8002352:	2301      	movs	r3, #1
 8002354:	e000      	b.n	8002358 <LL_ADC_IsDisableOngoing+0x1a>
 8002356:	2300      	movs	r3, #0
 8002358:	4618      	mov	r0, r3
 800235a:	370c      	adds	r7, #12
 800235c:	46bd      	mov	sp, r7
 800235e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002362:	4770      	bx	lr

08002364 <LL_ADC_REG_StartConversion>:
 8002364:	b480      	push	{r7}
 8002366:	b083      	sub	sp, #12
 8002368:	af00      	add	r7, sp, #0
 800236a:	6078      	str	r0, [r7, #4]
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	689a      	ldr	r2, [r3, #8]
 8002370:	4b05      	ldr	r3, [pc, #20]	@ (8002388 <LL_ADC_REG_StartConversion+0x24>)
 8002372:	4013      	ands	r3, r2
 8002374:	f043 0204 	orr.w	r2, r3, #4
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	609a      	str	r2, [r3, #8]
 800237c:	bf00      	nop
 800237e:	370c      	adds	r7, #12
 8002380:	46bd      	mov	sp, r7
 8002382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002386:	4770      	bx	lr
 8002388:	7fffffc0 	.word	0x7fffffc0

0800238c <LL_ADC_REG_StopConversion>:
 800238c:	b480      	push	{r7}
 800238e:	b083      	sub	sp, #12
 8002390:	af00      	add	r7, sp, #0
 8002392:	6078      	str	r0, [r7, #4]
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	689a      	ldr	r2, [r3, #8]
 8002398:	4b05      	ldr	r3, [pc, #20]	@ (80023b0 <LL_ADC_REG_StopConversion+0x24>)
 800239a:	4013      	ands	r3, r2
 800239c:	f043 0210 	orr.w	r2, r3, #16
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	609a      	str	r2, [r3, #8]
 80023a4:	bf00      	nop
 80023a6:	370c      	adds	r7, #12
 80023a8:	46bd      	mov	sp, r7
 80023aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ae:	4770      	bx	lr
 80023b0:	7fffffc0 	.word	0x7fffffc0

080023b4 <LL_ADC_REG_IsConversionOngoing>:
 80023b4:	b480      	push	{r7}
 80023b6:	b083      	sub	sp, #12
 80023b8:	af00      	add	r7, sp, #0
 80023ba:	6078      	str	r0, [r7, #4]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	689b      	ldr	r3, [r3, #8]
 80023c0:	f003 0304 	and.w	r3, r3, #4
 80023c4:	2b04      	cmp	r3, #4
 80023c6:	d101      	bne.n	80023cc <LL_ADC_REG_IsConversionOngoing+0x18>
 80023c8:	2301      	movs	r3, #1
 80023ca:	e000      	b.n	80023ce <LL_ADC_REG_IsConversionOngoing+0x1a>
 80023cc:	2300      	movs	r3, #0
 80023ce:	4618      	mov	r0, r3
 80023d0:	370c      	adds	r7, #12
 80023d2:	46bd      	mov	sp, r7
 80023d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d8:	4770      	bx	lr
	...

080023dc <LL_ADC_INJ_StopConversion>:
 80023dc:	b480      	push	{r7}
 80023de:	b083      	sub	sp, #12
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	689a      	ldr	r2, [r3, #8]
 80023e8:	4b05      	ldr	r3, [pc, #20]	@ (8002400 <LL_ADC_INJ_StopConversion+0x24>)
 80023ea:	4013      	ands	r3, r2
 80023ec:	f043 0220 	orr.w	r2, r3, #32
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	609a      	str	r2, [r3, #8]
 80023f4:	bf00      	nop
 80023f6:	370c      	adds	r7, #12
 80023f8:	46bd      	mov	sp, r7
 80023fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023fe:	4770      	bx	lr
 8002400:	7fffffc0 	.word	0x7fffffc0

08002404 <LL_ADC_INJ_IsConversionOngoing>:
 8002404:	b480      	push	{r7}
 8002406:	b083      	sub	sp, #12
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	689b      	ldr	r3, [r3, #8]
 8002410:	f003 0308 	and.w	r3, r3, #8
 8002414:	2b08      	cmp	r3, #8
 8002416:	d101      	bne.n	800241c <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002418:	2301      	movs	r3, #1
 800241a:	e000      	b.n	800241e <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800241c:	2300      	movs	r3, #0
 800241e:	4618      	mov	r0, r3
 8002420:	370c      	adds	r7, #12
 8002422:	46bd      	mov	sp, r7
 8002424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002428:	4770      	bx	lr
	...

0800242c <HAL_ADC_Init>:
 800242c:	b590      	push	{r4, r7, lr}
 800242e:	b089      	sub	sp, #36	@ 0x24
 8002430:	af00      	add	r7, sp, #0
 8002432:	6078      	str	r0, [r7, #4]
 8002434:	2300      	movs	r3, #0
 8002436:	77fb      	strb	r3, [r7, #31]
 8002438:	2300      	movs	r3, #0
 800243a:	60bb      	str	r3, [r7, #8]
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2b00      	cmp	r3, #0
 8002440:	d101      	bne.n	8002446 <HAL_ADC_Init+0x1a>
 8002442:	2301      	movs	r3, #1
 8002444:	e18f      	b.n	8002766 <HAL_ADC_Init+0x33a>
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	68db      	ldr	r3, [r3, #12]
 800244a:	2b00      	cmp	r3, #0
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002450:	2b00      	cmp	r3, #0
 8002452:	d109      	bne.n	8002468 <HAL_ADC_Init+0x3c>
 8002454:	6878      	ldr	r0, [r7, #4]
 8002456:	f7ff fb1b 	bl	8001a90 <HAL_ADC_MspInit>
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	2200      	movs	r2, #0
 800245e:	659a      	str	r2, [r3, #88]	@ 0x58
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	2200      	movs	r2, #0
 8002464:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	4618      	mov	r0, r3
 800246e:	f7ff feef 	bl	8002250 <LL_ADC_IsDeepPowerDownEnabled>
 8002472:	4603      	mov	r3, r0
 8002474:	2b00      	cmp	r3, #0
 8002476:	d004      	beq.n	8002482 <HAL_ADC_Init+0x56>
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4618      	mov	r0, r3
 800247e:	f7ff fed5 	bl	800222c <LL_ADC_DisableDeepPowerDown>
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	681b      	ldr	r3, [r3, #0]
 8002486:	4618      	mov	r0, r3
 8002488:	f7ff ff0a 	bl	80022a0 <LL_ADC_IsInternalRegulatorEnabled>
 800248c:	4603      	mov	r3, r0
 800248e:	2b00      	cmp	r3, #0
 8002490:	d114      	bne.n	80024bc <HAL_ADC_Init+0x90>
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	681b      	ldr	r3, [r3, #0]
 8002496:	4618      	mov	r0, r3
 8002498:	f7ff feee 	bl	8002278 <LL_ADC_EnableInternalRegulator>
 800249c:	4b87      	ldr	r3, [pc, #540]	@ (80026bc <HAL_ADC_Init+0x290>)
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	099b      	lsrs	r3, r3, #6
 80024a2:	4a87      	ldr	r2, [pc, #540]	@ (80026c0 <HAL_ADC_Init+0x294>)
 80024a4:	fba2 2303 	umull	r2, r3, r2, r3
 80024a8:	099b      	lsrs	r3, r3, #6
 80024aa:	3301      	adds	r3, #1
 80024ac:	60bb      	str	r3, [r7, #8]
 80024ae:	e002      	b.n	80024b6 <HAL_ADC_Init+0x8a>
 80024b0:	68bb      	ldr	r3, [r7, #8]
 80024b2:	3b01      	subs	r3, #1
 80024b4:	60bb      	str	r3, [r7, #8]
 80024b6:	68bb      	ldr	r3, [r7, #8]
 80024b8:	2b00      	cmp	r3, #0
 80024ba:	d1f9      	bne.n	80024b0 <HAL_ADC_Init+0x84>
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	4618      	mov	r0, r3
 80024c2:	f7ff feed 	bl	80022a0 <LL_ADC_IsInternalRegulatorEnabled>
 80024c6:	4603      	mov	r3, r0
 80024c8:	2b00      	cmp	r3, #0
 80024ca:	d10d      	bne.n	80024e8 <HAL_ADC_Init+0xbc>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80024d0:	f043 0210 	orr.w	r2, r3, #16
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	655a      	str	r2, [r3, #84]	@ 0x54
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80024dc:	f043 0201 	orr.w	r2, r3, #1
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	659a      	str	r2, [r3, #88]	@ 0x58
 80024e4:	2301      	movs	r3, #1
 80024e6:	77fb      	strb	r3, [r7, #31]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	4618      	mov	r0, r3
 80024ee:	f7ff ff61 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 80024f2:	6178      	str	r0, [r7, #20]
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80024f8:	f003 0310 	and.w	r3, r3, #16
 80024fc:	2b00      	cmp	r3, #0
 80024fe:	f040 8129 	bne.w	8002754 <HAL_ADC_Init+0x328>
 8002502:	697b      	ldr	r3, [r7, #20]
 8002504:	2b00      	cmp	r3, #0
 8002506:	f040 8125 	bne.w	8002754 <HAL_ADC_Init+0x328>
 800250a:	687b      	ldr	r3, [r7, #4]
 800250c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800250e:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8002512:	f043 0202 	orr.w	r2, r3, #2
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	655a      	str	r2, [r3, #84]	@ 0x54
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	4618      	mov	r0, r3
 8002520:	f7ff fefa 	bl	8002318 <LL_ADC_IsEnabled>
 8002524:	4603      	mov	r3, r0
 8002526:	2b00      	cmp	r3, #0
 8002528:	d136      	bne.n	8002598 <HAL_ADC_Init+0x16c>
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4a65      	ldr	r2, [pc, #404]	@ (80026c4 <HAL_ADC_Init+0x298>)
 8002530:	4293      	cmp	r3, r2
 8002532:	d004      	beq.n	800253e <HAL_ADC_Init+0x112>
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	4a63      	ldr	r2, [pc, #396]	@ (80026c8 <HAL_ADC_Init+0x29c>)
 800253a:	4293      	cmp	r3, r2
 800253c:	d10e      	bne.n	800255c <HAL_ADC_Init+0x130>
 800253e:	4861      	ldr	r0, [pc, #388]	@ (80026c4 <HAL_ADC_Init+0x298>)
 8002540:	f7ff feea 	bl	8002318 <LL_ADC_IsEnabled>
 8002544:	4604      	mov	r4, r0
 8002546:	4860      	ldr	r0, [pc, #384]	@ (80026c8 <HAL_ADC_Init+0x29c>)
 8002548:	f7ff fee6 	bl	8002318 <LL_ADC_IsEnabled>
 800254c:	4603      	mov	r3, r0
 800254e:	4323      	orrs	r3, r4
 8002550:	2b00      	cmp	r3, #0
 8002552:	bf0c      	ite	eq
 8002554:	2301      	moveq	r3, #1
 8002556:	2300      	movne	r3, #0
 8002558:	b2db      	uxtb	r3, r3
 800255a:	e008      	b.n	800256e <HAL_ADC_Init+0x142>
 800255c:	485b      	ldr	r0, [pc, #364]	@ (80026cc <HAL_ADC_Init+0x2a0>)
 800255e:	f7ff fedb 	bl	8002318 <LL_ADC_IsEnabled>
 8002562:	4603      	mov	r3, r0
 8002564:	2b00      	cmp	r3, #0
 8002566:	bf0c      	ite	eq
 8002568:	2301      	moveq	r3, #1
 800256a:	2300      	movne	r3, #0
 800256c:	b2db      	uxtb	r3, r3
 800256e:	2b00      	cmp	r3, #0
 8002570:	d012      	beq.n	8002598 <HAL_ADC_Init+0x16c>
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	4a53      	ldr	r2, [pc, #332]	@ (80026c4 <HAL_ADC_Init+0x298>)
 8002578:	4293      	cmp	r3, r2
 800257a:	d004      	beq.n	8002586 <HAL_ADC_Init+0x15a>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	4a51      	ldr	r2, [pc, #324]	@ (80026c8 <HAL_ADC_Init+0x29c>)
 8002582:	4293      	cmp	r3, r2
 8002584:	d101      	bne.n	800258a <HAL_ADC_Init+0x15e>
 8002586:	4a52      	ldr	r2, [pc, #328]	@ (80026d0 <HAL_ADC_Init+0x2a4>)
 8002588:	e000      	b.n	800258c <HAL_ADC_Init+0x160>
 800258a:	4a52      	ldr	r2, [pc, #328]	@ (80026d4 <HAL_ADC_Init+0x2a8>)
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	685b      	ldr	r3, [r3, #4]
 8002590:	4619      	mov	r1, r3
 8002592:	4610      	mov	r0, r2
 8002594:	f7ff fce4 	bl	8001f60 <LL_ADC_SetCommonClock>
 8002598:	f7ff fcd6 	bl	8001f48 <HAL_GetREVID>
 800259c:	4603      	mov	r3, r0
 800259e:	f241 0203 	movw	r2, #4099	@ 0x1003
 80025a2:	4293      	cmp	r3, r2
 80025a4:	d914      	bls.n	80025d0 <HAL_ADC_Init+0x1a4>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	689b      	ldr	r3, [r3, #8]
 80025aa:	2b10      	cmp	r3, #16
 80025ac:	d110      	bne.n	80025d0 <HAL_ADC_Init+0x1a4>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	7d5b      	ldrb	r3, [r3, #21]
 80025b2:	035a      	lsls	r2, r3, #13
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025b8:	431a      	orrs	r2, r3
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	689b      	ldr	r3, [r3, #8]
 80025be:	431a      	orrs	r2, r3
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	7f1b      	ldrb	r3, [r3, #28]
 80025c4:	041b      	lsls	r3, r3, #16
 80025c6:	4313      	orrs	r3, r2
 80025c8:	f043 030c 	orr.w	r3, r3, #12
 80025cc:	61bb      	str	r3, [r7, #24]
 80025ce:	e00d      	b.n	80025ec <HAL_ADC_Init+0x1c0>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	7d5b      	ldrb	r3, [r3, #21]
 80025d4:	035a      	lsls	r2, r3, #13
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80025da:	431a      	orrs	r2, r3
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	689b      	ldr	r3, [r3, #8]
 80025e0:	431a      	orrs	r2, r3
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	7f1b      	ldrb	r3, [r3, #28]
 80025e6:	041b      	lsls	r3, r3, #16
 80025e8:	4313      	orrs	r3, r2
 80025ea:	61bb      	str	r3, [r7, #24]
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	7f1b      	ldrb	r3, [r3, #28]
 80025f0:	2b01      	cmp	r3, #1
 80025f2:	d106      	bne.n	8002602 <HAL_ADC_Init+0x1d6>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	6a1b      	ldr	r3, [r3, #32]
 80025f8:	3b01      	subs	r3, #1
 80025fa:	045b      	lsls	r3, r3, #17
 80025fc:	69ba      	ldr	r2, [r7, #24]
 80025fe:	4313      	orrs	r3, r2
 8002600:	61bb      	str	r3, [r7, #24]
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002606:	2b00      	cmp	r3, #0
 8002608:	d009      	beq.n	800261e <HAL_ADC_Init+0x1f2>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800260e:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002616:	4313      	orrs	r3, r2
 8002618:	69ba      	ldr	r2, [r7, #24]
 800261a:	4313      	orrs	r3, r2
 800261c:	61bb      	str	r3, [r7, #24]
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	68da      	ldr	r2, [r3, #12]
 8002624:	4b2c      	ldr	r3, [pc, #176]	@ (80026d8 <HAL_ADC_Init+0x2ac>)
 8002626:	4013      	ands	r3, r2
 8002628:	687a      	ldr	r2, [r7, #4]
 800262a:	6812      	ldr	r2, [r2, #0]
 800262c:	69b9      	ldr	r1, [r7, #24]
 800262e:	430b      	orrs	r3, r1
 8002630:	60d3      	str	r3, [r2, #12]
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	4618      	mov	r0, r3
 8002638:	f7ff febc 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 800263c:	6138      	str	r0, [r7, #16]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	4618      	mov	r0, r3
 8002644:	f7ff fede 	bl	8002404 <LL_ADC_INJ_IsConversionOngoing>
 8002648:	60f8      	str	r0, [r7, #12]
 800264a:	693b      	ldr	r3, [r7, #16]
 800264c:	2b00      	cmp	r3, #0
 800264e:	d15f      	bne.n	8002710 <HAL_ADC_Init+0x2e4>
 8002650:	68fb      	ldr	r3, [r7, #12]
 8002652:	2b00      	cmp	r3, #0
 8002654:	d15c      	bne.n	8002710 <HAL_ADC_Init+0x2e4>
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	7d1b      	ldrb	r3, [r3, #20]
 800265a:	039a      	lsls	r2, r3, #14
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002660:	4313      	orrs	r3, r2
 8002662:	61bb      	str	r3, [r7, #24]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	681b      	ldr	r3, [r3, #0]
 8002668:	68da      	ldr	r2, [r3, #12]
 800266a:	4b1c      	ldr	r3, [pc, #112]	@ (80026dc <HAL_ADC_Init+0x2b0>)
 800266c:	4013      	ands	r3, r2
 800266e:	687a      	ldr	r2, [r7, #4]
 8002670:	6812      	ldr	r2, [r2, #0]
 8002672:	69b9      	ldr	r1, [r7, #24]
 8002674:	430b      	orrs	r3, r1
 8002676:	60d3      	str	r3, [r2, #12]
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800267e:	2b01      	cmp	r3, #1
 8002680:	d130      	bne.n	80026e4 <HAL_ADC_Init+0x2b8>
 8002682:	687b      	ldr	r3, [r7, #4]
 8002684:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002686:	2b00      	cmp	r3, #0
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	691a      	ldr	r2, [r3, #16]
 800268e:	4b14      	ldr	r3, [pc, #80]	@ (80026e0 <HAL_ADC_Init+0x2b4>)
 8002690:	4013      	ands	r3, r2
 8002692:	687a      	ldr	r2, [r7, #4]
 8002694:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002696:	3a01      	subs	r2, #1
 8002698:	0411      	lsls	r1, r2, #16
 800269a:	687a      	ldr	r2, [r7, #4]
 800269c:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800269e:	4311      	orrs	r1, r2
 80026a0:	687a      	ldr	r2, [r7, #4]
 80026a2:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 80026a4:	4311      	orrs	r1, r2
 80026a6:	687a      	ldr	r2, [r7, #4]
 80026a8:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80026aa:	430a      	orrs	r2, r1
 80026ac:	431a      	orrs	r2, r3
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	f042 0201 	orr.w	r2, r2, #1
 80026b6:	611a      	str	r2, [r3, #16]
 80026b8:	e01c      	b.n	80026f4 <HAL_ADC_Init+0x2c8>
 80026ba:	bf00      	nop
 80026bc:	24000168 	.word	0x24000168
 80026c0:	053e2d63 	.word	0x053e2d63
 80026c4:	40022000 	.word	0x40022000
 80026c8:	40022100 	.word	0x40022100
 80026cc:	58026000 	.word	0x58026000
 80026d0:	40022300 	.word	0x40022300
 80026d4:	58026300 	.word	0x58026300
 80026d8:	fff0c003 	.word	0xfff0c003
 80026dc:	ffffbffc 	.word	0xffffbffc
 80026e0:	fc00f81e 	.word	0xfc00f81e
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	681b      	ldr	r3, [r3, #0]
 80026e8:	691a      	ldr	r2, [r3, #16]
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	f022 0201 	bic.w	r2, r2, #1
 80026f2:	611a      	str	r2, [r3, #16]
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	691b      	ldr	r3, [r3, #16]
 80026fa:	f023 4170 	bic.w	r1, r3, #4026531840	@ 0xf0000000
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	430a      	orrs	r2, r1
 8002708:	611a      	str	r2, [r3, #16]
 800270a:	6878      	ldr	r0, [r7, #4]
 800270c:	f000 fec6 	bl	800349c <ADC_ConfigureBoostMode>
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	68db      	ldr	r3, [r3, #12]
 8002714:	2b01      	cmp	r3, #1
 8002716:	d10c      	bne.n	8002732 <HAL_ADC_Init+0x306>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800271e:	f023 010f 	bic.w	r1, r3, #15
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	699b      	ldr	r3, [r3, #24]
 8002726:	1e5a      	subs	r2, r3, #1
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	430a      	orrs	r2, r1
 800272e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002730:	e007      	b.n	8002742 <HAL_ADC_Init+0x316>
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f022 020f 	bic.w	r2, r2, #15
 8002740:	631a      	str	r2, [r3, #48]	@ 0x30
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002746:	f023 0303 	bic.w	r3, r3, #3
 800274a:	f043 0201 	orr.w	r2, r3, #1
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	655a      	str	r2, [r3, #84]	@ 0x54
 8002752:	e007      	b.n	8002764 <HAL_ADC_Init+0x338>
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002758:	f043 0210 	orr.w	r2, r3, #16
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002760:	2301      	movs	r3, #1
 8002762:	77fb      	strb	r3, [r7, #31]
 8002764:	7ffb      	ldrb	r3, [r7, #31]
 8002766:	4618      	mov	r0, r3
 8002768:	3724      	adds	r7, #36	@ 0x24
 800276a:	46bd      	mov	sp, r7
 800276c:	bd90      	pop	{r4, r7, pc}
 800276e:	bf00      	nop

08002770 <HAL_ADC_Start>:
 8002770:	b580      	push	{r7, lr}
 8002772:	b086      	sub	sp, #24
 8002774:	af00      	add	r7, sp, #0
 8002776:	6078      	str	r0, [r7, #4]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	4a5c      	ldr	r2, [pc, #368]	@ (80028f0 <HAL_ADC_Start+0x180>)
 800277e:	4293      	cmp	r3, r2
 8002780:	d004      	beq.n	800278c <HAL_ADC_Start+0x1c>
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	4a5b      	ldr	r2, [pc, #364]	@ (80028f4 <HAL_ADC_Start+0x184>)
 8002788:	4293      	cmp	r3, r2
 800278a:	d101      	bne.n	8002790 <HAL_ADC_Start+0x20>
 800278c:	4b5a      	ldr	r3, [pc, #360]	@ (80028f8 <HAL_ADC_Start+0x188>)
 800278e:	e000      	b.n	8002792 <HAL_ADC_Start+0x22>
 8002790:	4b5a      	ldr	r3, [pc, #360]	@ (80028fc <HAL_ADC_Start+0x18c>)
 8002792:	4618      	mov	r0, r3
 8002794:	f7ff fd2e 	bl	80021f4 <LL_ADC_GetMultimode>
 8002798:	6138      	str	r0, [r7, #16]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	4618      	mov	r0, r3
 80027a0:	f7ff fe08 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 80027a4:	4603      	mov	r3, r0
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	f040 809a 	bne.w	80028e0 <HAL_ADC_Start+0x170>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80027b2:	2b01      	cmp	r3, #1
 80027b4:	d101      	bne.n	80027ba <HAL_ADC_Start+0x4a>
 80027b6:	2302      	movs	r3, #2
 80027b8:	e095      	b.n	80028e6 <HAL_ADC_Start+0x176>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	2201      	movs	r2, #1
 80027be:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80027c2:	6878      	ldr	r0, [r7, #4]
 80027c4:	f000 fd80 	bl	80032c8 <ADC_Enable>
 80027c8:	4603      	mov	r3, r0
 80027ca:	75fb      	strb	r3, [r7, #23]
 80027cc:	7dfb      	ldrb	r3, [r7, #23]
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	f040 8081 	bne.w	80028d6 <HAL_ADC_Start+0x166>
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80027d8:	4b49      	ldr	r3, [pc, #292]	@ (8002900 <HAL_ADC_Start+0x190>)
 80027da:	4013      	ands	r3, r2
 80027dc:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80027e0:	687b      	ldr	r3, [r7, #4]
 80027e2:	655a      	str	r2, [r3, #84]	@ 0x54
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	4a42      	ldr	r2, [pc, #264]	@ (80028f4 <HAL_ADC_Start+0x184>)
 80027ea:	4293      	cmp	r3, r2
 80027ec:	d002      	beq.n	80027f4 <HAL_ADC_Start+0x84>
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	e000      	b.n	80027f6 <HAL_ADC_Start+0x86>
 80027f4:	4b3e      	ldr	r3, [pc, #248]	@ (80028f0 <HAL_ADC_Start+0x180>)
 80027f6:	687a      	ldr	r2, [r7, #4]
 80027f8:	6812      	ldr	r2, [r2, #0]
 80027fa:	4293      	cmp	r3, r2
 80027fc:	d002      	beq.n	8002804 <HAL_ADC_Start+0x94>
 80027fe:	693b      	ldr	r3, [r7, #16]
 8002800:	2b00      	cmp	r3, #0
 8002802:	d105      	bne.n	8002810 <HAL_ADC_Start+0xa0>
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002808:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	655a      	str	r2, [r3, #84]	@ 0x54
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002814:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002818:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800281c:	d106      	bne.n	800282c <HAL_ADC_Start+0xbc>
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002822:	f023 0206 	bic.w	r2, r3, #6
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	659a      	str	r2, [r3, #88]	@ 0x58
 800282a:	e002      	b.n	8002832 <HAL_ADC_Start+0xc2>
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	2200      	movs	r2, #0
 8002830:	659a      	str	r2, [r3, #88]	@ 0x58
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	221c      	movs	r2, #28
 8002838:	601a      	str	r2, [r3, #0]
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	2200      	movs	r2, #0
 800283e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	4a2b      	ldr	r2, [pc, #172]	@ (80028f4 <HAL_ADC_Start+0x184>)
 8002848:	4293      	cmp	r3, r2
 800284a:	d002      	beq.n	8002852 <HAL_ADC_Start+0xe2>
 800284c:	687b      	ldr	r3, [r7, #4]
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	e000      	b.n	8002854 <HAL_ADC_Start+0xe4>
 8002852:	4b27      	ldr	r3, [pc, #156]	@ (80028f0 <HAL_ADC_Start+0x180>)
 8002854:	687a      	ldr	r2, [r7, #4]
 8002856:	6812      	ldr	r2, [r2, #0]
 8002858:	4293      	cmp	r3, r2
 800285a:	d008      	beq.n	800286e <HAL_ADC_Start+0xfe>
 800285c:	693b      	ldr	r3, [r7, #16]
 800285e:	2b00      	cmp	r3, #0
 8002860:	d005      	beq.n	800286e <HAL_ADC_Start+0xfe>
 8002862:	693b      	ldr	r3, [r7, #16]
 8002864:	2b05      	cmp	r3, #5
 8002866:	d002      	beq.n	800286e <HAL_ADC_Start+0xfe>
 8002868:	693b      	ldr	r3, [r7, #16]
 800286a:	2b09      	cmp	r3, #9
 800286c:	d114      	bne.n	8002898 <HAL_ADC_Start+0x128>
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	68db      	ldr	r3, [r3, #12]
 8002874:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002878:	2b00      	cmp	r3, #0
 800287a:	d007      	beq.n	800288c <HAL_ADC_Start+0x11c>
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002880:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002884:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	655a      	str	r2, [r3, #84]	@ 0x54
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	4618      	mov	r0, r3
 8002892:	f7ff fd67 	bl	8002364 <LL_ADC_REG_StartConversion>
 8002896:	e025      	b.n	80028e4 <HAL_ADC_Start+0x174>
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800289c:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	655a      	str	r2, [r3, #84]	@ 0x54
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	4a12      	ldr	r2, [pc, #72]	@ (80028f4 <HAL_ADC_Start+0x184>)
 80028aa:	4293      	cmp	r3, r2
 80028ac:	d002      	beq.n	80028b4 <HAL_ADC_Start+0x144>
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	e000      	b.n	80028b6 <HAL_ADC_Start+0x146>
 80028b4:	4b0e      	ldr	r3, [pc, #56]	@ (80028f0 <HAL_ADC_Start+0x180>)
 80028b6:	60fb      	str	r3, [r7, #12]
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	68db      	ldr	r3, [r3, #12]
 80028bc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d00f      	beq.n	80028e4 <HAL_ADC_Start+0x174>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80028c8:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80028cc:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	655a      	str	r2, [r3, #84]	@ 0x54
 80028d4:	e006      	b.n	80028e4 <HAL_ADC_Start+0x174>
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	2200      	movs	r2, #0
 80028da:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80028de:	e001      	b.n	80028e4 <HAL_ADC_Start+0x174>
 80028e0:	2302      	movs	r3, #2
 80028e2:	75fb      	strb	r3, [r7, #23]
 80028e4:	7dfb      	ldrb	r3, [r7, #23]
 80028e6:	4618      	mov	r0, r3
 80028e8:	3718      	adds	r7, #24
 80028ea:	46bd      	mov	sp, r7
 80028ec:	bd80      	pop	{r7, pc}
 80028ee:	bf00      	nop
 80028f0:	40022000 	.word	0x40022000
 80028f4:	40022100 	.word	0x40022100
 80028f8:	40022300 	.word	0x40022300
 80028fc:	58026300 	.word	0x58026300
 8002900:	fffff0fe 	.word	0xfffff0fe

08002904 <HAL_ADC_Stop>:
 8002904:	b580      	push	{r7, lr}
 8002906:	b084      	sub	sp, #16
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8002912:	2b01      	cmp	r3, #1
 8002914:	d101      	bne.n	800291a <HAL_ADC_Stop+0x16>
 8002916:	2302      	movs	r3, #2
 8002918:	e021      	b.n	800295e <HAL_ADC_Stop+0x5a>
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	2201      	movs	r2, #1
 800291e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002922:	2103      	movs	r1, #3
 8002924:	6878      	ldr	r0, [r7, #4]
 8002926:	f000 fc13 	bl	8003150 <ADC_ConversionStop>
 800292a:	4603      	mov	r3, r0
 800292c:	73fb      	strb	r3, [r7, #15]
 800292e:	7bfb      	ldrb	r3, [r7, #15]
 8002930:	2b00      	cmp	r3, #0
 8002932:	d10f      	bne.n	8002954 <HAL_ADC_Stop+0x50>
 8002934:	6878      	ldr	r0, [r7, #4]
 8002936:	f000 fd51 	bl	80033dc <ADC_Disable>
 800293a:	4603      	mov	r3, r0
 800293c:	73fb      	strb	r3, [r7, #15]
 800293e:	7bfb      	ldrb	r3, [r7, #15]
 8002940:	2b00      	cmp	r3, #0
 8002942:	d107      	bne.n	8002954 <HAL_ADC_Stop+0x50>
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8002948:	4b07      	ldr	r3, [pc, #28]	@ (8002968 <HAL_ADC_Stop+0x64>)
 800294a:	4013      	ands	r3, r2
 800294c:	f043 0201 	orr.w	r2, r3, #1
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	655a      	str	r2, [r3, #84]	@ 0x54
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2200      	movs	r2, #0
 8002958:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800295c:	7bfb      	ldrb	r3, [r7, #15]
 800295e:	4618      	mov	r0, r3
 8002960:	3710      	adds	r7, #16
 8002962:	46bd      	mov	sp, r7
 8002964:	bd80      	pop	{r7, pc}
 8002966:	bf00      	nop
 8002968:	ffffeefe 	.word	0xffffeefe

0800296c <HAL_ADC_PollForConversion>:
 800296c:	b580      	push	{r7, lr}
 800296e:	b088      	sub	sp, #32
 8002970:	af00      	add	r7, sp, #0
 8002972:	6078      	str	r0, [r7, #4]
 8002974:	6039      	str	r1, [r7, #0]
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	4a72      	ldr	r2, [pc, #456]	@ (8002b44 <HAL_ADC_PollForConversion+0x1d8>)
 800297c:	4293      	cmp	r3, r2
 800297e:	d004      	beq.n	800298a <HAL_ADC_PollForConversion+0x1e>
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a70      	ldr	r2, [pc, #448]	@ (8002b48 <HAL_ADC_PollForConversion+0x1dc>)
 8002986:	4293      	cmp	r3, r2
 8002988:	d101      	bne.n	800298e <HAL_ADC_PollForConversion+0x22>
 800298a:	4b70      	ldr	r3, [pc, #448]	@ (8002b4c <HAL_ADC_PollForConversion+0x1e0>)
 800298c:	e000      	b.n	8002990 <HAL_ADC_PollForConversion+0x24>
 800298e:	4b70      	ldr	r3, [pc, #448]	@ (8002b50 <HAL_ADC_PollForConversion+0x1e4>)
 8002990:	4618      	mov	r0, r3
 8002992:	f7ff fc2f 	bl	80021f4 <LL_ADC_GetMultimode>
 8002996:	6178      	str	r0, [r7, #20]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	691b      	ldr	r3, [r3, #16]
 800299c:	2b08      	cmp	r3, #8
 800299e:	d102      	bne.n	80029a6 <HAL_ADC_PollForConversion+0x3a>
 80029a0:	2308      	movs	r3, #8
 80029a2:	61fb      	str	r3, [r7, #28]
 80029a4:	e037      	b.n	8002a16 <HAL_ADC_PollForConversion+0xaa>
 80029a6:	697b      	ldr	r3, [r7, #20]
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d005      	beq.n	80029b8 <HAL_ADC_PollForConversion+0x4c>
 80029ac:	697b      	ldr	r3, [r7, #20]
 80029ae:	2b05      	cmp	r3, #5
 80029b0:	d002      	beq.n	80029b8 <HAL_ADC_PollForConversion+0x4c>
 80029b2:	697b      	ldr	r3, [r7, #20]
 80029b4:	2b09      	cmp	r3, #9
 80029b6:	d111      	bne.n	80029dc <HAL_ADC_PollForConversion+0x70>
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	68db      	ldr	r3, [r3, #12]
 80029be:	f003 0301 	and.w	r3, r3, #1
 80029c2:	2b00      	cmp	r3, #0
 80029c4:	d007      	beq.n	80029d6 <HAL_ADC_PollForConversion+0x6a>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80029ca:	f043 0220 	orr.w	r2, r3, #32
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	655a      	str	r2, [r3, #84]	@ 0x54
 80029d2:	2301      	movs	r3, #1
 80029d4:	e0b1      	b.n	8002b3a <HAL_ADC_PollForConversion+0x1ce>
 80029d6:	2304      	movs	r3, #4
 80029d8:	61fb      	str	r3, [r7, #28]
 80029da:	e01c      	b.n	8002a16 <HAL_ADC_PollForConversion+0xaa>
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a58      	ldr	r2, [pc, #352]	@ (8002b44 <HAL_ADC_PollForConversion+0x1d8>)
 80029e2:	4293      	cmp	r3, r2
 80029e4:	d004      	beq.n	80029f0 <HAL_ADC_PollForConversion+0x84>
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4a57      	ldr	r2, [pc, #348]	@ (8002b48 <HAL_ADC_PollForConversion+0x1dc>)
 80029ec:	4293      	cmp	r3, r2
 80029ee:	d101      	bne.n	80029f4 <HAL_ADC_PollForConversion+0x88>
 80029f0:	4b56      	ldr	r3, [pc, #344]	@ (8002b4c <HAL_ADC_PollForConversion+0x1e0>)
 80029f2:	e000      	b.n	80029f6 <HAL_ADC_PollForConversion+0x8a>
 80029f4:	4b56      	ldr	r3, [pc, #344]	@ (8002b50 <HAL_ADC_PollForConversion+0x1e4>)
 80029f6:	4618      	mov	r0, r3
 80029f8:	f7ff fc0a 	bl	8002210 <LL_ADC_GetMultiDMATransfer>
 80029fc:	4603      	mov	r3, r0
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d007      	beq.n	8002a12 <HAL_ADC_PollForConversion+0xa6>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a06:	f043 0220 	orr.w	r2, r3, #32
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a0e:	2301      	movs	r3, #1
 8002a10:	e093      	b.n	8002b3a <HAL_ADC_PollForConversion+0x1ce>
 8002a12:	2304      	movs	r3, #4
 8002a14:	61fb      	str	r3, [r7, #28]
 8002a16:	f7ff fa8b 	bl	8001f30 <HAL_GetTick>
 8002a1a:	6138      	str	r0, [r7, #16]
 8002a1c:	e021      	b.n	8002a62 <HAL_ADC_PollForConversion+0xf6>
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a24:	d01d      	beq.n	8002a62 <HAL_ADC_PollForConversion+0xf6>
 8002a26:	f7ff fa83 	bl	8001f30 <HAL_GetTick>
 8002a2a:	4602      	mov	r2, r0
 8002a2c:	693b      	ldr	r3, [r7, #16]
 8002a2e:	1ad3      	subs	r3, r2, r3
 8002a30:	683a      	ldr	r2, [r7, #0]
 8002a32:	429a      	cmp	r2, r3
 8002a34:	d302      	bcc.n	8002a3c <HAL_ADC_PollForConversion+0xd0>
 8002a36:	683b      	ldr	r3, [r7, #0]
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d112      	bne.n	8002a62 <HAL_ADC_PollForConversion+0xf6>
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	681a      	ldr	r2, [r3, #0]
 8002a42:	69fb      	ldr	r3, [r7, #28]
 8002a44:	4013      	ands	r3, r2
 8002a46:	2b00      	cmp	r3, #0
 8002a48:	d10b      	bne.n	8002a62 <HAL_ADC_PollForConversion+0xf6>
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a4e:	f043 0204 	orr.w	r2, r3, #4
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	2200      	movs	r2, #0
 8002a5a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002a5e:	2303      	movs	r3, #3
 8002a60:	e06b      	b.n	8002b3a <HAL_ADC_PollForConversion+0x1ce>
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	681a      	ldr	r2, [r3, #0]
 8002a68:	69fb      	ldr	r3, [r7, #28]
 8002a6a:	4013      	ands	r3, r2
 8002a6c:	2b00      	cmp	r3, #0
 8002a6e:	d0d6      	beq.n	8002a1e <HAL_ADC_PollForConversion+0xb2>
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a74:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	4618      	mov	r0, r3
 8002a82:	f7ff fb28 	bl	80020d6 <LL_ADC_REG_IsTriggerSourceSWStart>
 8002a86:	4603      	mov	r3, r0
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d01c      	beq.n	8002ac6 <HAL_ADC_PollForConversion+0x15a>
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	7d5b      	ldrb	r3, [r3, #21]
 8002a90:	2b00      	cmp	r3, #0
 8002a92:	d118      	bne.n	8002ac6 <HAL_ADC_PollForConversion+0x15a>
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	f003 0308 	and.w	r3, r3, #8
 8002a9e:	2b08      	cmp	r3, #8
 8002aa0:	d111      	bne.n	8002ac6 <HAL_ADC_PollForConversion+0x15a>
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002aa6:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	655a      	str	r2, [r3, #84]	@ 0x54
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002ab2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d105      	bne.n	8002ac6 <HAL_ADC_PollForConversion+0x15a>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002abe:	f043 0201 	orr.w	r2, r3, #1
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	655a      	str	r2, [r3, #84]	@ 0x54
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	4a1f      	ldr	r2, [pc, #124]	@ (8002b48 <HAL_ADC_PollForConversion+0x1dc>)
 8002acc:	4293      	cmp	r3, r2
 8002ace:	d002      	beq.n	8002ad6 <HAL_ADC_PollForConversion+0x16a>
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	e000      	b.n	8002ad8 <HAL_ADC_PollForConversion+0x16c>
 8002ad6:	4b1b      	ldr	r3, [pc, #108]	@ (8002b44 <HAL_ADC_PollForConversion+0x1d8>)
 8002ad8:	687a      	ldr	r2, [r7, #4]
 8002ada:	6812      	ldr	r2, [r2, #0]
 8002adc:	4293      	cmp	r3, r2
 8002ade:	d008      	beq.n	8002af2 <HAL_ADC_PollForConversion+0x186>
 8002ae0:	697b      	ldr	r3, [r7, #20]
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d005      	beq.n	8002af2 <HAL_ADC_PollForConversion+0x186>
 8002ae6:	697b      	ldr	r3, [r7, #20]
 8002ae8:	2b05      	cmp	r3, #5
 8002aea:	d002      	beq.n	8002af2 <HAL_ADC_PollForConversion+0x186>
 8002aec:	697b      	ldr	r3, [r7, #20]
 8002aee:	2b09      	cmp	r3, #9
 8002af0:	d104      	bne.n	8002afc <HAL_ADC_PollForConversion+0x190>
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	68db      	ldr	r3, [r3, #12]
 8002af8:	61bb      	str	r3, [r7, #24]
 8002afa:	e00c      	b.n	8002b16 <HAL_ADC_PollForConversion+0x1aa>
 8002afc:	687b      	ldr	r3, [r7, #4]
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	4a11      	ldr	r2, [pc, #68]	@ (8002b48 <HAL_ADC_PollForConversion+0x1dc>)
 8002b02:	4293      	cmp	r3, r2
 8002b04:	d002      	beq.n	8002b0c <HAL_ADC_PollForConversion+0x1a0>
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	e000      	b.n	8002b0e <HAL_ADC_PollForConversion+0x1a2>
 8002b0c:	4b0d      	ldr	r3, [pc, #52]	@ (8002b44 <HAL_ADC_PollForConversion+0x1d8>)
 8002b0e:	60fb      	str	r3, [r7, #12]
 8002b10:	68fb      	ldr	r3, [r7, #12]
 8002b12:	68db      	ldr	r3, [r3, #12]
 8002b14:	61bb      	str	r3, [r7, #24]
 8002b16:	69fb      	ldr	r3, [r7, #28]
 8002b18:	2b08      	cmp	r3, #8
 8002b1a:	d104      	bne.n	8002b26 <HAL_ADC_PollForConversion+0x1ba>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	2208      	movs	r2, #8
 8002b22:	601a      	str	r2, [r3, #0]
 8002b24:	e008      	b.n	8002b38 <HAL_ADC_PollForConversion+0x1cc>
 8002b26:	69bb      	ldr	r3, [r7, #24]
 8002b28:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d103      	bne.n	8002b38 <HAL_ADC_PollForConversion+0x1cc>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	220c      	movs	r2, #12
 8002b36:	601a      	str	r2, [r3, #0]
 8002b38:	2300      	movs	r3, #0
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	3720      	adds	r7, #32
 8002b3e:	46bd      	mov	sp, r7
 8002b40:	bd80      	pop	{r7, pc}
 8002b42:	bf00      	nop
 8002b44:	40022000 	.word	0x40022000
 8002b48:	40022100 	.word	0x40022100
 8002b4c:	40022300 	.word	0x40022300
 8002b50:	58026300 	.word	0x58026300

08002b54 <HAL_ADC_GetValue>:
 8002b54:	b480      	push	{r7}
 8002b56:	b083      	sub	sp, #12
 8002b58:	af00      	add	r7, sp, #0
 8002b5a:	6078      	str	r0, [r7, #4]
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b62:	4618      	mov	r0, r3
 8002b64:	370c      	adds	r7, #12
 8002b66:	46bd      	mov	sp, r7
 8002b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b6c:	4770      	bx	lr
	...

08002b70 <HAL_ADC_ConfigChannel>:
 8002b70:	b590      	push	{r4, r7, lr}
 8002b72:	b08d      	sub	sp, #52	@ 0x34
 8002b74:	af00      	add	r7, sp, #0
 8002b76:	6078      	str	r0, [r7, #4]
 8002b78:	6039      	str	r1, [r7, #0]
 8002b7a:	2300      	movs	r3, #0
 8002b7c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8002b80:	2300      	movs	r3, #0
 8002b82:	60fb      	str	r3, [r7, #12]
 8002b84:	683b      	ldr	r3, [r7, #0]
 8002b86:	68db      	ldr	r3, [r3, #12]
 8002b88:	4a65      	ldr	r2, [pc, #404]	@ (8002d20 <HAL_ADC_ConfigChannel+0x1b0>)
 8002b8a:	4293      	cmp	r3, r2
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8002b92:	2b01      	cmp	r3, #1
 8002b94:	d101      	bne.n	8002b9a <HAL_ADC_ConfigChannel+0x2a>
 8002b96:	2302      	movs	r3, #2
 8002b98:	e2c7      	b.n	800312a <HAL_ADC_ConfigChannel+0x5ba>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	2201      	movs	r2, #1
 8002b9e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	4618      	mov	r0, r3
 8002ba8:	f7ff fc04 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 8002bac:	4603      	mov	r3, r0
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	f040 82ac 	bne.w	800310c <HAL_ADC_ConfigChannel+0x59c>
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	db2c      	blt.n	8002c16 <HAL_ADC_ConfigChannel+0xa6>
 8002bbc:	683b      	ldr	r3, [r7, #0]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d108      	bne.n	8002bda <HAL_ADC_ConfigChannel+0x6a>
 8002bc8:	683b      	ldr	r3, [r7, #0]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	0e9b      	lsrs	r3, r3, #26
 8002bce:	f003 031f 	and.w	r3, r3, #31
 8002bd2:	2201      	movs	r2, #1
 8002bd4:	fa02 f303 	lsl.w	r3, r2, r3
 8002bd8:	e016      	b.n	8002c08 <HAL_ADC_ConfigChannel+0x98>
 8002bda:	683b      	ldr	r3, [r7, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	617b      	str	r3, [r7, #20]
 8002be0:	697b      	ldr	r3, [r7, #20]
 8002be2:	fa93 f3a3 	rbit	r3, r3
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	61bb      	str	r3, [r7, #24]
 8002bec:	69bb      	ldr	r3, [r7, #24]
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d101      	bne.n	8002bf6 <HAL_ADC_ConfigChannel+0x86>
 8002bf2:	2320      	movs	r3, #32
 8002bf4:	e003      	b.n	8002bfe <HAL_ADC_ConfigChannel+0x8e>
 8002bf6:	69bb      	ldr	r3, [r7, #24]
 8002bf8:	fab3 f383 	clz	r3, r3
 8002bfc:	b2db      	uxtb	r3, r3
 8002bfe:	f003 031f 	and.w	r3, r3, #31
 8002c02:	2201      	movs	r2, #1
 8002c04:	fa02 f303 	lsl.w	r3, r2, r3
 8002c08:	687a      	ldr	r2, [r7, #4]
 8002c0a:	6812      	ldr	r2, [r2, #0]
 8002c0c:	69d1      	ldr	r1, [r2, #28]
 8002c0e:	687a      	ldr	r2, [r7, #4]
 8002c10:	6812      	ldr	r2, [r2, #0]
 8002c12:	430b      	orrs	r3, r1
 8002c14:	61d3      	str	r3, [r2, #28]
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	6818      	ldr	r0, [r3, #0]
 8002c1a:	683b      	ldr	r3, [r7, #0]
 8002c1c:	6859      	ldr	r1, [r3, #4]
 8002c1e:	683b      	ldr	r3, [r7, #0]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	461a      	mov	r2, r3
 8002c24:	f7ff fa6a 	bl	80020fc <LL_ADC_REG_SetSequencerRanks>
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	f7ff fbc1 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 8002c32:	62b8      	str	r0, [r7, #40]	@ 0x28
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	4618      	mov	r0, r3
 8002c3a:	f7ff fbe3 	bl	8002404 <LL_ADC_INJ_IsConversionOngoing>
 8002c3e:	6278      	str	r0, [r7, #36]	@ 0x24
 8002c40:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	f040 80b8 	bne.w	8002db8 <HAL_ADC_ConfigChannel+0x248>
 8002c48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	f040 80b4 	bne.w	8002db8 <HAL_ADC_ConfigChannel+0x248>
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	6818      	ldr	r0, [r3, #0]
 8002c54:	683b      	ldr	r3, [r7, #0]
 8002c56:	6819      	ldr	r1, [r3, #0]
 8002c58:	683b      	ldr	r3, [r7, #0]
 8002c5a:	689b      	ldr	r3, [r3, #8]
 8002c5c:	461a      	mov	r2, r3
 8002c5e:	f7ff fa79 	bl	8002154 <LL_ADC_SetChannelSamplingTime>
 8002c62:	4b30      	ldr	r3, [pc, #192]	@ (8002d24 <HAL_ADC_ConfigChannel+0x1b4>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8002c6a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8002c6e:	d10b      	bne.n	8002c88 <HAL_ADC_ConfigChannel+0x118>
 8002c70:	683b      	ldr	r3, [r7, #0]
 8002c72:	695a      	ldr	r2, [r3, #20]
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	68db      	ldr	r3, [r3, #12]
 8002c7a:	089b      	lsrs	r3, r3, #2
 8002c7c:	f003 0307 	and.w	r3, r3, #7
 8002c80:	005b      	lsls	r3, r3, #1
 8002c82:	fa02 f303 	lsl.w	r3, r2, r3
 8002c86:	e01d      	b.n	8002cc4 <HAL_ADC_ConfigChannel+0x154>
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	68db      	ldr	r3, [r3, #12]
 8002c8e:	f003 0310 	and.w	r3, r3, #16
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d10b      	bne.n	8002cae <HAL_ADC_ConfigChannel+0x13e>
 8002c96:	683b      	ldr	r3, [r7, #0]
 8002c98:	695a      	ldr	r2, [r3, #20]
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	68db      	ldr	r3, [r3, #12]
 8002ca0:	089b      	lsrs	r3, r3, #2
 8002ca2:	f003 0307 	and.w	r3, r3, #7
 8002ca6:	005b      	lsls	r3, r3, #1
 8002ca8:	fa02 f303 	lsl.w	r3, r2, r3
 8002cac:	e00a      	b.n	8002cc4 <HAL_ADC_ConfigChannel+0x154>
 8002cae:	683b      	ldr	r3, [r7, #0]
 8002cb0:	695a      	ldr	r2, [r3, #20]
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	68db      	ldr	r3, [r3, #12]
 8002cb8:	089b      	lsrs	r3, r3, #2
 8002cba:	f003 0304 	and.w	r3, r3, #4
 8002cbe:	005b      	lsls	r3, r3, #1
 8002cc0:	fa02 f303 	lsl.w	r3, r2, r3
 8002cc4:	623b      	str	r3, [r7, #32]
 8002cc6:	683b      	ldr	r3, [r7, #0]
 8002cc8:	691b      	ldr	r3, [r3, #16]
 8002cca:	2b04      	cmp	r3, #4
 8002ccc:	d02c      	beq.n	8002d28 <HAL_ADC_ConfigChannel+0x1b8>
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	6818      	ldr	r0, [r3, #0]
 8002cd2:	683b      	ldr	r3, [r7, #0]
 8002cd4:	6919      	ldr	r1, [r3, #16]
 8002cd6:	683b      	ldr	r3, [r7, #0]
 8002cd8:	681a      	ldr	r2, [r3, #0]
 8002cda:	6a3b      	ldr	r3, [r7, #32]
 8002cdc:	f7ff f9a7 	bl	800202e <LL_ADC_SetOffset>
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	6818      	ldr	r0, [r3, #0]
 8002ce4:	683b      	ldr	r3, [r7, #0]
 8002ce6:	6919      	ldr	r1, [r3, #16]
 8002ce8:	683b      	ldr	r3, [r7, #0]
 8002cea:	7e5b      	ldrb	r3, [r3, #25]
 8002cec:	2b01      	cmp	r3, #1
 8002cee:	d102      	bne.n	8002cf6 <HAL_ADC_ConfigChannel+0x186>
 8002cf0:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8002cf4:	e000      	b.n	8002cf8 <HAL_ADC_ConfigChannel+0x188>
 8002cf6:	2300      	movs	r3, #0
 8002cf8:	461a      	mov	r2, r3
 8002cfa:	f7ff f9d1 	bl	80020a0 <LL_ADC_SetOffsetSignedSaturation>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	6818      	ldr	r0, [r3, #0]
 8002d02:	683b      	ldr	r3, [r7, #0]
 8002d04:	6919      	ldr	r1, [r3, #16]
 8002d06:	683b      	ldr	r3, [r7, #0]
 8002d08:	7e1b      	ldrb	r3, [r3, #24]
 8002d0a:	2b01      	cmp	r3, #1
 8002d0c:	d102      	bne.n	8002d14 <HAL_ADC_ConfigChannel+0x1a4>
 8002d0e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8002d12:	e000      	b.n	8002d16 <HAL_ADC_ConfigChannel+0x1a6>
 8002d14:	2300      	movs	r3, #0
 8002d16:	461a      	mov	r2, r3
 8002d18:	f7ff f9a9 	bl	800206e <LL_ADC_SetDataRightShift>
 8002d1c:	e04c      	b.n	8002db8 <HAL_ADC_ConfigChannel+0x248>
 8002d1e:	bf00      	nop
 8002d20:	47ff0000 	.word	0x47ff0000
 8002d24:	5c001000 	.word	0x5c001000
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002d2e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002d32:	683b      	ldr	r3, [r7, #0]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	069b      	lsls	r3, r3, #26
 8002d38:	429a      	cmp	r2, r3
 8002d3a:	d107      	bne.n	8002d4c <HAL_ADC_ConfigChannel+0x1dc>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8002d4a:	661a      	str	r2, [r3, #96]	@ 0x60
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8002d52:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002d56:	683b      	ldr	r3, [r7, #0]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	069b      	lsls	r3, r3, #26
 8002d5c:	429a      	cmp	r2, r3
 8002d5e:	d107      	bne.n	8002d70 <HAL_ADC_ConfigChannel+0x200>
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	681b      	ldr	r3, [r3, #0]
 8002d6a:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8002d6e:	665a      	str	r2, [r3, #100]	@ 0x64
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8002d76:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002d7a:	683b      	ldr	r3, [r7, #0]
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	069b      	lsls	r3, r3, #26
 8002d80:	429a      	cmp	r2, r3
 8002d82:	d107      	bne.n	8002d94 <HAL_ADC_ConfigChannel+0x224>
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8002d92:	669a      	str	r2, [r3, #104]	@ 0x68
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8002d9a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002d9e:	683b      	ldr	r3, [r7, #0]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	069b      	lsls	r3, r3, #26
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d107      	bne.n	8002db8 <HAL_ADC_ConfigChannel+0x248>
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8002db6:	66da      	str	r2, [r3, #108]	@ 0x6c
 8002db8:	687b      	ldr	r3, [r7, #4]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	f7ff faab 	bl	8002318 <LL_ADC_IsEnabled>
 8002dc2:	4603      	mov	r3, r0
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	f040 81aa 	bne.w	800311e <HAL_ADC_ConfigChannel+0x5ae>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	6818      	ldr	r0, [r3, #0]
 8002dce:	683b      	ldr	r3, [r7, #0]
 8002dd0:	6819      	ldr	r1, [r3, #0]
 8002dd2:	683b      	ldr	r3, [r7, #0]
 8002dd4:	68db      	ldr	r3, [r3, #12]
 8002dd6:	461a      	mov	r2, r3
 8002dd8:	f7ff f9e8 	bl	80021ac <LL_ADC_SetChannelSingleDiff>
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	68db      	ldr	r3, [r3, #12]
 8002de0:	4a87      	ldr	r2, [pc, #540]	@ (8003000 <HAL_ADC_ConfigChannel+0x490>)
 8002de2:	4293      	cmp	r3, r2
 8002de4:	f040 809a 	bne.w	8002f1c <HAL_ADC_ConfigChannel+0x3ac>
 8002de8:	687b      	ldr	r3, [r7, #4]
 8002dea:	681a      	ldr	r2, [r3, #0]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	4984      	ldr	r1, [pc, #528]	@ (8003004 <HAL_ADC_ConfigChannel+0x494>)
 8002df2:	428b      	cmp	r3, r1
 8002df4:	d147      	bne.n	8002e86 <HAL_ADC_ConfigChannel+0x316>
 8002df6:	683b      	ldr	r3, [r7, #0]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	4983      	ldr	r1, [pc, #524]	@ (8003008 <HAL_ADC_ConfigChannel+0x498>)
 8002dfc:	428b      	cmp	r3, r1
 8002dfe:	d040      	beq.n	8002e82 <HAL_ADC_ConfigChannel+0x312>
 8002e00:	683b      	ldr	r3, [r7, #0]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	4981      	ldr	r1, [pc, #516]	@ (800300c <HAL_ADC_ConfigChannel+0x49c>)
 8002e06:	428b      	cmp	r3, r1
 8002e08:	d039      	beq.n	8002e7e <HAL_ADC_ConfigChannel+0x30e>
 8002e0a:	683b      	ldr	r3, [r7, #0]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4980      	ldr	r1, [pc, #512]	@ (8003010 <HAL_ADC_ConfigChannel+0x4a0>)
 8002e10:	428b      	cmp	r3, r1
 8002e12:	d032      	beq.n	8002e7a <HAL_ADC_ConfigChannel+0x30a>
 8002e14:	683b      	ldr	r3, [r7, #0]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	497e      	ldr	r1, [pc, #504]	@ (8003014 <HAL_ADC_ConfigChannel+0x4a4>)
 8002e1a:	428b      	cmp	r3, r1
 8002e1c:	d02b      	beq.n	8002e76 <HAL_ADC_ConfigChannel+0x306>
 8002e1e:	683b      	ldr	r3, [r7, #0]
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	497d      	ldr	r1, [pc, #500]	@ (8003018 <HAL_ADC_ConfigChannel+0x4a8>)
 8002e24:	428b      	cmp	r3, r1
 8002e26:	d024      	beq.n	8002e72 <HAL_ADC_ConfigChannel+0x302>
 8002e28:	683b      	ldr	r3, [r7, #0]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	497b      	ldr	r1, [pc, #492]	@ (800301c <HAL_ADC_ConfigChannel+0x4ac>)
 8002e2e:	428b      	cmp	r3, r1
 8002e30:	d01d      	beq.n	8002e6e <HAL_ADC_ConfigChannel+0x2fe>
 8002e32:	683b      	ldr	r3, [r7, #0]
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	497a      	ldr	r1, [pc, #488]	@ (8003020 <HAL_ADC_ConfigChannel+0x4b0>)
 8002e38:	428b      	cmp	r3, r1
 8002e3a:	d016      	beq.n	8002e6a <HAL_ADC_ConfigChannel+0x2fa>
 8002e3c:	683b      	ldr	r3, [r7, #0]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	4978      	ldr	r1, [pc, #480]	@ (8003024 <HAL_ADC_ConfigChannel+0x4b4>)
 8002e42:	428b      	cmp	r3, r1
 8002e44:	d00f      	beq.n	8002e66 <HAL_ADC_ConfigChannel+0x2f6>
 8002e46:	683b      	ldr	r3, [r7, #0]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	4977      	ldr	r1, [pc, #476]	@ (8003028 <HAL_ADC_ConfigChannel+0x4b8>)
 8002e4c:	428b      	cmp	r3, r1
 8002e4e:	d008      	beq.n	8002e62 <HAL_ADC_ConfigChannel+0x2f2>
 8002e50:	683b      	ldr	r3, [r7, #0]
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	4975      	ldr	r1, [pc, #468]	@ (800302c <HAL_ADC_ConfigChannel+0x4bc>)
 8002e56:	428b      	cmp	r3, r1
 8002e58:	d101      	bne.n	8002e5e <HAL_ADC_ConfigChannel+0x2ee>
 8002e5a:	4b75      	ldr	r3, [pc, #468]	@ (8003030 <HAL_ADC_ConfigChannel+0x4c0>)
 8002e5c:	e05a      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e5e:	2300      	movs	r3, #0
 8002e60:	e058      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e62:	4b74      	ldr	r3, [pc, #464]	@ (8003034 <HAL_ADC_ConfigChannel+0x4c4>)
 8002e64:	e056      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e66:	4b74      	ldr	r3, [pc, #464]	@ (8003038 <HAL_ADC_ConfigChannel+0x4c8>)
 8002e68:	e054      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e6a:	4b6e      	ldr	r3, [pc, #440]	@ (8003024 <HAL_ADC_ConfigChannel+0x4b4>)
 8002e6c:	e052      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e6e:	4b6c      	ldr	r3, [pc, #432]	@ (8003020 <HAL_ADC_ConfigChannel+0x4b0>)
 8002e70:	e050      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e72:	4b72      	ldr	r3, [pc, #456]	@ (800303c <HAL_ADC_ConfigChannel+0x4cc>)
 8002e74:	e04e      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e76:	4b72      	ldr	r3, [pc, #456]	@ (8003040 <HAL_ADC_ConfigChannel+0x4d0>)
 8002e78:	e04c      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e7a:	4b72      	ldr	r3, [pc, #456]	@ (8003044 <HAL_ADC_ConfigChannel+0x4d4>)
 8002e7c:	e04a      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e7e:	4b72      	ldr	r3, [pc, #456]	@ (8003048 <HAL_ADC_ConfigChannel+0x4d8>)
 8002e80:	e048      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e82:	2301      	movs	r3, #1
 8002e84:	e046      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	4970      	ldr	r1, [pc, #448]	@ (800304c <HAL_ADC_ConfigChannel+0x4dc>)
 8002e8c:	428b      	cmp	r3, r1
 8002e8e:	d140      	bne.n	8002f12 <HAL_ADC_ConfigChannel+0x3a2>
 8002e90:	683b      	ldr	r3, [r7, #0]
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	495c      	ldr	r1, [pc, #368]	@ (8003008 <HAL_ADC_ConfigChannel+0x498>)
 8002e96:	428b      	cmp	r3, r1
 8002e98:	d039      	beq.n	8002f0e <HAL_ADC_ConfigChannel+0x39e>
 8002e9a:	683b      	ldr	r3, [r7, #0]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	495b      	ldr	r1, [pc, #364]	@ (800300c <HAL_ADC_ConfigChannel+0x49c>)
 8002ea0:	428b      	cmp	r3, r1
 8002ea2:	d032      	beq.n	8002f0a <HAL_ADC_ConfigChannel+0x39a>
 8002ea4:	683b      	ldr	r3, [r7, #0]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	4959      	ldr	r1, [pc, #356]	@ (8003010 <HAL_ADC_ConfigChannel+0x4a0>)
 8002eaa:	428b      	cmp	r3, r1
 8002eac:	d02b      	beq.n	8002f06 <HAL_ADC_ConfigChannel+0x396>
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	4958      	ldr	r1, [pc, #352]	@ (8003014 <HAL_ADC_ConfigChannel+0x4a4>)
 8002eb4:	428b      	cmp	r3, r1
 8002eb6:	d024      	beq.n	8002f02 <HAL_ADC_ConfigChannel+0x392>
 8002eb8:	683b      	ldr	r3, [r7, #0]
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	4956      	ldr	r1, [pc, #344]	@ (8003018 <HAL_ADC_ConfigChannel+0x4a8>)
 8002ebe:	428b      	cmp	r3, r1
 8002ec0:	d01d      	beq.n	8002efe <HAL_ADC_ConfigChannel+0x38e>
 8002ec2:	683b      	ldr	r3, [r7, #0]
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	4955      	ldr	r1, [pc, #340]	@ (800301c <HAL_ADC_ConfigChannel+0x4ac>)
 8002ec8:	428b      	cmp	r3, r1
 8002eca:	d016      	beq.n	8002efa <HAL_ADC_ConfigChannel+0x38a>
 8002ecc:	683b      	ldr	r3, [r7, #0]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	4953      	ldr	r1, [pc, #332]	@ (8003020 <HAL_ADC_ConfigChannel+0x4b0>)
 8002ed2:	428b      	cmp	r3, r1
 8002ed4:	d00f      	beq.n	8002ef6 <HAL_ADC_ConfigChannel+0x386>
 8002ed6:	683b      	ldr	r3, [r7, #0]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	4952      	ldr	r1, [pc, #328]	@ (8003024 <HAL_ADC_ConfigChannel+0x4b4>)
 8002edc:	428b      	cmp	r3, r1
 8002ede:	d008      	beq.n	8002ef2 <HAL_ADC_ConfigChannel+0x382>
 8002ee0:	683b      	ldr	r3, [r7, #0]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4951      	ldr	r1, [pc, #324]	@ (800302c <HAL_ADC_ConfigChannel+0x4bc>)
 8002ee6:	428b      	cmp	r3, r1
 8002ee8:	d101      	bne.n	8002eee <HAL_ADC_ConfigChannel+0x37e>
 8002eea:	4b51      	ldr	r3, [pc, #324]	@ (8003030 <HAL_ADC_ConfigChannel+0x4c0>)
 8002eec:	e012      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002eee:	2300      	movs	r3, #0
 8002ef0:	e010      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002ef2:	4b51      	ldr	r3, [pc, #324]	@ (8003038 <HAL_ADC_ConfigChannel+0x4c8>)
 8002ef4:	e00e      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002ef6:	4b4b      	ldr	r3, [pc, #300]	@ (8003024 <HAL_ADC_ConfigChannel+0x4b4>)
 8002ef8:	e00c      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002efa:	4b49      	ldr	r3, [pc, #292]	@ (8003020 <HAL_ADC_ConfigChannel+0x4b0>)
 8002efc:	e00a      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002efe:	4b4f      	ldr	r3, [pc, #316]	@ (800303c <HAL_ADC_ConfigChannel+0x4cc>)
 8002f00:	e008      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002f02:	4b4f      	ldr	r3, [pc, #316]	@ (8003040 <HAL_ADC_ConfigChannel+0x4d0>)
 8002f04:	e006      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002f06:	4b4f      	ldr	r3, [pc, #316]	@ (8003044 <HAL_ADC_ConfigChannel+0x4d4>)
 8002f08:	e004      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002f0a:	4b4f      	ldr	r3, [pc, #316]	@ (8003048 <HAL_ADC_ConfigChannel+0x4d8>)
 8002f0c:	e002      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	e000      	b.n	8002f14 <HAL_ADC_ConfigChannel+0x3a4>
 8002f12:	2300      	movs	r3, #0
 8002f14:	4619      	mov	r1, r3
 8002f16:	4610      	mov	r0, r2
 8002f18:	f7ff f856 	bl	8001fc8 <LL_ADC_SetChannelPreselection>
 8002f1c:	683b      	ldr	r3, [r7, #0]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	f280 80fc 	bge.w	800311e <HAL_ADC_ConfigChannel+0x5ae>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	4a36      	ldr	r2, [pc, #216]	@ (8003004 <HAL_ADC_ConfigChannel+0x494>)
 8002f2c:	4293      	cmp	r3, r2
 8002f2e:	d004      	beq.n	8002f3a <HAL_ADC_ConfigChannel+0x3ca>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	681b      	ldr	r3, [r3, #0]
 8002f34:	4a45      	ldr	r2, [pc, #276]	@ (800304c <HAL_ADC_ConfigChannel+0x4dc>)
 8002f36:	4293      	cmp	r3, r2
 8002f38:	d101      	bne.n	8002f3e <HAL_ADC_ConfigChannel+0x3ce>
 8002f3a:	4b45      	ldr	r3, [pc, #276]	@ (8003050 <HAL_ADC_ConfigChannel+0x4e0>)
 8002f3c:	e000      	b.n	8002f40 <HAL_ADC_ConfigChannel+0x3d0>
 8002f3e:	4b45      	ldr	r3, [pc, #276]	@ (8003054 <HAL_ADC_ConfigChannel+0x4e4>)
 8002f40:	4618      	mov	r0, r3
 8002f42:	f7ff f833 	bl	8001fac <LL_ADC_GetCommonPathInternalCh>
 8002f46:	61f8      	str	r0, [r7, #28]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	4a2d      	ldr	r2, [pc, #180]	@ (8003004 <HAL_ADC_ConfigChannel+0x494>)
 8002f4e:	4293      	cmp	r3, r2
 8002f50:	d004      	beq.n	8002f5c <HAL_ADC_ConfigChannel+0x3ec>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	4a3d      	ldr	r2, [pc, #244]	@ (800304c <HAL_ADC_ConfigChannel+0x4dc>)
 8002f58:	4293      	cmp	r3, r2
 8002f5a:	d10e      	bne.n	8002f7a <HAL_ADC_ConfigChannel+0x40a>
 8002f5c:	4829      	ldr	r0, [pc, #164]	@ (8003004 <HAL_ADC_ConfigChannel+0x494>)
 8002f5e:	f7ff f9db 	bl	8002318 <LL_ADC_IsEnabled>
 8002f62:	4604      	mov	r4, r0
 8002f64:	4839      	ldr	r0, [pc, #228]	@ (800304c <HAL_ADC_ConfigChannel+0x4dc>)
 8002f66:	f7ff f9d7 	bl	8002318 <LL_ADC_IsEnabled>
 8002f6a:	4603      	mov	r3, r0
 8002f6c:	4323      	orrs	r3, r4
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	bf0c      	ite	eq
 8002f72:	2301      	moveq	r3, #1
 8002f74:	2300      	movne	r3, #0
 8002f76:	b2db      	uxtb	r3, r3
 8002f78:	e008      	b.n	8002f8c <HAL_ADC_ConfigChannel+0x41c>
 8002f7a:	4837      	ldr	r0, [pc, #220]	@ (8003058 <HAL_ADC_ConfigChannel+0x4e8>)
 8002f7c:	f7ff f9cc 	bl	8002318 <LL_ADC_IsEnabled>
 8002f80:	4603      	mov	r3, r0
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	bf0c      	ite	eq
 8002f86:	2301      	moveq	r3, #1
 8002f88:	2300      	movne	r3, #0
 8002f8a:	b2db      	uxtb	r3, r3
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	f000 80b3 	beq.w	80030f8 <HAL_ADC_ConfigChannel+0x588>
 8002f92:	683b      	ldr	r3, [r7, #0]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	4a31      	ldr	r2, [pc, #196]	@ (800305c <HAL_ADC_ConfigChannel+0x4ec>)
 8002f98:	4293      	cmp	r3, r2
 8002f9a:	d165      	bne.n	8003068 <HAL_ADC_ConfigChannel+0x4f8>
 8002f9c:	69fb      	ldr	r3, [r7, #28]
 8002f9e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002fa2:	2b00      	cmp	r3, #0
 8002fa4:	d160      	bne.n	8003068 <HAL_ADC_ConfigChannel+0x4f8>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a2b      	ldr	r2, [pc, #172]	@ (8003058 <HAL_ADC_ConfigChannel+0x4e8>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	f040 80b6 	bne.w	800311e <HAL_ADC_ConfigChannel+0x5ae>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	681b      	ldr	r3, [r3, #0]
 8002fb6:	4a13      	ldr	r2, [pc, #76]	@ (8003004 <HAL_ADC_ConfigChannel+0x494>)
 8002fb8:	4293      	cmp	r3, r2
 8002fba:	d004      	beq.n	8002fc6 <HAL_ADC_ConfigChannel+0x456>
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	4a22      	ldr	r2, [pc, #136]	@ (800304c <HAL_ADC_ConfigChannel+0x4dc>)
 8002fc2:	4293      	cmp	r3, r2
 8002fc4:	d101      	bne.n	8002fca <HAL_ADC_ConfigChannel+0x45a>
 8002fc6:	4a22      	ldr	r2, [pc, #136]	@ (8003050 <HAL_ADC_ConfigChannel+0x4e0>)
 8002fc8:	e000      	b.n	8002fcc <HAL_ADC_ConfigChannel+0x45c>
 8002fca:	4a22      	ldr	r2, [pc, #136]	@ (8003054 <HAL_ADC_ConfigChannel+0x4e4>)
 8002fcc:	69fb      	ldr	r3, [r7, #28]
 8002fce:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8002fd2:	4619      	mov	r1, r3
 8002fd4:	4610      	mov	r0, r2
 8002fd6:	f7fe ffd6 	bl	8001f86 <LL_ADC_SetCommonPathInternalCh>
 8002fda:	4b21      	ldr	r3, [pc, #132]	@ (8003060 <HAL_ADC_ConfigChannel+0x4f0>)
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	099b      	lsrs	r3, r3, #6
 8002fe0:	4a20      	ldr	r2, [pc, #128]	@ (8003064 <HAL_ADC_ConfigChannel+0x4f4>)
 8002fe2:	fba2 2303 	umull	r2, r3, r2, r3
 8002fe6:	099b      	lsrs	r3, r3, #6
 8002fe8:	3301      	adds	r3, #1
 8002fea:	005b      	lsls	r3, r3, #1
 8002fec:	60fb      	str	r3, [r7, #12]
 8002fee:	e002      	b.n	8002ff6 <HAL_ADC_ConfigChannel+0x486>
 8002ff0:	68fb      	ldr	r3, [r7, #12]
 8002ff2:	3b01      	subs	r3, #1
 8002ff4:	60fb      	str	r3, [r7, #12]
 8002ff6:	68fb      	ldr	r3, [r7, #12]
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	d1f9      	bne.n	8002ff0 <HAL_ADC_ConfigChannel+0x480>
 8002ffc:	e08f      	b.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 8002ffe:	bf00      	nop
 8003000:	47ff0000 	.word	0x47ff0000
 8003004:	40022000 	.word	0x40022000
 8003008:	04300002 	.word	0x04300002
 800300c:	08600004 	.word	0x08600004
 8003010:	0c900008 	.word	0x0c900008
 8003014:	10c00010 	.word	0x10c00010
 8003018:	14f00020 	.word	0x14f00020
 800301c:	2a000400 	.word	0x2a000400
 8003020:	2e300800 	.word	0x2e300800
 8003024:	32601000 	.word	0x32601000
 8003028:	43210000 	.word	0x43210000
 800302c:	4b840000 	.word	0x4b840000
 8003030:	4fb80000 	.word	0x4fb80000
 8003034:	47520000 	.word	0x47520000
 8003038:	36902000 	.word	0x36902000
 800303c:	25b00200 	.word	0x25b00200
 8003040:	21800100 	.word	0x21800100
 8003044:	1d500080 	.word	0x1d500080
 8003048:	19200040 	.word	0x19200040
 800304c:	40022100 	.word	0x40022100
 8003050:	40022300 	.word	0x40022300
 8003054:	58026300 	.word	0x58026300
 8003058:	58026000 	.word	0x58026000
 800305c:	cb840000 	.word	0xcb840000
 8003060:	24000168 	.word	0x24000168
 8003064:	053e2d63 	.word	0x053e2d63
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	4a31      	ldr	r2, [pc, #196]	@ (8003134 <HAL_ADC_ConfigChannel+0x5c4>)
 800306e:	4293      	cmp	r3, r2
 8003070:	d11e      	bne.n	80030b0 <HAL_ADC_ConfigChannel+0x540>
 8003072:	69fb      	ldr	r3, [r7, #28]
 8003074:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003078:	2b00      	cmp	r3, #0
 800307a:	d119      	bne.n	80030b0 <HAL_ADC_ConfigChannel+0x540>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	4a2d      	ldr	r2, [pc, #180]	@ (8003138 <HAL_ADC_ConfigChannel+0x5c8>)
 8003082:	4293      	cmp	r3, r2
 8003084:	d14b      	bne.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	4a2c      	ldr	r2, [pc, #176]	@ (800313c <HAL_ADC_ConfigChannel+0x5cc>)
 800308c:	4293      	cmp	r3, r2
 800308e:	d004      	beq.n	800309a <HAL_ADC_ConfigChannel+0x52a>
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	4a2a      	ldr	r2, [pc, #168]	@ (8003140 <HAL_ADC_ConfigChannel+0x5d0>)
 8003096:	4293      	cmp	r3, r2
 8003098:	d101      	bne.n	800309e <HAL_ADC_ConfigChannel+0x52e>
 800309a:	4a2a      	ldr	r2, [pc, #168]	@ (8003144 <HAL_ADC_ConfigChannel+0x5d4>)
 800309c:	e000      	b.n	80030a0 <HAL_ADC_ConfigChannel+0x530>
 800309e:	4a2a      	ldr	r2, [pc, #168]	@ (8003148 <HAL_ADC_ConfigChannel+0x5d8>)
 80030a0:	69fb      	ldr	r3, [r7, #28]
 80030a2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80030a6:	4619      	mov	r1, r3
 80030a8:	4610      	mov	r0, r2
 80030aa:	f7fe ff6c 	bl	8001f86 <LL_ADC_SetCommonPathInternalCh>
 80030ae:	e036      	b.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	4a25      	ldr	r2, [pc, #148]	@ (800314c <HAL_ADC_ConfigChannel+0x5dc>)
 80030b6:	4293      	cmp	r3, r2
 80030b8:	d131      	bne.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 80030ba:	69fb      	ldr	r3, [r7, #28]
 80030bc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	d12c      	bne.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	4a1b      	ldr	r2, [pc, #108]	@ (8003138 <HAL_ADC_ConfigChannel+0x5c8>)
 80030ca:	4293      	cmp	r3, r2
 80030cc:	d127      	bne.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	4a1a      	ldr	r2, [pc, #104]	@ (800313c <HAL_ADC_ConfigChannel+0x5cc>)
 80030d4:	4293      	cmp	r3, r2
 80030d6:	d004      	beq.n	80030e2 <HAL_ADC_ConfigChannel+0x572>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	4a18      	ldr	r2, [pc, #96]	@ (8003140 <HAL_ADC_ConfigChannel+0x5d0>)
 80030de:	4293      	cmp	r3, r2
 80030e0:	d101      	bne.n	80030e6 <HAL_ADC_ConfigChannel+0x576>
 80030e2:	4a18      	ldr	r2, [pc, #96]	@ (8003144 <HAL_ADC_ConfigChannel+0x5d4>)
 80030e4:	e000      	b.n	80030e8 <HAL_ADC_ConfigChannel+0x578>
 80030e6:	4a18      	ldr	r2, [pc, #96]	@ (8003148 <HAL_ADC_ConfigChannel+0x5d8>)
 80030e8:	69fb      	ldr	r3, [r7, #28]
 80030ea:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80030ee:	4619      	mov	r1, r3
 80030f0:	4610      	mov	r0, r2
 80030f2:	f7fe ff48 	bl	8001f86 <LL_ADC_SetCommonPathInternalCh>
 80030f6:	e012      	b.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80030fc:	f043 0220 	orr.w	r2, r3, #32
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	655a      	str	r2, [r3, #84]	@ 0x54
 8003104:	2301      	movs	r3, #1
 8003106:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800310a:	e008      	b.n	800311e <HAL_ADC_ConfigChannel+0x5ae>
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003110:	f043 0220 	orr.w	r2, r3, #32
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	655a      	str	r2, [r3, #84]	@ 0x54
 8003118:	2301      	movs	r3, #1
 800311a:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	2200      	movs	r2, #0
 8003122:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003126:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800312a:	4618      	mov	r0, r3
 800312c:	3734      	adds	r7, #52	@ 0x34
 800312e:	46bd      	mov	sp, r7
 8003130:	bd90      	pop	{r4, r7, pc}
 8003132:	bf00      	nop
 8003134:	c7520000 	.word	0xc7520000
 8003138:	58026000 	.word	0x58026000
 800313c:	40022000 	.word	0x40022000
 8003140:	40022100 	.word	0x40022100
 8003144:	40022300 	.word	0x40022300
 8003148:	58026300 	.word	0x58026300
 800314c:	cfb80000 	.word	0xcfb80000

08003150 <ADC_ConversionStop>:
 8003150:	b580      	push	{r7, lr}
 8003152:	b088      	sub	sp, #32
 8003154:	af00      	add	r7, sp, #0
 8003156:	6078      	str	r0, [r7, #4]
 8003158:	6039      	str	r1, [r7, #0]
 800315a:	2300      	movs	r3, #0
 800315c:	61fb      	str	r3, [r7, #28]
 800315e:	683b      	ldr	r3, [r7, #0]
 8003160:	61bb      	str	r3, [r7, #24]
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	4618      	mov	r0, r3
 8003168:	f7ff f924 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 800316c:	6138      	str	r0, [r7, #16]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	4618      	mov	r0, r3
 8003174:	f7ff f946 	bl	8002404 <LL_ADC_INJ_IsConversionOngoing>
 8003178:	60f8      	str	r0, [r7, #12]
 800317a:	693b      	ldr	r3, [r7, #16]
 800317c:	2b00      	cmp	r3, #0
 800317e:	d103      	bne.n	8003188 <ADC_ConversionStop+0x38>
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	2b00      	cmp	r3, #0
 8003184:	f000 8098 	beq.w	80032b8 <ADC_ConversionStop+0x168>
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	68db      	ldr	r3, [r3, #12]
 800318e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003192:	2b00      	cmp	r3, #0
 8003194:	d02a      	beq.n	80031ec <ADC_ConversionStop+0x9c>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	7d5b      	ldrb	r3, [r3, #21]
 800319a:	2b01      	cmp	r3, #1
 800319c:	d126      	bne.n	80031ec <ADC_ConversionStop+0x9c>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	7d1b      	ldrb	r3, [r3, #20]
 80031a2:	2b01      	cmp	r3, #1
 80031a4:	d122      	bne.n	80031ec <ADC_ConversionStop+0x9c>
 80031a6:	2301      	movs	r3, #1
 80031a8:	61bb      	str	r3, [r7, #24]
 80031aa:	e014      	b.n	80031d6 <ADC_ConversionStop+0x86>
 80031ac:	69fb      	ldr	r3, [r7, #28]
 80031ae:	4a45      	ldr	r2, [pc, #276]	@ (80032c4 <ADC_ConversionStop+0x174>)
 80031b0:	4293      	cmp	r3, r2
 80031b2:	d90d      	bls.n	80031d0 <ADC_ConversionStop+0x80>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80031b8:	f043 0210 	orr.w	r2, r3, #16
 80031bc:	687b      	ldr	r3, [r7, #4]
 80031be:	655a      	str	r2, [r3, #84]	@ 0x54
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80031c4:	f043 0201 	orr.w	r2, r3, #1
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	659a      	str	r2, [r3, #88]	@ 0x58
 80031cc:	2301      	movs	r3, #1
 80031ce:	e074      	b.n	80032ba <ADC_ConversionStop+0x16a>
 80031d0:	69fb      	ldr	r3, [r7, #28]
 80031d2:	3301      	adds	r3, #1
 80031d4:	61fb      	str	r3, [r7, #28]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80031e0:	2b40      	cmp	r3, #64	@ 0x40
 80031e2:	d1e3      	bne.n	80031ac <ADC_ConversionStop+0x5c>
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	681b      	ldr	r3, [r3, #0]
 80031e8:	2240      	movs	r2, #64	@ 0x40
 80031ea:	601a      	str	r2, [r3, #0]
 80031ec:	69bb      	ldr	r3, [r7, #24]
 80031ee:	2b02      	cmp	r3, #2
 80031f0:	d014      	beq.n	800321c <ADC_ConversionStop+0xcc>
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	4618      	mov	r0, r3
 80031f8:	f7ff f8dc 	bl	80023b4 <LL_ADC_REG_IsConversionOngoing>
 80031fc:	4603      	mov	r3, r0
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d00c      	beq.n	800321c <ADC_ConversionStop+0xcc>
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	681b      	ldr	r3, [r3, #0]
 8003206:	4618      	mov	r0, r3
 8003208:	f7ff f899 	bl	800233e <LL_ADC_IsDisableOngoing>
 800320c:	4603      	mov	r3, r0
 800320e:	2b00      	cmp	r3, #0
 8003210:	d104      	bne.n	800321c <ADC_ConversionStop+0xcc>
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	4618      	mov	r0, r3
 8003218:	f7ff f8b8 	bl	800238c <LL_ADC_REG_StopConversion>
 800321c:	69bb      	ldr	r3, [r7, #24]
 800321e:	2b01      	cmp	r3, #1
 8003220:	d014      	beq.n	800324c <ADC_ConversionStop+0xfc>
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	4618      	mov	r0, r3
 8003228:	f7ff f8ec 	bl	8002404 <LL_ADC_INJ_IsConversionOngoing>
 800322c:	4603      	mov	r3, r0
 800322e:	2b00      	cmp	r3, #0
 8003230:	d00c      	beq.n	800324c <ADC_ConversionStop+0xfc>
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	4618      	mov	r0, r3
 8003238:	f7ff f881 	bl	800233e <LL_ADC_IsDisableOngoing>
 800323c:	4603      	mov	r3, r0
 800323e:	2b00      	cmp	r3, #0
 8003240:	d104      	bne.n	800324c <ADC_ConversionStop+0xfc>
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	681b      	ldr	r3, [r3, #0]
 8003246:	4618      	mov	r0, r3
 8003248:	f7ff f8c8 	bl	80023dc <LL_ADC_INJ_StopConversion>
 800324c:	69bb      	ldr	r3, [r7, #24]
 800324e:	2b02      	cmp	r3, #2
 8003250:	d005      	beq.n	800325e <ADC_ConversionStop+0x10e>
 8003252:	69bb      	ldr	r3, [r7, #24]
 8003254:	2b03      	cmp	r3, #3
 8003256:	d105      	bne.n	8003264 <ADC_ConversionStop+0x114>
 8003258:	230c      	movs	r3, #12
 800325a:	617b      	str	r3, [r7, #20]
 800325c:	e005      	b.n	800326a <ADC_ConversionStop+0x11a>
 800325e:	2308      	movs	r3, #8
 8003260:	617b      	str	r3, [r7, #20]
 8003262:	e002      	b.n	800326a <ADC_ConversionStop+0x11a>
 8003264:	2304      	movs	r3, #4
 8003266:	617b      	str	r3, [r7, #20]
 8003268:	bf00      	nop
 800326a:	f7fe fe61 	bl	8001f30 <HAL_GetTick>
 800326e:	60b8      	str	r0, [r7, #8]
 8003270:	e01b      	b.n	80032aa <ADC_ConversionStop+0x15a>
 8003272:	f7fe fe5d 	bl	8001f30 <HAL_GetTick>
 8003276:	4602      	mov	r2, r0
 8003278:	68bb      	ldr	r3, [r7, #8]
 800327a:	1ad3      	subs	r3, r2, r3
 800327c:	2b05      	cmp	r3, #5
 800327e:	d914      	bls.n	80032aa <ADC_ConversionStop+0x15a>
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	689a      	ldr	r2, [r3, #8]
 8003286:	697b      	ldr	r3, [r7, #20]
 8003288:	4013      	ands	r3, r2
 800328a:	2b00      	cmp	r3, #0
 800328c:	d00d      	beq.n	80032aa <ADC_ConversionStop+0x15a>
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003292:	f043 0210 	orr.w	r2, r3, #16
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	655a      	str	r2, [r3, #84]	@ 0x54
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800329e:	f043 0201 	orr.w	r2, r3, #1
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	659a      	str	r2, [r3, #88]	@ 0x58
 80032a6:	2301      	movs	r3, #1
 80032a8:	e007      	b.n	80032ba <ADC_ConversionStop+0x16a>
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	689a      	ldr	r2, [r3, #8]
 80032b0:	697b      	ldr	r3, [r7, #20]
 80032b2:	4013      	ands	r3, r2
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d1dc      	bne.n	8003272 <ADC_ConversionStop+0x122>
 80032b8:	2300      	movs	r3, #0
 80032ba:	4618      	mov	r0, r3
 80032bc:	3720      	adds	r7, #32
 80032be:	46bd      	mov	sp, r7
 80032c0:	bd80      	pop	{r7, pc}
 80032c2:	bf00      	nop
 80032c4:	000cdbff 	.word	0x000cdbff

080032c8 <ADC_Enable>:
 80032c8:	b580      	push	{r7, lr}
 80032ca:	b084      	sub	sp, #16
 80032cc:	af00      	add	r7, sp, #0
 80032ce:	6078      	str	r0, [r7, #4]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	4618      	mov	r0, r3
 80032d6:	f7ff f81f 	bl	8002318 <LL_ADC_IsEnabled>
 80032da:	4603      	mov	r3, r0
 80032dc:	2b00      	cmp	r3, #0
 80032de:	d16e      	bne.n	80033be <ADC_Enable+0xf6>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	689a      	ldr	r2, [r3, #8]
 80032e6:	4b38      	ldr	r3, [pc, #224]	@ (80033c8 <ADC_Enable+0x100>)
 80032e8:	4013      	ands	r3, r2
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	d00d      	beq.n	800330a <ADC_Enable+0x42>
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80032f2:	f043 0210 	orr.w	r2, r3, #16
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032fe:	f043 0201 	orr.w	r2, r3, #1
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	659a      	str	r2, [r3, #88]	@ 0x58
 8003306:	2301      	movs	r3, #1
 8003308:	e05a      	b.n	80033c0 <ADC_Enable+0xf8>
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	4618      	mov	r0, r3
 8003310:	f7fe ffda 	bl	80022c8 <LL_ADC_Enable>
 8003314:	f7fe fe0c 	bl	8001f30 <HAL_GetTick>
 8003318:	60f8      	str	r0, [r7, #12]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a2b      	ldr	r2, [pc, #172]	@ (80033cc <ADC_Enable+0x104>)
 8003320:	4293      	cmp	r3, r2
 8003322:	d004      	beq.n	800332e <ADC_Enable+0x66>
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	4a29      	ldr	r2, [pc, #164]	@ (80033d0 <ADC_Enable+0x108>)
 800332a:	4293      	cmp	r3, r2
 800332c:	d101      	bne.n	8003332 <ADC_Enable+0x6a>
 800332e:	4b29      	ldr	r3, [pc, #164]	@ (80033d4 <ADC_Enable+0x10c>)
 8003330:	e000      	b.n	8003334 <ADC_Enable+0x6c>
 8003332:	4b29      	ldr	r3, [pc, #164]	@ (80033d8 <ADC_Enable+0x110>)
 8003334:	4618      	mov	r0, r3
 8003336:	f7fe ff5d 	bl	80021f4 <LL_ADC_GetMultimode>
 800333a:	60b8      	str	r0, [r7, #8]
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	4a23      	ldr	r2, [pc, #140]	@ (80033d0 <ADC_Enable+0x108>)
 8003342:	4293      	cmp	r3, r2
 8003344:	d002      	beq.n	800334c <ADC_Enable+0x84>
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	e000      	b.n	800334e <ADC_Enable+0x86>
 800334c:	4b1f      	ldr	r3, [pc, #124]	@ (80033cc <ADC_Enable+0x104>)
 800334e:	687a      	ldr	r2, [r7, #4]
 8003350:	6812      	ldr	r2, [r2, #0]
 8003352:	4293      	cmp	r3, r2
 8003354:	d02c      	beq.n	80033b0 <ADC_Enable+0xe8>
 8003356:	68bb      	ldr	r3, [r7, #8]
 8003358:	2b00      	cmp	r3, #0
 800335a:	d130      	bne.n	80033be <ADC_Enable+0xf6>
 800335c:	e028      	b.n	80033b0 <ADC_Enable+0xe8>
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	4618      	mov	r0, r3
 8003364:	f7fe ffd8 	bl	8002318 <LL_ADC_IsEnabled>
 8003368:	4603      	mov	r3, r0
 800336a:	2b00      	cmp	r3, #0
 800336c:	d104      	bne.n	8003378 <ADC_Enable+0xb0>
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	4618      	mov	r0, r3
 8003374:	f7fe ffa8 	bl	80022c8 <LL_ADC_Enable>
 8003378:	f7fe fdda 	bl	8001f30 <HAL_GetTick>
 800337c:	4602      	mov	r2, r0
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	1ad3      	subs	r3, r2, r3
 8003382:	2b02      	cmp	r3, #2
 8003384:	d914      	bls.n	80033b0 <ADC_Enable+0xe8>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	f003 0301 	and.w	r3, r3, #1
 8003390:	2b01      	cmp	r3, #1
 8003392:	d00d      	beq.n	80033b0 <ADC_Enable+0xe8>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003398:	f043 0210 	orr.w	r2, r3, #16
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	655a      	str	r2, [r3, #84]	@ 0x54
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80033a4:	f043 0201 	orr.w	r2, r3, #1
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	659a      	str	r2, [r3, #88]	@ 0x58
 80033ac:	2301      	movs	r3, #1
 80033ae:	e007      	b.n	80033c0 <ADC_Enable+0xf8>
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	681b      	ldr	r3, [r3, #0]
 80033b6:	f003 0301 	and.w	r3, r3, #1
 80033ba:	2b01      	cmp	r3, #1
 80033bc:	d1cf      	bne.n	800335e <ADC_Enable+0x96>
 80033be:	2300      	movs	r3, #0
 80033c0:	4618      	mov	r0, r3
 80033c2:	3710      	adds	r7, #16
 80033c4:	46bd      	mov	sp, r7
 80033c6:	bd80      	pop	{r7, pc}
 80033c8:	8000003f 	.word	0x8000003f
 80033cc:	40022000 	.word	0x40022000
 80033d0:	40022100 	.word	0x40022100
 80033d4:	40022300 	.word	0x40022300
 80033d8:	58026300 	.word	0x58026300

080033dc <ADC_Disable>:
 80033dc:	b580      	push	{r7, lr}
 80033de:	b084      	sub	sp, #16
 80033e0:	af00      	add	r7, sp, #0
 80033e2:	6078      	str	r0, [r7, #4]
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	4618      	mov	r0, r3
 80033ea:	f7fe ffa8 	bl	800233e <LL_ADC_IsDisableOngoing>
 80033ee:	60f8      	str	r0, [r7, #12]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	4618      	mov	r0, r3
 80033f6:	f7fe ff8f 	bl	8002318 <LL_ADC_IsEnabled>
 80033fa:	4603      	mov	r3, r0
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d047      	beq.n	8003490 <ADC_Disable+0xb4>
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	2b00      	cmp	r3, #0
 8003404:	d144      	bne.n	8003490 <ADC_Disable+0xb4>
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	689b      	ldr	r3, [r3, #8]
 800340c:	f003 030d 	and.w	r3, r3, #13
 8003410:	2b01      	cmp	r3, #1
 8003412:	d10c      	bne.n	800342e <ADC_Disable+0x52>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	4618      	mov	r0, r3
 800341a:	f7fe ff69 	bl	80022f0 <LL_ADC_Disable>
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	2203      	movs	r2, #3
 8003424:	601a      	str	r2, [r3, #0]
 8003426:	f7fe fd83 	bl	8001f30 <HAL_GetTick>
 800342a:	60b8      	str	r0, [r7, #8]
 800342c:	e029      	b.n	8003482 <ADC_Disable+0xa6>
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003432:	f043 0210 	orr.w	r2, r3, #16
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	655a      	str	r2, [r3, #84]	@ 0x54
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800343e:	f043 0201 	orr.w	r2, r3, #1
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	659a      	str	r2, [r3, #88]	@ 0x58
 8003446:	2301      	movs	r3, #1
 8003448:	e023      	b.n	8003492 <ADC_Disable+0xb6>
 800344a:	f7fe fd71 	bl	8001f30 <HAL_GetTick>
 800344e:	4602      	mov	r2, r0
 8003450:	68bb      	ldr	r3, [r7, #8]
 8003452:	1ad3      	subs	r3, r2, r3
 8003454:	2b02      	cmp	r3, #2
 8003456:	d914      	bls.n	8003482 <ADC_Disable+0xa6>
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	689b      	ldr	r3, [r3, #8]
 800345e:	f003 0301 	and.w	r3, r3, #1
 8003462:	2b00      	cmp	r3, #0
 8003464:	d00d      	beq.n	8003482 <ADC_Disable+0xa6>
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800346a:	f043 0210 	orr.w	r2, r3, #16
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	655a      	str	r2, [r3, #84]	@ 0x54
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003476:	f043 0201 	orr.w	r2, r3, #1
 800347a:	687b      	ldr	r3, [r7, #4]
 800347c:	659a      	str	r2, [r3, #88]	@ 0x58
 800347e:	2301      	movs	r3, #1
 8003480:	e007      	b.n	8003492 <ADC_Disable+0xb6>
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	689b      	ldr	r3, [r3, #8]
 8003488:	f003 0301 	and.w	r3, r3, #1
 800348c:	2b00      	cmp	r3, #0
 800348e:	d1dc      	bne.n	800344a <ADC_Disable+0x6e>
 8003490:	2300      	movs	r3, #0
 8003492:	4618      	mov	r0, r3
 8003494:	3710      	adds	r7, #16
 8003496:	46bd      	mov	sp, r7
 8003498:	bd80      	pop	{r7, pc}
	...

0800349c <ADC_ConfigureBoostMode>:
 800349c:	b580      	push	{r7, lr}
 800349e:	b084      	sub	sp, #16
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	6078      	str	r0, [r7, #4]
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	4a7a      	ldr	r2, [pc, #488]	@ (8003694 <ADC_ConfigureBoostMode+0x1f8>)
 80034aa:	4293      	cmp	r3, r2
 80034ac:	d004      	beq.n	80034b8 <ADC_ConfigureBoostMode+0x1c>
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	4a79      	ldr	r2, [pc, #484]	@ (8003698 <ADC_ConfigureBoostMode+0x1fc>)
 80034b4:	4293      	cmp	r3, r2
 80034b6:	d109      	bne.n	80034cc <ADC_ConfigureBoostMode+0x30>
 80034b8:	4b78      	ldr	r3, [pc, #480]	@ (800369c <ADC_ConfigureBoostMode+0x200>)
 80034ba:	689b      	ldr	r3, [r3, #8]
 80034bc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80034c0:	2b00      	cmp	r3, #0
 80034c2:	bf14      	ite	ne
 80034c4:	2301      	movne	r3, #1
 80034c6:	2300      	moveq	r3, #0
 80034c8:	b2db      	uxtb	r3, r3
 80034ca:	e008      	b.n	80034de <ADC_ConfigureBoostMode+0x42>
 80034cc:	4b74      	ldr	r3, [pc, #464]	@ (80036a0 <ADC_ConfigureBoostMode+0x204>)
 80034ce:	689b      	ldr	r3, [r3, #8]
 80034d0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80034d4:	2b00      	cmp	r3, #0
 80034d6:	bf14      	ite	ne
 80034d8:	2301      	movne	r3, #1
 80034da:	2300      	moveq	r3, #0
 80034dc:	b2db      	uxtb	r3, r3
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d01c      	beq.n	800351c <ADC_ConfigureBoostMode+0x80>
 80034e2:	f001 fcd1 	bl	8004e88 <HAL_RCC_GetHCLKFreq>
 80034e6:	60f8      	str	r0, [r7, #12]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	685b      	ldr	r3, [r3, #4]
 80034ec:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80034f0:	d010      	beq.n	8003514 <ADC_ConfigureBoostMode+0x78>
 80034f2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80034f6:	d873      	bhi.n	80035e0 <ADC_ConfigureBoostMode+0x144>
 80034f8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80034fc:	d002      	beq.n	8003504 <ADC_ConfigureBoostMode+0x68>
 80034fe:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8003502:	d16d      	bne.n	80035e0 <ADC_ConfigureBoostMode+0x144>
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	685b      	ldr	r3, [r3, #4]
 8003508:	0c1b      	lsrs	r3, r3, #16
 800350a:	68fa      	ldr	r2, [r7, #12]
 800350c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003510:	60fb      	str	r3, [r7, #12]
 8003512:	e068      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 8003514:	68fb      	ldr	r3, [r7, #12]
 8003516:	089b      	lsrs	r3, r3, #2
 8003518:	60fb      	str	r3, [r7, #12]
 800351a:	e064      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 800351c:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 8003520:	f04f 0100 	mov.w	r1, #0
 8003524:	f002 ff58 	bl	80063d8 <HAL_RCCEx_GetPeriphCLKFreq>
 8003528:	60f8      	str	r0, [r7, #12]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	685b      	ldr	r3, [r3, #4]
 800352e:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 8003532:	d051      	beq.n	80035d8 <ADC_ConfigureBoostMode+0x13c>
 8003534:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 8003538:	d854      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 800353a:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 800353e:	d047      	beq.n	80035d0 <ADC_ConfigureBoostMode+0x134>
 8003540:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 8003544:	d84e      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 8003546:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 800354a:	d03d      	beq.n	80035c8 <ADC_ConfigureBoostMode+0x12c>
 800354c:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 8003550:	d848      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 8003552:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8003556:	d033      	beq.n	80035c0 <ADC_ConfigureBoostMode+0x124>
 8003558:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800355c:	d842      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 800355e:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8003562:	d029      	beq.n	80035b8 <ADC_ConfigureBoostMode+0x11c>
 8003564:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8003568:	d83c      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 800356a:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 800356e:	d01a      	beq.n	80035a6 <ADC_ConfigureBoostMode+0x10a>
 8003570:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8003574:	d836      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 8003576:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 800357a:	d014      	beq.n	80035a6 <ADC_ConfigureBoostMode+0x10a>
 800357c:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8003580:	d830      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 8003582:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8003586:	d00e      	beq.n	80035a6 <ADC_ConfigureBoostMode+0x10a>
 8003588:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800358c:	d82a      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 800358e:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003592:	d008      	beq.n	80035a6 <ADC_ConfigureBoostMode+0x10a>
 8003594:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003598:	d824      	bhi.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 800359a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800359e:	d002      	beq.n	80035a6 <ADC_ConfigureBoostMode+0x10a>
 80035a0:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 80035a4:	d11e      	bne.n	80035e4 <ADC_ConfigureBoostMode+0x148>
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	685b      	ldr	r3, [r3, #4]
 80035aa:	0c9b      	lsrs	r3, r3, #18
 80035ac:	005b      	lsls	r3, r3, #1
 80035ae:	68fa      	ldr	r2, [r7, #12]
 80035b0:	fbb2 f3f3 	udiv	r3, r2, r3
 80035b4:	60fb      	str	r3, [r7, #12]
 80035b6:	e016      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	091b      	lsrs	r3, r3, #4
 80035bc:	60fb      	str	r3, [r7, #12]
 80035be:	e012      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	095b      	lsrs	r3, r3, #5
 80035c4:	60fb      	str	r3, [r7, #12]
 80035c6:	e00e      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035c8:	68fb      	ldr	r3, [r7, #12]
 80035ca:	099b      	lsrs	r3, r3, #6
 80035cc:	60fb      	str	r3, [r7, #12]
 80035ce:	e00a      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	09db      	lsrs	r3, r3, #7
 80035d4:	60fb      	str	r3, [r7, #12]
 80035d6:	e006      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	0a1b      	lsrs	r3, r3, #8
 80035dc:	60fb      	str	r3, [r7, #12]
 80035de:	e002      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035e0:	bf00      	nop
 80035e2:	e000      	b.n	80035e6 <ADC_ConfigureBoostMode+0x14a>
 80035e4:	bf00      	nop
 80035e6:	f7fe fcaf 	bl	8001f48 <HAL_GetREVID>
 80035ea:	4603      	mov	r3, r0
 80035ec:	f241 0203 	movw	r2, #4099	@ 0x1003
 80035f0:	4293      	cmp	r3, r2
 80035f2:	d815      	bhi.n	8003620 <ADC_ConfigureBoostMode+0x184>
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	4a2b      	ldr	r2, [pc, #172]	@ (80036a4 <ADC_ConfigureBoostMode+0x208>)
 80035f8:	4293      	cmp	r3, r2
 80035fa:	d908      	bls.n	800360e <ADC_ConfigureBoostMode+0x172>
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	689a      	ldr	r2, [r3, #8]
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800360a:	609a      	str	r2, [r3, #8]
 800360c:	e03e      	b.n	800368c <ADC_ConfigureBoostMode+0x1f0>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	689a      	ldr	r2, [r3, #8]
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800361c:	609a      	str	r2, [r3, #8]
 800361e:	e035      	b.n	800368c <ADC_ConfigureBoostMode+0x1f0>
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	085b      	lsrs	r3, r3, #1
 8003624:	60fb      	str	r3, [r7, #12]
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	4a1f      	ldr	r2, [pc, #124]	@ (80036a8 <ADC_ConfigureBoostMode+0x20c>)
 800362a:	4293      	cmp	r3, r2
 800362c:	d808      	bhi.n	8003640 <ADC_ConfigureBoostMode+0x1a4>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	689a      	ldr	r2, [r3, #8]
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800363c:	609a      	str	r2, [r3, #8]
 800363e:	e025      	b.n	800368c <ADC_ConfigureBoostMode+0x1f0>
 8003640:	68fb      	ldr	r3, [r7, #12]
 8003642:	4a1a      	ldr	r2, [pc, #104]	@ (80036ac <ADC_ConfigureBoostMode+0x210>)
 8003644:	4293      	cmp	r3, r2
 8003646:	d80a      	bhi.n	800365e <ADC_ConfigureBoostMode+0x1c2>
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	681b      	ldr	r3, [r3, #0]
 800364c:	689b      	ldr	r3, [r3, #8]
 800364e:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003652:	687b      	ldr	r3, [r7, #4]
 8003654:	681b      	ldr	r3, [r3, #0]
 8003656:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800365a:	609a      	str	r2, [r3, #8]
 800365c:	e016      	b.n	800368c <ADC_ConfigureBoostMode+0x1f0>
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	4a13      	ldr	r2, [pc, #76]	@ (80036b0 <ADC_ConfigureBoostMode+0x214>)
 8003662:	4293      	cmp	r3, r2
 8003664:	d80a      	bhi.n	800367c <ADC_ConfigureBoostMode+0x1e0>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	689b      	ldr	r3, [r3, #8]
 800366c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003678:	609a      	str	r2, [r3, #8]
 800367a:	e007      	b.n	800368c <ADC_ConfigureBoostMode+0x1f0>
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	689a      	ldr	r2, [r3, #8]
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	681b      	ldr	r3, [r3, #0]
 8003686:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 800368a:	609a      	str	r2, [r3, #8]
 800368c:	bf00      	nop
 800368e:	3710      	adds	r7, #16
 8003690:	46bd      	mov	sp, r7
 8003692:	bd80      	pop	{r7, pc}
 8003694:	40022000 	.word	0x40022000
 8003698:	40022100 	.word	0x40022100
 800369c:	40022300 	.word	0x40022300
 80036a0:	58026300 	.word	0x58026300
 80036a4:	01312d00 	.word	0x01312d00
 80036a8:	005f5e10 	.word	0x005f5e10
 80036ac:	00bebc20 	.word	0x00bebc20
 80036b0:	017d7840 	.word	0x017d7840

080036b4 <LL_ADC_IsEnabled>:
 80036b4:	b480      	push	{r7}
 80036b6:	b083      	sub	sp, #12
 80036b8:	af00      	add	r7, sp, #0
 80036ba:	6078      	str	r0, [r7, #4]
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	689b      	ldr	r3, [r3, #8]
 80036c0:	f003 0301 	and.w	r3, r3, #1
 80036c4:	2b01      	cmp	r3, #1
 80036c6:	d101      	bne.n	80036cc <LL_ADC_IsEnabled+0x18>
 80036c8:	2301      	movs	r3, #1
 80036ca:	e000      	b.n	80036ce <LL_ADC_IsEnabled+0x1a>
 80036cc:	2300      	movs	r3, #0
 80036ce:	4618      	mov	r0, r3
 80036d0:	370c      	adds	r7, #12
 80036d2:	46bd      	mov	sp, r7
 80036d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036d8:	4770      	bx	lr

080036da <LL_ADC_REG_IsConversionOngoing>:
 80036da:	b480      	push	{r7}
 80036dc:	b083      	sub	sp, #12
 80036de:	af00      	add	r7, sp, #0
 80036e0:	6078      	str	r0, [r7, #4]
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	689b      	ldr	r3, [r3, #8]
 80036e6:	f003 0304 	and.w	r3, r3, #4
 80036ea:	2b04      	cmp	r3, #4
 80036ec:	d101      	bne.n	80036f2 <LL_ADC_REG_IsConversionOngoing+0x18>
 80036ee:	2301      	movs	r3, #1
 80036f0:	e000      	b.n	80036f4 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80036f2:	2300      	movs	r3, #0
 80036f4:	4618      	mov	r0, r3
 80036f6:	370c      	adds	r7, #12
 80036f8:	46bd      	mov	sp, r7
 80036fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036fe:	4770      	bx	lr

08003700 <HAL_ADCEx_MultiModeConfigChannel>:
 8003700:	b590      	push	{r4, r7, lr}
 8003702:	b09f      	sub	sp, #124	@ 0x7c
 8003704:	af00      	add	r7, sp, #0
 8003706:	6078      	str	r0, [r7, #4]
 8003708:	6039      	str	r1, [r7, #0]
 800370a:	2300      	movs	r3, #0
 800370c:	f887 3077 	strb.w	r3, [r7, #119]	@ 0x77
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8003716:	2b01      	cmp	r3, #1
 8003718:	d101      	bne.n	800371e <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800371a:	2302      	movs	r3, #2
 800371c:	e0be      	b.n	800389c <HAL_ADCEx_MultiModeConfigChannel+0x19c>
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	2201      	movs	r2, #1
 8003722:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003726:	2300      	movs	r3, #0
 8003728:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800372a:	2300      	movs	r3, #0
 800372c:	663b      	str	r3, [r7, #96]	@ 0x60
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4a5c      	ldr	r2, [pc, #368]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 8003734:	4293      	cmp	r3, r2
 8003736:	d102      	bne.n	800373e <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8003738:	4b5b      	ldr	r3, [pc, #364]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 800373a:	60bb      	str	r3, [r7, #8]
 800373c:	e001      	b.n	8003742 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 800373e:	2300      	movs	r3, #0
 8003740:	60bb      	str	r3, [r7, #8]
 8003742:	68bb      	ldr	r3, [r7, #8]
 8003744:	2b00      	cmp	r3, #0
 8003746:	d10b      	bne.n	8003760 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800374c:	f043 0220 	orr.w	r2, r3, #32
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	655a      	str	r2, [r3, #84]	@ 0x54
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	2200      	movs	r2, #0
 8003758:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800375c:	2301      	movs	r3, #1
 800375e:	e09d      	b.n	800389c <HAL_ADCEx_MultiModeConfigChannel+0x19c>
 8003760:	68bb      	ldr	r3, [r7, #8]
 8003762:	4618      	mov	r0, r3
 8003764:	f7ff ffb9 	bl	80036da <LL_ADC_REG_IsConversionOngoing>
 8003768:	6738      	str	r0, [r7, #112]	@ 0x70
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	4618      	mov	r0, r3
 8003770:	f7ff ffb3 	bl	80036da <LL_ADC_REG_IsConversionOngoing>
 8003774:	4603      	mov	r3, r0
 8003776:	2b00      	cmp	r3, #0
 8003778:	d17f      	bne.n	800387a <HAL_ADCEx_MultiModeConfigChannel+0x17a>
 800377a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800377c:	2b00      	cmp	r3, #0
 800377e:	d17c      	bne.n	800387a <HAL_ADCEx_MultiModeConfigChannel+0x17a>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	4a47      	ldr	r2, [pc, #284]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 8003786:	4293      	cmp	r3, r2
 8003788:	d004      	beq.n	8003794 <HAL_ADCEx_MultiModeConfigChannel+0x94>
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	4a46      	ldr	r2, [pc, #280]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 8003790:	4293      	cmp	r3, r2
 8003792:	d101      	bne.n	8003798 <HAL_ADCEx_MultiModeConfigChannel+0x98>
 8003794:	4b45      	ldr	r3, [pc, #276]	@ (80038ac <HAL_ADCEx_MultiModeConfigChannel+0x1ac>)
 8003796:	e000      	b.n	800379a <HAL_ADCEx_MultiModeConfigChannel+0x9a>
 8003798:	4b45      	ldr	r3, [pc, #276]	@ (80038b0 <HAL_ADCEx_MultiModeConfigChannel+0x1b0>)
 800379a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	2b00      	cmp	r3, #0
 80037a2:	d039      	beq.n	8003818 <HAL_ADCEx_MultiModeConfigChannel+0x118>
 80037a4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80037a6:	689b      	ldr	r3, [r3, #8]
 80037a8:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80037ac:	683b      	ldr	r3, [r7, #0]
 80037ae:	685b      	ldr	r3, [r3, #4]
 80037b0:	431a      	orrs	r2, r3
 80037b2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80037b4:	609a      	str	r2, [r3, #8]
 80037b6:	687b      	ldr	r3, [r7, #4]
 80037b8:	681b      	ldr	r3, [r3, #0]
 80037ba:	4a3a      	ldr	r2, [pc, #232]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 80037bc:	4293      	cmp	r3, r2
 80037be:	d004      	beq.n	80037ca <HAL_ADCEx_MultiModeConfigChannel+0xca>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	4a38      	ldr	r2, [pc, #224]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 80037c6:	4293      	cmp	r3, r2
 80037c8:	d10e      	bne.n	80037e8 <HAL_ADCEx_MultiModeConfigChannel+0xe8>
 80037ca:	4836      	ldr	r0, [pc, #216]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 80037cc:	f7ff ff72 	bl	80036b4 <LL_ADC_IsEnabled>
 80037d0:	4604      	mov	r4, r0
 80037d2:	4835      	ldr	r0, [pc, #212]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 80037d4:	f7ff ff6e 	bl	80036b4 <LL_ADC_IsEnabled>
 80037d8:	4603      	mov	r3, r0
 80037da:	4323      	orrs	r3, r4
 80037dc:	2b00      	cmp	r3, #0
 80037de:	bf0c      	ite	eq
 80037e0:	2301      	moveq	r3, #1
 80037e2:	2300      	movne	r3, #0
 80037e4:	b2db      	uxtb	r3, r3
 80037e6:	e008      	b.n	80037fa <HAL_ADCEx_MultiModeConfigChannel+0xfa>
 80037e8:	4832      	ldr	r0, [pc, #200]	@ (80038b4 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 80037ea:	f7ff ff63 	bl	80036b4 <LL_ADC_IsEnabled>
 80037ee:	4603      	mov	r3, r0
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	bf0c      	ite	eq
 80037f4:	2301      	moveq	r3, #1
 80037f6:	2300      	movne	r3, #0
 80037f8:	b2db      	uxtb	r3, r3
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	d047      	beq.n	800388e <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 80037fe:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003800:	689a      	ldr	r2, [r3, #8]
 8003802:	4b2d      	ldr	r3, [pc, #180]	@ (80038b8 <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8003804:	4013      	ands	r3, r2
 8003806:	683a      	ldr	r2, [r7, #0]
 8003808:	6811      	ldr	r1, [r2, #0]
 800380a:	683a      	ldr	r2, [r7, #0]
 800380c:	6892      	ldr	r2, [r2, #8]
 800380e:	430a      	orrs	r2, r1
 8003810:	431a      	orrs	r2, r3
 8003812:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003814:	609a      	str	r2, [r3, #8]
 8003816:	e03a      	b.n	800388e <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 8003818:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800381a:	689b      	ldr	r3, [r3, #8]
 800381c:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8003820:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003822:	609a      	str	r2, [r3, #8]
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	4a1e      	ldr	r2, [pc, #120]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 800382a:	4293      	cmp	r3, r2
 800382c:	d004      	beq.n	8003838 <HAL_ADCEx_MultiModeConfigChannel+0x138>
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	681b      	ldr	r3, [r3, #0]
 8003832:	4a1d      	ldr	r2, [pc, #116]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 8003834:	4293      	cmp	r3, r2
 8003836:	d10e      	bne.n	8003856 <HAL_ADCEx_MultiModeConfigChannel+0x156>
 8003838:	481a      	ldr	r0, [pc, #104]	@ (80038a4 <HAL_ADCEx_MultiModeConfigChannel+0x1a4>)
 800383a:	f7ff ff3b 	bl	80036b4 <LL_ADC_IsEnabled>
 800383e:	4604      	mov	r4, r0
 8003840:	4819      	ldr	r0, [pc, #100]	@ (80038a8 <HAL_ADCEx_MultiModeConfigChannel+0x1a8>)
 8003842:	f7ff ff37 	bl	80036b4 <LL_ADC_IsEnabled>
 8003846:	4603      	mov	r3, r0
 8003848:	4323      	orrs	r3, r4
 800384a:	2b00      	cmp	r3, #0
 800384c:	bf0c      	ite	eq
 800384e:	2301      	moveq	r3, #1
 8003850:	2300      	movne	r3, #0
 8003852:	b2db      	uxtb	r3, r3
 8003854:	e008      	b.n	8003868 <HAL_ADCEx_MultiModeConfigChannel+0x168>
 8003856:	4817      	ldr	r0, [pc, #92]	@ (80038b4 <HAL_ADCEx_MultiModeConfigChannel+0x1b4>)
 8003858:	f7ff ff2c 	bl	80036b4 <LL_ADC_IsEnabled>
 800385c:	4603      	mov	r3, r0
 800385e:	2b00      	cmp	r3, #0
 8003860:	bf0c      	ite	eq
 8003862:	2301      	moveq	r3, #1
 8003864:	2300      	movne	r3, #0
 8003866:	b2db      	uxtb	r3, r3
 8003868:	2b00      	cmp	r3, #0
 800386a:	d010      	beq.n	800388e <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 800386c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800386e:	689a      	ldr	r2, [r3, #8]
 8003870:	4b11      	ldr	r3, [pc, #68]	@ (80038b8 <HAL_ADCEx_MultiModeConfigChannel+0x1b8>)
 8003872:	4013      	ands	r3, r2
 8003874:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8003876:	6093      	str	r3, [r2, #8]
 8003878:	e009      	b.n	800388e <HAL_ADCEx_MultiModeConfigChannel+0x18e>
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800387e:	f043 0220 	orr.w	r2, r3, #32
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	655a      	str	r2, [r3, #84]	@ 0x54
 8003886:	2301      	movs	r3, #1
 8003888:	f887 3077 	strb.w	r3, [r7, #119]	@ 0x77
 800388c:	e000      	b.n	8003890 <HAL_ADCEx_MultiModeConfigChannel+0x190>
 800388e:	bf00      	nop
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	2200      	movs	r2, #0
 8003894:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003898:	f897 3077 	ldrb.w	r3, [r7, #119]	@ 0x77
 800389c:	4618      	mov	r0, r3
 800389e:	377c      	adds	r7, #124	@ 0x7c
 80038a0:	46bd      	mov	sp, r7
 80038a2:	bd90      	pop	{r4, r7, pc}
 80038a4:	40022000 	.word	0x40022000
 80038a8:	40022100 	.word	0x40022100
 80038ac:	40022300 	.word	0x40022300
 80038b0:	58026300 	.word	0x58026300
 80038b4:	58026000 	.word	0x58026000
 80038b8:	fffff0e0 	.word	0xfffff0e0

080038bc <__NVIC_SetPriorityGrouping>:
 80038bc:	b480      	push	{r7}
 80038be:	b085      	sub	sp, #20
 80038c0:	af00      	add	r7, sp, #0
 80038c2:	6078      	str	r0, [r7, #4]
 80038c4:	687b      	ldr	r3, [r7, #4]
 80038c6:	f003 0307 	and.w	r3, r3, #7
 80038ca:	60fb      	str	r3, [r7, #12]
 80038cc:	4b0b      	ldr	r3, [pc, #44]	@ (80038fc <__NVIC_SetPriorityGrouping+0x40>)
 80038ce:	68db      	ldr	r3, [r3, #12]
 80038d0:	60bb      	str	r3, [r7, #8]
 80038d2:	68ba      	ldr	r2, [r7, #8]
 80038d4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80038d8:	4013      	ands	r3, r2
 80038da:	60bb      	str	r3, [r7, #8]
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	021a      	lsls	r2, r3, #8
 80038e0:	68bb      	ldr	r3, [r7, #8]
 80038e2:	431a      	orrs	r2, r3
 80038e4:	4b06      	ldr	r3, [pc, #24]	@ (8003900 <__NVIC_SetPriorityGrouping+0x44>)
 80038e6:	4313      	orrs	r3, r2
 80038e8:	60bb      	str	r3, [r7, #8]
 80038ea:	4a04      	ldr	r2, [pc, #16]	@ (80038fc <__NVIC_SetPriorityGrouping+0x40>)
 80038ec:	68bb      	ldr	r3, [r7, #8]
 80038ee:	60d3      	str	r3, [r2, #12]
 80038f0:	bf00      	nop
 80038f2:	3714      	adds	r7, #20
 80038f4:	46bd      	mov	sp, r7
 80038f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038fa:	4770      	bx	lr
 80038fc:	e000ed00 	.word	0xe000ed00
 8003900:	05fa0000 	.word	0x05fa0000

08003904 <__NVIC_GetPriorityGrouping>:
 8003904:	b480      	push	{r7}
 8003906:	af00      	add	r7, sp, #0
 8003908:	4b04      	ldr	r3, [pc, #16]	@ (800391c <__NVIC_GetPriorityGrouping+0x18>)
 800390a:	68db      	ldr	r3, [r3, #12]
 800390c:	0a1b      	lsrs	r3, r3, #8
 800390e:	f003 0307 	and.w	r3, r3, #7
 8003912:	4618      	mov	r0, r3
 8003914:	46bd      	mov	sp, r7
 8003916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800391a:	4770      	bx	lr
 800391c:	e000ed00 	.word	0xe000ed00

08003920 <__NVIC_EnableIRQ>:
 8003920:	b480      	push	{r7}
 8003922:	b083      	sub	sp, #12
 8003924:	af00      	add	r7, sp, #0
 8003926:	4603      	mov	r3, r0
 8003928:	80fb      	strh	r3, [r7, #6]
 800392a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800392e:	2b00      	cmp	r3, #0
 8003930:	db0b      	blt.n	800394a <__NVIC_EnableIRQ+0x2a>
 8003932:	88fb      	ldrh	r3, [r7, #6]
 8003934:	f003 021f 	and.w	r2, r3, #31
 8003938:	4907      	ldr	r1, [pc, #28]	@ (8003958 <__NVIC_EnableIRQ+0x38>)
 800393a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800393e:	095b      	lsrs	r3, r3, #5
 8003940:	2001      	movs	r0, #1
 8003942:	fa00 f202 	lsl.w	r2, r0, r2
 8003946:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800394a:	bf00      	nop
 800394c:	370c      	adds	r7, #12
 800394e:	46bd      	mov	sp, r7
 8003950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003954:	4770      	bx	lr
 8003956:	bf00      	nop
 8003958:	e000e100 	.word	0xe000e100

0800395c <__NVIC_SetPriority>:
 800395c:	b480      	push	{r7}
 800395e:	b083      	sub	sp, #12
 8003960:	af00      	add	r7, sp, #0
 8003962:	4603      	mov	r3, r0
 8003964:	6039      	str	r1, [r7, #0]
 8003966:	80fb      	strh	r3, [r7, #6]
 8003968:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800396c:	2b00      	cmp	r3, #0
 800396e:	db0a      	blt.n	8003986 <__NVIC_SetPriority+0x2a>
 8003970:	683b      	ldr	r3, [r7, #0]
 8003972:	b2da      	uxtb	r2, r3
 8003974:	490c      	ldr	r1, [pc, #48]	@ (80039a8 <__NVIC_SetPriority+0x4c>)
 8003976:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800397a:	0112      	lsls	r2, r2, #4
 800397c:	b2d2      	uxtb	r2, r2
 800397e:	440b      	add	r3, r1
 8003980:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003984:	e00a      	b.n	800399c <__NVIC_SetPriority+0x40>
 8003986:	683b      	ldr	r3, [r7, #0]
 8003988:	b2da      	uxtb	r2, r3
 800398a:	4908      	ldr	r1, [pc, #32]	@ (80039ac <__NVIC_SetPriority+0x50>)
 800398c:	88fb      	ldrh	r3, [r7, #6]
 800398e:	f003 030f 	and.w	r3, r3, #15
 8003992:	3b04      	subs	r3, #4
 8003994:	0112      	lsls	r2, r2, #4
 8003996:	b2d2      	uxtb	r2, r2
 8003998:	440b      	add	r3, r1
 800399a:	761a      	strb	r2, [r3, #24]
 800399c:	bf00      	nop
 800399e:	370c      	adds	r7, #12
 80039a0:	46bd      	mov	sp, r7
 80039a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039a6:	4770      	bx	lr
 80039a8:	e000e100 	.word	0xe000e100
 80039ac:	e000ed00 	.word	0xe000ed00

080039b0 <NVIC_EncodePriority>:
 80039b0:	b480      	push	{r7}
 80039b2:	b089      	sub	sp, #36	@ 0x24
 80039b4:	af00      	add	r7, sp, #0
 80039b6:	60f8      	str	r0, [r7, #12]
 80039b8:	60b9      	str	r1, [r7, #8]
 80039ba:	607a      	str	r2, [r7, #4]
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	f003 0307 	and.w	r3, r3, #7
 80039c2:	61fb      	str	r3, [r7, #28]
 80039c4:	69fb      	ldr	r3, [r7, #28]
 80039c6:	f1c3 0307 	rsb	r3, r3, #7
 80039ca:	2b04      	cmp	r3, #4
 80039cc:	bf28      	it	cs
 80039ce:	2304      	movcs	r3, #4
 80039d0:	61bb      	str	r3, [r7, #24]
 80039d2:	69fb      	ldr	r3, [r7, #28]
 80039d4:	3304      	adds	r3, #4
 80039d6:	2b06      	cmp	r3, #6
 80039d8:	d902      	bls.n	80039e0 <NVIC_EncodePriority+0x30>
 80039da:	69fb      	ldr	r3, [r7, #28]
 80039dc:	3b03      	subs	r3, #3
 80039de:	e000      	b.n	80039e2 <NVIC_EncodePriority+0x32>
 80039e0:	2300      	movs	r3, #0
 80039e2:	617b      	str	r3, [r7, #20]
 80039e4:	f04f 32ff 	mov.w	r2, #4294967295
 80039e8:	69bb      	ldr	r3, [r7, #24]
 80039ea:	fa02 f303 	lsl.w	r3, r2, r3
 80039ee:	43da      	mvns	r2, r3
 80039f0:	68bb      	ldr	r3, [r7, #8]
 80039f2:	401a      	ands	r2, r3
 80039f4:	697b      	ldr	r3, [r7, #20]
 80039f6:	409a      	lsls	r2, r3
 80039f8:	f04f 31ff 	mov.w	r1, #4294967295
 80039fc:	697b      	ldr	r3, [r7, #20]
 80039fe:	fa01 f303 	lsl.w	r3, r1, r3
 8003a02:	43d9      	mvns	r1, r3
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	400b      	ands	r3, r1
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	4618      	mov	r0, r3
 8003a0c:	3724      	adds	r7, #36	@ 0x24
 8003a0e:	46bd      	mov	sp, r7
 8003a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a14:	4770      	bx	lr

08003a16 <HAL_NVIC_SetPriorityGrouping>:
 8003a16:	b580      	push	{r7, lr}
 8003a18:	b082      	sub	sp, #8
 8003a1a:	af00      	add	r7, sp, #0
 8003a1c:	6078      	str	r0, [r7, #4]
 8003a1e:	6878      	ldr	r0, [r7, #4]
 8003a20:	f7ff ff4c 	bl	80038bc <__NVIC_SetPriorityGrouping>
 8003a24:	bf00      	nop
 8003a26:	3708      	adds	r7, #8
 8003a28:	46bd      	mov	sp, r7
 8003a2a:	bd80      	pop	{r7, pc}

08003a2c <HAL_NVIC_SetPriority>:
 8003a2c:	b580      	push	{r7, lr}
 8003a2e:	b086      	sub	sp, #24
 8003a30:	af00      	add	r7, sp, #0
 8003a32:	4603      	mov	r3, r0
 8003a34:	60b9      	str	r1, [r7, #8]
 8003a36:	607a      	str	r2, [r7, #4]
 8003a38:	81fb      	strh	r3, [r7, #14]
 8003a3a:	f7ff ff63 	bl	8003904 <__NVIC_GetPriorityGrouping>
 8003a3e:	6178      	str	r0, [r7, #20]
 8003a40:	687a      	ldr	r2, [r7, #4]
 8003a42:	68b9      	ldr	r1, [r7, #8]
 8003a44:	6978      	ldr	r0, [r7, #20]
 8003a46:	f7ff ffb3 	bl	80039b0 <NVIC_EncodePriority>
 8003a4a:	4602      	mov	r2, r0
 8003a4c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8003a50:	4611      	mov	r1, r2
 8003a52:	4618      	mov	r0, r3
 8003a54:	f7ff ff82 	bl	800395c <__NVIC_SetPriority>
 8003a58:	bf00      	nop
 8003a5a:	3718      	adds	r7, #24
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bd80      	pop	{r7, pc}

08003a60 <HAL_NVIC_EnableIRQ>:
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b082      	sub	sp, #8
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	4603      	mov	r3, r0
 8003a68:	80fb      	strh	r3, [r7, #6]
 8003a6a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003a6e:	4618      	mov	r0, r3
 8003a70:	f7ff ff56 	bl	8003920 <__NVIC_EnableIRQ>
 8003a74:	bf00      	nop
 8003a76:	3708      	adds	r7, #8
 8003a78:	46bd      	mov	sp, r7
 8003a7a:	bd80      	pop	{r7, pc}

08003a7c <HAL_MPU_Disable>:
 8003a7c:	b480      	push	{r7}
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	f3bf 8f5f 	dmb	sy
 8003a84:	bf00      	nop
 8003a86:	4b07      	ldr	r3, [pc, #28]	@ (8003aa4 <HAL_MPU_Disable+0x28>)
 8003a88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a8a:	4a06      	ldr	r2, [pc, #24]	@ (8003aa4 <HAL_MPU_Disable+0x28>)
 8003a8c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8003a90:	6253      	str	r3, [r2, #36]	@ 0x24
 8003a92:	4b05      	ldr	r3, [pc, #20]	@ (8003aa8 <HAL_MPU_Disable+0x2c>)
 8003a94:	2200      	movs	r2, #0
 8003a96:	605a      	str	r2, [r3, #4]
 8003a98:	bf00      	nop
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aa0:	4770      	bx	lr
 8003aa2:	bf00      	nop
 8003aa4:	e000ed00 	.word	0xe000ed00
 8003aa8:	e000ed90 	.word	0xe000ed90

08003aac <HAL_MPU_Enable>:
 8003aac:	b480      	push	{r7}
 8003aae:	b083      	sub	sp, #12
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	6078      	str	r0, [r7, #4]
 8003ab4:	4a0b      	ldr	r2, [pc, #44]	@ (8003ae4 <HAL_MPU_Enable+0x38>)
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	f043 0301 	orr.w	r3, r3, #1
 8003abc:	6053      	str	r3, [r2, #4]
 8003abe:	4b0a      	ldr	r3, [pc, #40]	@ (8003ae8 <HAL_MPU_Enable+0x3c>)
 8003ac0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ac2:	4a09      	ldr	r2, [pc, #36]	@ (8003ae8 <HAL_MPU_Enable+0x3c>)
 8003ac4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003ac8:	6253      	str	r3, [r2, #36]	@ 0x24
 8003aca:	f3bf 8f4f 	dsb	sy
 8003ace:	bf00      	nop
 8003ad0:	f3bf 8f6f 	isb	sy
 8003ad4:	bf00      	nop
 8003ad6:	bf00      	nop
 8003ad8:	370c      	adds	r7, #12
 8003ada:	46bd      	mov	sp, r7
 8003adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae0:	4770      	bx	lr
 8003ae2:	bf00      	nop
 8003ae4:	e000ed90 	.word	0xe000ed90
 8003ae8:	e000ed00 	.word	0xe000ed00

08003aec <HAL_MPU_ConfigRegion>:
 8003aec:	b480      	push	{r7}
 8003aee:	b083      	sub	sp, #12
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	6078      	str	r0, [r7, #4]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	785a      	ldrb	r2, [r3, #1]
 8003af8:	4b1b      	ldr	r3, [pc, #108]	@ (8003b68 <HAL_MPU_ConfigRegion+0x7c>)
 8003afa:	609a      	str	r2, [r3, #8]
 8003afc:	4b1a      	ldr	r3, [pc, #104]	@ (8003b68 <HAL_MPU_ConfigRegion+0x7c>)
 8003afe:	691b      	ldr	r3, [r3, #16]
 8003b00:	4a19      	ldr	r2, [pc, #100]	@ (8003b68 <HAL_MPU_ConfigRegion+0x7c>)
 8003b02:	f023 0301 	bic.w	r3, r3, #1
 8003b06:	6113      	str	r3, [r2, #16]
 8003b08:	4a17      	ldr	r2, [pc, #92]	@ (8003b68 <HAL_MPU_ConfigRegion+0x7c>)
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	685b      	ldr	r3, [r3, #4]
 8003b0e:	60d3      	str	r3, [r2, #12]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	7b1b      	ldrb	r3, [r3, #12]
 8003b14:	071a      	lsls	r2, r3, #28
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	7adb      	ldrb	r3, [r3, #11]
 8003b1a:	061b      	lsls	r3, r3, #24
 8003b1c:	431a      	orrs	r2, r3
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	7a9b      	ldrb	r3, [r3, #10]
 8003b22:	04db      	lsls	r3, r3, #19
 8003b24:	431a      	orrs	r2, r3
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	7b5b      	ldrb	r3, [r3, #13]
 8003b2a:	049b      	lsls	r3, r3, #18
 8003b2c:	431a      	orrs	r2, r3
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	7b9b      	ldrb	r3, [r3, #14]
 8003b32:	045b      	lsls	r3, r3, #17
 8003b34:	431a      	orrs	r2, r3
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	7bdb      	ldrb	r3, [r3, #15]
 8003b3a:	041b      	lsls	r3, r3, #16
 8003b3c:	431a      	orrs	r2, r3
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	7a5b      	ldrb	r3, [r3, #9]
 8003b42:	021b      	lsls	r3, r3, #8
 8003b44:	431a      	orrs	r2, r3
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	7a1b      	ldrb	r3, [r3, #8]
 8003b4a:	005b      	lsls	r3, r3, #1
 8003b4c:	4313      	orrs	r3, r2
 8003b4e:	687a      	ldr	r2, [r7, #4]
 8003b50:	7812      	ldrb	r2, [r2, #0]
 8003b52:	4611      	mov	r1, r2
 8003b54:	4a04      	ldr	r2, [pc, #16]	@ (8003b68 <HAL_MPU_ConfigRegion+0x7c>)
 8003b56:	430b      	orrs	r3, r1
 8003b58:	6113      	str	r3, [r2, #16]
 8003b5a:	bf00      	nop
 8003b5c:	370c      	adds	r7, #12
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b64:	4770      	bx	lr
 8003b66:	bf00      	nop
 8003b68:	e000ed90 	.word	0xe000ed90

08003b6c <HAL_GPIO_Init>:
 8003b6c:	b480      	push	{r7}
 8003b6e:	b089      	sub	sp, #36	@ 0x24
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	6078      	str	r0, [r7, #4]
 8003b74:	6039      	str	r1, [r7, #0]
 8003b76:	2300      	movs	r3, #0
 8003b78:	61fb      	str	r3, [r7, #28]
 8003b7a:	4b89      	ldr	r3, [pc, #548]	@ (8003da0 <HAL_GPIO_Init+0x234>)
 8003b7c:	617b      	str	r3, [r7, #20]
 8003b7e:	e194      	b.n	8003eaa <HAL_GPIO_Init+0x33e>
 8003b80:	683b      	ldr	r3, [r7, #0]
 8003b82:	681a      	ldr	r2, [r3, #0]
 8003b84:	2101      	movs	r1, #1
 8003b86:	69fb      	ldr	r3, [r7, #28]
 8003b88:	fa01 f303 	lsl.w	r3, r1, r3
 8003b8c:	4013      	ands	r3, r2
 8003b8e:	613b      	str	r3, [r7, #16]
 8003b90:	693b      	ldr	r3, [r7, #16]
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	f000 8186 	beq.w	8003ea4 <HAL_GPIO_Init+0x338>
 8003b98:	683b      	ldr	r3, [r7, #0]
 8003b9a:	685b      	ldr	r3, [r3, #4]
 8003b9c:	f003 0303 	and.w	r3, r3, #3
 8003ba0:	2b01      	cmp	r3, #1
 8003ba2:	d005      	beq.n	8003bb0 <HAL_GPIO_Init+0x44>
 8003ba4:	683b      	ldr	r3, [r7, #0]
 8003ba6:	685b      	ldr	r3, [r3, #4]
 8003ba8:	f003 0303 	and.w	r3, r3, #3
 8003bac:	2b02      	cmp	r3, #2
 8003bae:	d130      	bne.n	8003c12 <HAL_GPIO_Init+0xa6>
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	689b      	ldr	r3, [r3, #8]
 8003bb4:	61bb      	str	r3, [r7, #24]
 8003bb6:	69fb      	ldr	r3, [r7, #28]
 8003bb8:	005b      	lsls	r3, r3, #1
 8003bba:	2203      	movs	r2, #3
 8003bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8003bc0:	43db      	mvns	r3, r3
 8003bc2:	69ba      	ldr	r2, [r7, #24]
 8003bc4:	4013      	ands	r3, r2
 8003bc6:	61bb      	str	r3, [r7, #24]
 8003bc8:	683b      	ldr	r3, [r7, #0]
 8003bca:	68da      	ldr	r2, [r3, #12]
 8003bcc:	69fb      	ldr	r3, [r7, #28]
 8003bce:	005b      	lsls	r3, r3, #1
 8003bd0:	fa02 f303 	lsl.w	r3, r2, r3
 8003bd4:	69ba      	ldr	r2, [r7, #24]
 8003bd6:	4313      	orrs	r3, r2
 8003bd8:	61bb      	str	r3, [r7, #24]
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	69ba      	ldr	r2, [r7, #24]
 8003bde:	609a      	str	r2, [r3, #8]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	685b      	ldr	r3, [r3, #4]
 8003be4:	61bb      	str	r3, [r7, #24]
 8003be6:	2201      	movs	r2, #1
 8003be8:	69fb      	ldr	r3, [r7, #28]
 8003bea:	fa02 f303 	lsl.w	r3, r2, r3
 8003bee:	43db      	mvns	r3, r3
 8003bf0:	69ba      	ldr	r2, [r7, #24]
 8003bf2:	4013      	ands	r3, r2
 8003bf4:	61bb      	str	r3, [r7, #24]
 8003bf6:	683b      	ldr	r3, [r7, #0]
 8003bf8:	685b      	ldr	r3, [r3, #4]
 8003bfa:	091b      	lsrs	r3, r3, #4
 8003bfc:	f003 0201 	and.w	r2, r3, #1
 8003c00:	69fb      	ldr	r3, [r7, #28]
 8003c02:	fa02 f303 	lsl.w	r3, r2, r3
 8003c06:	69ba      	ldr	r2, [r7, #24]
 8003c08:	4313      	orrs	r3, r2
 8003c0a:	61bb      	str	r3, [r7, #24]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	69ba      	ldr	r2, [r7, #24]
 8003c10:	605a      	str	r2, [r3, #4]
 8003c12:	683b      	ldr	r3, [r7, #0]
 8003c14:	685b      	ldr	r3, [r3, #4]
 8003c16:	f003 0303 	and.w	r3, r3, #3
 8003c1a:	2b03      	cmp	r3, #3
 8003c1c:	d017      	beq.n	8003c4e <HAL_GPIO_Init+0xe2>
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	68db      	ldr	r3, [r3, #12]
 8003c22:	61bb      	str	r3, [r7, #24]
 8003c24:	69fb      	ldr	r3, [r7, #28]
 8003c26:	005b      	lsls	r3, r3, #1
 8003c28:	2203      	movs	r2, #3
 8003c2a:	fa02 f303 	lsl.w	r3, r2, r3
 8003c2e:	43db      	mvns	r3, r3
 8003c30:	69ba      	ldr	r2, [r7, #24]
 8003c32:	4013      	ands	r3, r2
 8003c34:	61bb      	str	r3, [r7, #24]
 8003c36:	683b      	ldr	r3, [r7, #0]
 8003c38:	689a      	ldr	r2, [r3, #8]
 8003c3a:	69fb      	ldr	r3, [r7, #28]
 8003c3c:	005b      	lsls	r3, r3, #1
 8003c3e:	fa02 f303 	lsl.w	r3, r2, r3
 8003c42:	69ba      	ldr	r2, [r7, #24]
 8003c44:	4313      	orrs	r3, r2
 8003c46:	61bb      	str	r3, [r7, #24]
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	69ba      	ldr	r2, [r7, #24]
 8003c4c:	60da      	str	r2, [r3, #12]
 8003c4e:	683b      	ldr	r3, [r7, #0]
 8003c50:	685b      	ldr	r3, [r3, #4]
 8003c52:	f003 0303 	and.w	r3, r3, #3
 8003c56:	2b02      	cmp	r3, #2
 8003c58:	d123      	bne.n	8003ca2 <HAL_GPIO_Init+0x136>
 8003c5a:	69fb      	ldr	r3, [r7, #28]
 8003c5c:	08da      	lsrs	r2, r3, #3
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	3208      	adds	r2, #8
 8003c62:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003c66:	61bb      	str	r3, [r7, #24]
 8003c68:	69fb      	ldr	r3, [r7, #28]
 8003c6a:	f003 0307 	and.w	r3, r3, #7
 8003c6e:	009b      	lsls	r3, r3, #2
 8003c70:	220f      	movs	r2, #15
 8003c72:	fa02 f303 	lsl.w	r3, r2, r3
 8003c76:	43db      	mvns	r3, r3
 8003c78:	69ba      	ldr	r2, [r7, #24]
 8003c7a:	4013      	ands	r3, r2
 8003c7c:	61bb      	str	r3, [r7, #24]
 8003c7e:	683b      	ldr	r3, [r7, #0]
 8003c80:	691a      	ldr	r2, [r3, #16]
 8003c82:	69fb      	ldr	r3, [r7, #28]
 8003c84:	f003 0307 	and.w	r3, r3, #7
 8003c88:	009b      	lsls	r3, r3, #2
 8003c8a:	fa02 f303 	lsl.w	r3, r2, r3
 8003c8e:	69ba      	ldr	r2, [r7, #24]
 8003c90:	4313      	orrs	r3, r2
 8003c92:	61bb      	str	r3, [r7, #24]
 8003c94:	69fb      	ldr	r3, [r7, #28]
 8003c96:	08da      	lsrs	r2, r3, #3
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	3208      	adds	r2, #8
 8003c9c:	69b9      	ldr	r1, [r7, #24]
 8003c9e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	61bb      	str	r3, [r7, #24]
 8003ca8:	69fb      	ldr	r3, [r7, #28]
 8003caa:	005b      	lsls	r3, r3, #1
 8003cac:	2203      	movs	r2, #3
 8003cae:	fa02 f303 	lsl.w	r3, r2, r3
 8003cb2:	43db      	mvns	r3, r3
 8003cb4:	69ba      	ldr	r2, [r7, #24]
 8003cb6:	4013      	ands	r3, r2
 8003cb8:	61bb      	str	r3, [r7, #24]
 8003cba:	683b      	ldr	r3, [r7, #0]
 8003cbc:	685b      	ldr	r3, [r3, #4]
 8003cbe:	f003 0203 	and.w	r2, r3, #3
 8003cc2:	69fb      	ldr	r3, [r7, #28]
 8003cc4:	005b      	lsls	r3, r3, #1
 8003cc6:	fa02 f303 	lsl.w	r3, r2, r3
 8003cca:	69ba      	ldr	r2, [r7, #24]
 8003ccc:	4313      	orrs	r3, r2
 8003cce:	61bb      	str	r3, [r7, #24]
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	69ba      	ldr	r2, [r7, #24]
 8003cd4:	601a      	str	r2, [r3, #0]
 8003cd6:	683b      	ldr	r3, [r7, #0]
 8003cd8:	685b      	ldr	r3, [r3, #4]
 8003cda:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003cde:	2b00      	cmp	r3, #0
 8003ce0:	f000 80e0 	beq.w	8003ea4 <HAL_GPIO_Init+0x338>
 8003ce4:	4b2f      	ldr	r3, [pc, #188]	@ (8003da4 <HAL_GPIO_Init+0x238>)
 8003ce6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003cea:	4a2e      	ldr	r2, [pc, #184]	@ (8003da4 <HAL_GPIO_Init+0x238>)
 8003cec:	f043 0302 	orr.w	r3, r3, #2
 8003cf0:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8003cf4:	4b2b      	ldr	r3, [pc, #172]	@ (8003da4 <HAL_GPIO_Init+0x238>)
 8003cf6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003cfa:	f003 0302 	and.w	r3, r3, #2
 8003cfe:	60fb      	str	r3, [r7, #12]
 8003d00:	68fb      	ldr	r3, [r7, #12]
 8003d02:	4a29      	ldr	r2, [pc, #164]	@ (8003da8 <HAL_GPIO_Init+0x23c>)
 8003d04:	69fb      	ldr	r3, [r7, #28]
 8003d06:	089b      	lsrs	r3, r3, #2
 8003d08:	3302      	adds	r3, #2
 8003d0a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003d0e:	61bb      	str	r3, [r7, #24]
 8003d10:	69fb      	ldr	r3, [r7, #28]
 8003d12:	f003 0303 	and.w	r3, r3, #3
 8003d16:	009b      	lsls	r3, r3, #2
 8003d18:	220f      	movs	r2, #15
 8003d1a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d1e:	43db      	mvns	r3, r3
 8003d20:	69ba      	ldr	r2, [r7, #24]
 8003d22:	4013      	ands	r3, r2
 8003d24:	61bb      	str	r3, [r7, #24]
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	4a20      	ldr	r2, [pc, #128]	@ (8003dac <HAL_GPIO_Init+0x240>)
 8003d2a:	4293      	cmp	r3, r2
 8003d2c:	d052      	beq.n	8003dd4 <HAL_GPIO_Init+0x268>
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	4a1f      	ldr	r2, [pc, #124]	@ (8003db0 <HAL_GPIO_Init+0x244>)
 8003d32:	4293      	cmp	r3, r2
 8003d34:	d031      	beq.n	8003d9a <HAL_GPIO_Init+0x22e>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	4a1e      	ldr	r2, [pc, #120]	@ (8003db4 <HAL_GPIO_Init+0x248>)
 8003d3a:	4293      	cmp	r3, r2
 8003d3c:	d02b      	beq.n	8003d96 <HAL_GPIO_Init+0x22a>
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	4a1d      	ldr	r2, [pc, #116]	@ (8003db8 <HAL_GPIO_Init+0x24c>)
 8003d42:	4293      	cmp	r3, r2
 8003d44:	d025      	beq.n	8003d92 <HAL_GPIO_Init+0x226>
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	4a1c      	ldr	r2, [pc, #112]	@ (8003dbc <HAL_GPIO_Init+0x250>)
 8003d4a:	4293      	cmp	r3, r2
 8003d4c:	d01f      	beq.n	8003d8e <HAL_GPIO_Init+0x222>
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	4a1b      	ldr	r2, [pc, #108]	@ (8003dc0 <HAL_GPIO_Init+0x254>)
 8003d52:	4293      	cmp	r3, r2
 8003d54:	d019      	beq.n	8003d8a <HAL_GPIO_Init+0x21e>
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	4a1a      	ldr	r2, [pc, #104]	@ (8003dc4 <HAL_GPIO_Init+0x258>)
 8003d5a:	4293      	cmp	r3, r2
 8003d5c:	d013      	beq.n	8003d86 <HAL_GPIO_Init+0x21a>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	4a19      	ldr	r2, [pc, #100]	@ (8003dc8 <HAL_GPIO_Init+0x25c>)
 8003d62:	4293      	cmp	r3, r2
 8003d64:	d00d      	beq.n	8003d82 <HAL_GPIO_Init+0x216>
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	4a18      	ldr	r2, [pc, #96]	@ (8003dcc <HAL_GPIO_Init+0x260>)
 8003d6a:	4293      	cmp	r3, r2
 8003d6c:	d007      	beq.n	8003d7e <HAL_GPIO_Init+0x212>
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	4a17      	ldr	r2, [pc, #92]	@ (8003dd0 <HAL_GPIO_Init+0x264>)
 8003d72:	4293      	cmp	r3, r2
 8003d74:	d101      	bne.n	8003d7a <HAL_GPIO_Init+0x20e>
 8003d76:	2309      	movs	r3, #9
 8003d78:	e02d      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d7a:	230a      	movs	r3, #10
 8003d7c:	e02b      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d7e:	2308      	movs	r3, #8
 8003d80:	e029      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d82:	2307      	movs	r3, #7
 8003d84:	e027      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d86:	2306      	movs	r3, #6
 8003d88:	e025      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d8a:	2305      	movs	r3, #5
 8003d8c:	e023      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d8e:	2304      	movs	r3, #4
 8003d90:	e021      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d92:	2303      	movs	r3, #3
 8003d94:	e01f      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d96:	2302      	movs	r3, #2
 8003d98:	e01d      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d9a:	2301      	movs	r3, #1
 8003d9c:	e01b      	b.n	8003dd6 <HAL_GPIO_Init+0x26a>
 8003d9e:	bf00      	nop
 8003da0:	58000080 	.word	0x58000080
 8003da4:	58024400 	.word	0x58024400
 8003da8:	58000400 	.word	0x58000400
 8003dac:	58020000 	.word	0x58020000
 8003db0:	58020400 	.word	0x58020400
 8003db4:	58020800 	.word	0x58020800
 8003db8:	58020c00 	.word	0x58020c00
 8003dbc:	58021000 	.word	0x58021000
 8003dc0:	58021400 	.word	0x58021400
 8003dc4:	58021800 	.word	0x58021800
 8003dc8:	58021c00 	.word	0x58021c00
 8003dcc:	58022000 	.word	0x58022000
 8003dd0:	58022400 	.word	0x58022400
 8003dd4:	2300      	movs	r3, #0
 8003dd6:	69fa      	ldr	r2, [r7, #28]
 8003dd8:	f002 0203 	and.w	r2, r2, #3
 8003ddc:	0092      	lsls	r2, r2, #2
 8003dde:	4093      	lsls	r3, r2
 8003de0:	69ba      	ldr	r2, [r7, #24]
 8003de2:	4313      	orrs	r3, r2
 8003de4:	61bb      	str	r3, [r7, #24]
 8003de6:	4938      	ldr	r1, [pc, #224]	@ (8003ec8 <HAL_GPIO_Init+0x35c>)
 8003de8:	69fb      	ldr	r3, [r7, #28]
 8003dea:	089b      	lsrs	r3, r3, #2
 8003dec:	3302      	adds	r3, #2
 8003dee:	69ba      	ldr	r2, [r7, #24]
 8003df0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003df4:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	61bb      	str	r3, [r7, #24]
 8003dfc:	693b      	ldr	r3, [r7, #16]
 8003dfe:	43db      	mvns	r3, r3
 8003e00:	69ba      	ldr	r2, [r7, #24]
 8003e02:	4013      	ands	r3, r2
 8003e04:	61bb      	str	r3, [r7, #24]
 8003e06:	683b      	ldr	r3, [r7, #0]
 8003e08:	685b      	ldr	r3, [r3, #4]
 8003e0a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d003      	beq.n	8003e1a <HAL_GPIO_Init+0x2ae>
 8003e12:	69ba      	ldr	r2, [r7, #24]
 8003e14:	693b      	ldr	r3, [r7, #16]
 8003e16:	4313      	orrs	r3, r2
 8003e18:	61bb      	str	r3, [r7, #24]
 8003e1a:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003e1e:	69bb      	ldr	r3, [r7, #24]
 8003e20:	6013      	str	r3, [r2, #0]
 8003e22:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003e26:	685b      	ldr	r3, [r3, #4]
 8003e28:	61bb      	str	r3, [r7, #24]
 8003e2a:	693b      	ldr	r3, [r7, #16]
 8003e2c:	43db      	mvns	r3, r3
 8003e2e:	69ba      	ldr	r2, [r7, #24]
 8003e30:	4013      	ands	r3, r2
 8003e32:	61bb      	str	r3, [r7, #24]
 8003e34:	683b      	ldr	r3, [r7, #0]
 8003e36:	685b      	ldr	r3, [r3, #4]
 8003e38:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d003      	beq.n	8003e48 <HAL_GPIO_Init+0x2dc>
 8003e40:	69ba      	ldr	r2, [r7, #24]
 8003e42:	693b      	ldr	r3, [r7, #16]
 8003e44:	4313      	orrs	r3, r2
 8003e46:	61bb      	str	r3, [r7, #24]
 8003e48:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003e4c:	69bb      	ldr	r3, [r7, #24]
 8003e4e:	6053      	str	r3, [r2, #4]
 8003e50:	697b      	ldr	r3, [r7, #20]
 8003e52:	685b      	ldr	r3, [r3, #4]
 8003e54:	61bb      	str	r3, [r7, #24]
 8003e56:	693b      	ldr	r3, [r7, #16]
 8003e58:	43db      	mvns	r3, r3
 8003e5a:	69ba      	ldr	r2, [r7, #24]
 8003e5c:	4013      	ands	r3, r2
 8003e5e:	61bb      	str	r3, [r7, #24]
 8003e60:	683b      	ldr	r3, [r7, #0]
 8003e62:	685b      	ldr	r3, [r3, #4]
 8003e64:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003e68:	2b00      	cmp	r3, #0
 8003e6a:	d003      	beq.n	8003e74 <HAL_GPIO_Init+0x308>
 8003e6c:	69ba      	ldr	r2, [r7, #24]
 8003e6e:	693b      	ldr	r3, [r7, #16]
 8003e70:	4313      	orrs	r3, r2
 8003e72:	61bb      	str	r3, [r7, #24]
 8003e74:	697b      	ldr	r3, [r7, #20]
 8003e76:	69ba      	ldr	r2, [r7, #24]
 8003e78:	605a      	str	r2, [r3, #4]
 8003e7a:	697b      	ldr	r3, [r7, #20]
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	61bb      	str	r3, [r7, #24]
 8003e80:	693b      	ldr	r3, [r7, #16]
 8003e82:	43db      	mvns	r3, r3
 8003e84:	69ba      	ldr	r2, [r7, #24]
 8003e86:	4013      	ands	r3, r2
 8003e88:	61bb      	str	r3, [r7, #24]
 8003e8a:	683b      	ldr	r3, [r7, #0]
 8003e8c:	685b      	ldr	r3, [r3, #4]
 8003e8e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d003      	beq.n	8003e9e <HAL_GPIO_Init+0x332>
 8003e96:	69ba      	ldr	r2, [r7, #24]
 8003e98:	693b      	ldr	r3, [r7, #16]
 8003e9a:	4313      	orrs	r3, r2
 8003e9c:	61bb      	str	r3, [r7, #24]
 8003e9e:	697b      	ldr	r3, [r7, #20]
 8003ea0:	69ba      	ldr	r2, [r7, #24]
 8003ea2:	601a      	str	r2, [r3, #0]
 8003ea4:	69fb      	ldr	r3, [r7, #28]
 8003ea6:	3301      	adds	r3, #1
 8003ea8:	61fb      	str	r3, [r7, #28]
 8003eaa:	683b      	ldr	r3, [r7, #0]
 8003eac:	681a      	ldr	r2, [r3, #0]
 8003eae:	69fb      	ldr	r3, [r7, #28]
 8003eb0:	fa22 f303 	lsr.w	r3, r2, r3
 8003eb4:	2b00      	cmp	r3, #0
 8003eb6:	f47f ae63 	bne.w	8003b80 <HAL_GPIO_Init+0x14>
 8003eba:	bf00      	nop
 8003ebc:	bf00      	nop
 8003ebe:	3724      	adds	r7, #36	@ 0x24
 8003ec0:	46bd      	mov	sp, r7
 8003ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec6:	4770      	bx	lr
 8003ec8:	58000400 	.word	0x58000400

08003ecc <HAL_GPIO_WritePin>:
 8003ecc:	b480      	push	{r7}
 8003ece:	b083      	sub	sp, #12
 8003ed0:	af00      	add	r7, sp, #0
 8003ed2:	6078      	str	r0, [r7, #4]
 8003ed4:	460b      	mov	r3, r1
 8003ed6:	807b      	strh	r3, [r7, #2]
 8003ed8:	4613      	mov	r3, r2
 8003eda:	707b      	strb	r3, [r7, #1]
 8003edc:	787b      	ldrb	r3, [r7, #1]
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d003      	beq.n	8003eea <HAL_GPIO_WritePin+0x1e>
 8003ee2:	887a      	ldrh	r2, [r7, #2]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	619a      	str	r2, [r3, #24]
 8003ee8:	e003      	b.n	8003ef2 <HAL_GPIO_WritePin+0x26>
 8003eea:	887b      	ldrh	r3, [r7, #2]
 8003eec:	041a      	lsls	r2, r3, #16
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	619a      	str	r2, [r3, #24]
 8003ef2:	bf00      	nop
 8003ef4:	370c      	adds	r7, #12
 8003ef6:	46bd      	mov	sp, r7
 8003ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efc:	4770      	bx	lr
	...

08003f00 <HAL_PWREx_ConfigSupply>:
 8003f00:	b580      	push	{r7, lr}
 8003f02:	b084      	sub	sp, #16
 8003f04:	af00      	add	r7, sp, #0
 8003f06:	6078      	str	r0, [r7, #4]
 8003f08:	4b19      	ldr	r3, [pc, #100]	@ (8003f70 <HAL_PWREx_ConfigSupply+0x70>)
 8003f0a:	68db      	ldr	r3, [r3, #12]
 8003f0c:	f003 0304 	and.w	r3, r3, #4
 8003f10:	2b04      	cmp	r3, #4
 8003f12:	d00a      	beq.n	8003f2a <HAL_PWREx_ConfigSupply+0x2a>
 8003f14:	4b16      	ldr	r3, [pc, #88]	@ (8003f70 <HAL_PWREx_ConfigSupply+0x70>)
 8003f16:	68db      	ldr	r3, [r3, #12]
 8003f18:	f003 0307 	and.w	r3, r3, #7
 8003f1c:	687a      	ldr	r2, [r7, #4]
 8003f1e:	429a      	cmp	r2, r3
 8003f20:	d001      	beq.n	8003f26 <HAL_PWREx_ConfigSupply+0x26>
 8003f22:	2301      	movs	r3, #1
 8003f24:	e01f      	b.n	8003f66 <HAL_PWREx_ConfigSupply+0x66>
 8003f26:	2300      	movs	r3, #0
 8003f28:	e01d      	b.n	8003f66 <HAL_PWREx_ConfigSupply+0x66>
 8003f2a:	4b11      	ldr	r3, [pc, #68]	@ (8003f70 <HAL_PWREx_ConfigSupply+0x70>)
 8003f2c:	68db      	ldr	r3, [r3, #12]
 8003f2e:	f023 0207 	bic.w	r2, r3, #7
 8003f32:	490f      	ldr	r1, [pc, #60]	@ (8003f70 <HAL_PWREx_ConfigSupply+0x70>)
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	4313      	orrs	r3, r2
 8003f38:	60cb      	str	r3, [r1, #12]
 8003f3a:	f7fd fff9 	bl	8001f30 <HAL_GetTick>
 8003f3e:	60f8      	str	r0, [r7, #12]
 8003f40:	e009      	b.n	8003f56 <HAL_PWREx_ConfigSupply+0x56>
 8003f42:	f7fd fff5 	bl	8001f30 <HAL_GetTick>
 8003f46:	4602      	mov	r2, r0
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	1ad3      	subs	r3, r2, r3
 8003f4c:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8003f50:	d901      	bls.n	8003f56 <HAL_PWREx_ConfigSupply+0x56>
 8003f52:	2301      	movs	r3, #1
 8003f54:	e007      	b.n	8003f66 <HAL_PWREx_ConfigSupply+0x66>
 8003f56:	4b06      	ldr	r3, [pc, #24]	@ (8003f70 <HAL_PWREx_ConfigSupply+0x70>)
 8003f58:	685b      	ldr	r3, [r3, #4]
 8003f5a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8003f5e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003f62:	d1ee      	bne.n	8003f42 <HAL_PWREx_ConfigSupply+0x42>
 8003f64:	2300      	movs	r3, #0
 8003f66:	4618      	mov	r0, r3
 8003f68:	3710      	adds	r7, #16
 8003f6a:	46bd      	mov	sp, r7
 8003f6c:	bd80      	pop	{r7, pc}
 8003f6e:	bf00      	nop
 8003f70:	58024800 	.word	0x58024800

08003f74 <HAL_RCC_OscConfig>:
 8003f74:	b580      	push	{r7, lr}
 8003f76:	b08c      	sub	sp, #48	@ 0x30
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d102      	bne.n	8003f88 <HAL_RCC_OscConfig+0x14>
 8003f82:	2301      	movs	r3, #1
 8003f84:	f000 bc48 	b.w	8004818 <HAL_RCC_OscConfig+0x8a4>
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	f003 0301 	and.w	r3, r3, #1
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	f000 8088 	beq.w	80040a6 <HAL_RCC_OscConfig+0x132>
 8003f96:	4b99      	ldr	r3, [pc, #612]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003f98:	691b      	ldr	r3, [r3, #16]
 8003f9a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8003f9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003fa0:	4b96      	ldr	r3, [pc, #600]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003fa2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003fa4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003fa6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003fa8:	2b10      	cmp	r3, #16
 8003faa:	d007      	beq.n	8003fbc <HAL_RCC_OscConfig+0x48>
 8003fac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003fae:	2b18      	cmp	r3, #24
 8003fb0:	d111      	bne.n	8003fd6 <HAL_RCC_OscConfig+0x62>
 8003fb2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003fb4:	f003 0303 	and.w	r3, r3, #3
 8003fb8:	2b02      	cmp	r3, #2
 8003fba:	d10c      	bne.n	8003fd6 <HAL_RCC_OscConfig+0x62>
 8003fbc:	4b8f      	ldr	r3, [pc, #572]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	d06d      	beq.n	80040a4 <HAL_RCC_OscConfig+0x130>
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d169      	bne.n	80040a4 <HAL_RCC_OscConfig+0x130>
 8003fd0:	2301      	movs	r3, #1
 8003fd2:	f000 bc21 	b.w	8004818 <HAL_RCC_OscConfig+0x8a4>
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	685b      	ldr	r3, [r3, #4]
 8003fda:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003fde:	d106      	bne.n	8003fee <HAL_RCC_OscConfig+0x7a>
 8003fe0:	4b86      	ldr	r3, [pc, #536]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003fe2:	681b      	ldr	r3, [r3, #0]
 8003fe4:	4a85      	ldr	r2, [pc, #532]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003fe6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003fea:	6013      	str	r3, [r2, #0]
 8003fec:	e02e      	b.n	800404c <HAL_RCC_OscConfig+0xd8>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	685b      	ldr	r3, [r3, #4]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d10c      	bne.n	8004010 <HAL_RCC_OscConfig+0x9c>
 8003ff6:	4b81      	ldr	r3, [pc, #516]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	4a80      	ldr	r2, [pc, #512]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8003ffc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004000:	6013      	str	r3, [r2, #0]
 8004002:	4b7e      	ldr	r3, [pc, #504]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	4a7d      	ldr	r2, [pc, #500]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004008:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800400c:	6013      	str	r3, [r2, #0]
 800400e:	e01d      	b.n	800404c <HAL_RCC_OscConfig+0xd8>
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	685b      	ldr	r3, [r3, #4]
 8004014:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004018:	d10c      	bne.n	8004034 <HAL_RCC_OscConfig+0xc0>
 800401a:	4b78      	ldr	r3, [pc, #480]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	4a77      	ldr	r2, [pc, #476]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004020:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004024:	6013      	str	r3, [r2, #0]
 8004026:	4b75      	ldr	r3, [pc, #468]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	4a74      	ldr	r2, [pc, #464]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 800402c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004030:	6013      	str	r3, [r2, #0]
 8004032:	e00b      	b.n	800404c <HAL_RCC_OscConfig+0xd8>
 8004034:	4b71      	ldr	r3, [pc, #452]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004036:	681b      	ldr	r3, [r3, #0]
 8004038:	4a70      	ldr	r2, [pc, #448]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 800403a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800403e:	6013      	str	r3, [r2, #0]
 8004040:	4b6e      	ldr	r3, [pc, #440]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	4a6d      	ldr	r2, [pc, #436]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004046:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800404a:	6013      	str	r3, [r2, #0]
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	685b      	ldr	r3, [r3, #4]
 8004050:	2b00      	cmp	r3, #0
 8004052:	d013      	beq.n	800407c <HAL_RCC_OscConfig+0x108>
 8004054:	f7fd ff6c 	bl	8001f30 <HAL_GetTick>
 8004058:	6278      	str	r0, [r7, #36]	@ 0x24
 800405a:	e008      	b.n	800406e <HAL_RCC_OscConfig+0xfa>
 800405c:	f7fd ff68 	bl	8001f30 <HAL_GetTick>
 8004060:	4602      	mov	r2, r0
 8004062:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004064:	1ad3      	subs	r3, r2, r3
 8004066:	2b64      	cmp	r3, #100	@ 0x64
 8004068:	d901      	bls.n	800406e <HAL_RCC_OscConfig+0xfa>
 800406a:	2303      	movs	r3, #3
 800406c:	e3d4      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800406e:	4b63      	ldr	r3, [pc, #396]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004076:	2b00      	cmp	r3, #0
 8004078:	d0f0      	beq.n	800405c <HAL_RCC_OscConfig+0xe8>
 800407a:	e014      	b.n	80040a6 <HAL_RCC_OscConfig+0x132>
 800407c:	f7fd ff58 	bl	8001f30 <HAL_GetTick>
 8004080:	6278      	str	r0, [r7, #36]	@ 0x24
 8004082:	e008      	b.n	8004096 <HAL_RCC_OscConfig+0x122>
 8004084:	f7fd ff54 	bl	8001f30 <HAL_GetTick>
 8004088:	4602      	mov	r2, r0
 800408a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800408c:	1ad3      	subs	r3, r2, r3
 800408e:	2b64      	cmp	r3, #100	@ 0x64
 8004090:	d901      	bls.n	8004096 <HAL_RCC_OscConfig+0x122>
 8004092:	2303      	movs	r3, #3
 8004094:	e3c0      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004096:	4b59      	ldr	r3, [pc, #356]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800409e:	2b00      	cmp	r3, #0
 80040a0:	d1f0      	bne.n	8004084 <HAL_RCC_OscConfig+0x110>
 80040a2:	e000      	b.n	80040a6 <HAL_RCC_OscConfig+0x132>
 80040a4:	bf00      	nop
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	f003 0302 	and.w	r3, r3, #2
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	f000 80ca 	beq.w	8004248 <HAL_RCC_OscConfig+0x2d4>
 80040b4:	4b51      	ldr	r3, [pc, #324]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80040b6:	691b      	ldr	r3, [r3, #16]
 80040b8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80040bc:	623b      	str	r3, [r7, #32]
 80040be:	4b4f      	ldr	r3, [pc, #316]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80040c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80040c2:	61fb      	str	r3, [r7, #28]
 80040c4:	6a3b      	ldr	r3, [r7, #32]
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d007      	beq.n	80040da <HAL_RCC_OscConfig+0x166>
 80040ca:	6a3b      	ldr	r3, [r7, #32]
 80040cc:	2b18      	cmp	r3, #24
 80040ce:	d156      	bne.n	800417e <HAL_RCC_OscConfig+0x20a>
 80040d0:	69fb      	ldr	r3, [r7, #28]
 80040d2:	f003 0303 	and.w	r3, r3, #3
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d151      	bne.n	800417e <HAL_RCC_OscConfig+0x20a>
 80040da:	4b48      	ldr	r3, [pc, #288]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80040dc:	681b      	ldr	r3, [r3, #0]
 80040de:	f003 0304 	and.w	r3, r3, #4
 80040e2:	2b00      	cmp	r3, #0
 80040e4:	d005      	beq.n	80040f2 <HAL_RCC_OscConfig+0x17e>
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	68db      	ldr	r3, [r3, #12]
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d101      	bne.n	80040f2 <HAL_RCC_OscConfig+0x17e>
 80040ee:	2301      	movs	r3, #1
 80040f0:	e392      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80040f2:	4b42      	ldr	r3, [pc, #264]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	f023 0219 	bic.w	r2, r3, #25
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	68db      	ldr	r3, [r3, #12]
 80040fe:	493f      	ldr	r1, [pc, #252]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004100:	4313      	orrs	r3, r2
 8004102:	600b      	str	r3, [r1, #0]
 8004104:	f7fd ff14 	bl	8001f30 <HAL_GetTick>
 8004108:	6278      	str	r0, [r7, #36]	@ 0x24
 800410a:	e008      	b.n	800411e <HAL_RCC_OscConfig+0x1aa>
 800410c:	f7fd ff10 	bl	8001f30 <HAL_GetTick>
 8004110:	4602      	mov	r2, r0
 8004112:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004114:	1ad3      	subs	r3, r2, r3
 8004116:	2b02      	cmp	r3, #2
 8004118:	d901      	bls.n	800411e <HAL_RCC_OscConfig+0x1aa>
 800411a:	2303      	movs	r3, #3
 800411c:	e37c      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800411e:	4b37      	ldr	r3, [pc, #220]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	f003 0304 	and.w	r3, r3, #4
 8004126:	2b00      	cmp	r3, #0
 8004128:	d0f0      	beq.n	800410c <HAL_RCC_OscConfig+0x198>
 800412a:	f7fd ff0d 	bl	8001f48 <HAL_GetREVID>
 800412e:	4603      	mov	r3, r0
 8004130:	f241 0203 	movw	r2, #4099	@ 0x1003
 8004134:	4293      	cmp	r3, r2
 8004136:	d817      	bhi.n	8004168 <HAL_RCC_OscConfig+0x1f4>
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	691b      	ldr	r3, [r3, #16]
 800413c:	2b40      	cmp	r3, #64	@ 0x40
 800413e:	d108      	bne.n	8004152 <HAL_RCC_OscConfig+0x1de>
 8004140:	4b2e      	ldr	r3, [pc, #184]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004142:	685b      	ldr	r3, [r3, #4]
 8004144:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
 8004148:	4a2c      	ldr	r2, [pc, #176]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 800414a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800414e:	6053      	str	r3, [r2, #4]
 8004150:	e07a      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 8004152:	4b2a      	ldr	r3, [pc, #168]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004154:	685b      	ldr	r3, [r3, #4]
 8004156:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	691b      	ldr	r3, [r3, #16]
 800415e:	031b      	lsls	r3, r3, #12
 8004160:	4926      	ldr	r1, [pc, #152]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004162:	4313      	orrs	r3, r2
 8004164:	604b      	str	r3, [r1, #4]
 8004166:	e06f      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 8004168:	4b24      	ldr	r3, [pc, #144]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 800416a:	685b      	ldr	r3, [r3, #4]
 800416c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	691b      	ldr	r3, [r3, #16]
 8004174:	061b      	lsls	r3, r3, #24
 8004176:	4921      	ldr	r1, [pc, #132]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004178:	4313      	orrs	r3, r2
 800417a:	604b      	str	r3, [r1, #4]
 800417c:	e064      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	68db      	ldr	r3, [r3, #12]
 8004182:	2b00      	cmp	r3, #0
 8004184:	d047      	beq.n	8004216 <HAL_RCC_OscConfig+0x2a2>
 8004186:	4b1d      	ldr	r3, [pc, #116]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	f023 0219 	bic.w	r2, r3, #25
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	68db      	ldr	r3, [r3, #12]
 8004192:	491a      	ldr	r1, [pc, #104]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 8004194:	4313      	orrs	r3, r2
 8004196:	600b      	str	r3, [r1, #0]
 8004198:	f7fd feca 	bl	8001f30 <HAL_GetTick>
 800419c:	6278      	str	r0, [r7, #36]	@ 0x24
 800419e:	e008      	b.n	80041b2 <HAL_RCC_OscConfig+0x23e>
 80041a0:	f7fd fec6 	bl	8001f30 <HAL_GetTick>
 80041a4:	4602      	mov	r2, r0
 80041a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80041a8:	1ad3      	subs	r3, r2, r3
 80041aa:	2b02      	cmp	r3, #2
 80041ac:	d901      	bls.n	80041b2 <HAL_RCC_OscConfig+0x23e>
 80041ae:	2303      	movs	r3, #3
 80041b0:	e332      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80041b2:	4b12      	ldr	r3, [pc, #72]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	f003 0304 	and.w	r3, r3, #4
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d0f0      	beq.n	80041a0 <HAL_RCC_OscConfig+0x22c>
 80041be:	f7fd fec3 	bl	8001f48 <HAL_GetREVID>
 80041c2:	4603      	mov	r3, r0
 80041c4:	f241 0203 	movw	r2, #4099	@ 0x1003
 80041c8:	4293      	cmp	r3, r2
 80041ca:	d819      	bhi.n	8004200 <HAL_RCC_OscConfig+0x28c>
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	691b      	ldr	r3, [r3, #16]
 80041d0:	2b40      	cmp	r3, #64	@ 0x40
 80041d2:	d108      	bne.n	80041e6 <HAL_RCC_OscConfig+0x272>
 80041d4:	4b09      	ldr	r3, [pc, #36]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
 80041dc:	4a07      	ldr	r2, [pc, #28]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80041de:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80041e2:	6053      	str	r3, [r2, #4]
 80041e4:	e030      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 80041e6:	4b05      	ldr	r3, [pc, #20]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80041e8:	685b      	ldr	r3, [r3, #4]
 80041ea:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	691b      	ldr	r3, [r3, #16]
 80041f2:	031b      	lsls	r3, r3, #12
 80041f4:	4901      	ldr	r1, [pc, #4]	@ (80041fc <HAL_RCC_OscConfig+0x288>)
 80041f6:	4313      	orrs	r3, r2
 80041f8:	604b      	str	r3, [r1, #4]
 80041fa:	e025      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 80041fc:	58024400 	.word	0x58024400
 8004200:	4b9a      	ldr	r3, [pc, #616]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004202:	685b      	ldr	r3, [r3, #4]
 8004204:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	691b      	ldr	r3, [r3, #16]
 800420c:	061b      	lsls	r3, r3, #24
 800420e:	4997      	ldr	r1, [pc, #604]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004210:	4313      	orrs	r3, r2
 8004212:	604b      	str	r3, [r1, #4]
 8004214:	e018      	b.n	8004248 <HAL_RCC_OscConfig+0x2d4>
 8004216:	4b95      	ldr	r3, [pc, #596]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	4a94      	ldr	r2, [pc, #592]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800421c:	f023 0301 	bic.w	r3, r3, #1
 8004220:	6013      	str	r3, [r2, #0]
 8004222:	f7fd fe85 	bl	8001f30 <HAL_GetTick>
 8004226:	6278      	str	r0, [r7, #36]	@ 0x24
 8004228:	e008      	b.n	800423c <HAL_RCC_OscConfig+0x2c8>
 800422a:	f7fd fe81 	bl	8001f30 <HAL_GetTick>
 800422e:	4602      	mov	r2, r0
 8004230:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004232:	1ad3      	subs	r3, r2, r3
 8004234:	2b02      	cmp	r3, #2
 8004236:	d901      	bls.n	800423c <HAL_RCC_OscConfig+0x2c8>
 8004238:	2303      	movs	r3, #3
 800423a:	e2ed      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800423c:	4b8b      	ldr	r3, [pc, #556]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	f003 0304 	and.w	r3, r3, #4
 8004244:	2b00      	cmp	r3, #0
 8004246:	d1f0      	bne.n	800422a <HAL_RCC_OscConfig+0x2b6>
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	f003 0310 	and.w	r3, r3, #16
 8004250:	2b00      	cmp	r3, #0
 8004252:	f000 80a9 	beq.w	80043a8 <HAL_RCC_OscConfig+0x434>
 8004256:	4b85      	ldr	r3, [pc, #532]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004258:	691b      	ldr	r3, [r3, #16]
 800425a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800425e:	61bb      	str	r3, [r7, #24]
 8004260:	4b82      	ldr	r3, [pc, #520]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004262:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004264:	617b      	str	r3, [r7, #20]
 8004266:	69bb      	ldr	r3, [r7, #24]
 8004268:	2b08      	cmp	r3, #8
 800426a:	d007      	beq.n	800427c <HAL_RCC_OscConfig+0x308>
 800426c:	69bb      	ldr	r3, [r7, #24]
 800426e:	2b18      	cmp	r3, #24
 8004270:	d13a      	bne.n	80042e8 <HAL_RCC_OscConfig+0x374>
 8004272:	697b      	ldr	r3, [r7, #20]
 8004274:	f003 0303 	and.w	r3, r3, #3
 8004278:	2b01      	cmp	r3, #1
 800427a:	d135      	bne.n	80042e8 <HAL_RCC_OscConfig+0x374>
 800427c:	4b7b      	ldr	r3, [pc, #492]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004284:	2b00      	cmp	r3, #0
 8004286:	d005      	beq.n	8004294 <HAL_RCC_OscConfig+0x320>
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	69db      	ldr	r3, [r3, #28]
 800428c:	2b80      	cmp	r3, #128	@ 0x80
 800428e:	d001      	beq.n	8004294 <HAL_RCC_OscConfig+0x320>
 8004290:	2301      	movs	r3, #1
 8004292:	e2c1      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004294:	f7fd fe58 	bl	8001f48 <HAL_GetREVID>
 8004298:	4603      	mov	r3, r0
 800429a:	f241 0203 	movw	r2, #4099	@ 0x1003
 800429e:	4293      	cmp	r3, r2
 80042a0:	d817      	bhi.n	80042d2 <HAL_RCC_OscConfig+0x35e>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	6a1b      	ldr	r3, [r3, #32]
 80042a6:	2b20      	cmp	r3, #32
 80042a8:	d108      	bne.n	80042bc <HAL_RCC_OscConfig+0x348>
 80042aa:	4b70      	ldr	r3, [pc, #448]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042ac:	685b      	ldr	r3, [r3, #4]
 80042ae:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
 80042b2:	4a6e      	ldr	r2, [pc, #440]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042b4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80042b8:	6053      	str	r3, [r2, #4]
 80042ba:	e075      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 80042bc:	4b6b      	ldr	r3, [pc, #428]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042be:	685b      	ldr	r3, [r3, #4]
 80042c0:	f023 42f8 	bic.w	r2, r3, #2080374784	@ 0x7c000000
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	6a1b      	ldr	r3, [r3, #32]
 80042c8:	069b      	lsls	r3, r3, #26
 80042ca:	4968      	ldr	r1, [pc, #416]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042cc:	4313      	orrs	r3, r2
 80042ce:	604b      	str	r3, [r1, #4]
 80042d0:	e06a      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 80042d2:	4b66      	ldr	r3, [pc, #408]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042d4:	68db      	ldr	r3, [r3, #12]
 80042d6:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	6a1b      	ldr	r3, [r3, #32]
 80042de:	061b      	lsls	r3, r3, #24
 80042e0:	4962      	ldr	r1, [pc, #392]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042e2:	4313      	orrs	r3, r2
 80042e4:	60cb      	str	r3, [r1, #12]
 80042e6:	e05f      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	69db      	ldr	r3, [r3, #28]
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d042      	beq.n	8004376 <HAL_RCC_OscConfig+0x402>
 80042f0:	4b5e      	ldr	r3, [pc, #376]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	4a5d      	ldr	r2, [pc, #372]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80042f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80042fa:	6013      	str	r3, [r2, #0]
 80042fc:	f7fd fe18 	bl	8001f30 <HAL_GetTick>
 8004300:	6278      	str	r0, [r7, #36]	@ 0x24
 8004302:	e008      	b.n	8004316 <HAL_RCC_OscConfig+0x3a2>
 8004304:	f7fd fe14 	bl	8001f30 <HAL_GetTick>
 8004308:	4602      	mov	r2, r0
 800430a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800430c:	1ad3      	subs	r3, r2, r3
 800430e:	2b02      	cmp	r3, #2
 8004310:	d901      	bls.n	8004316 <HAL_RCC_OscConfig+0x3a2>
 8004312:	2303      	movs	r3, #3
 8004314:	e280      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004316:	4b55      	ldr	r3, [pc, #340]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800431e:	2b00      	cmp	r3, #0
 8004320:	d0f0      	beq.n	8004304 <HAL_RCC_OscConfig+0x390>
 8004322:	f7fd fe11 	bl	8001f48 <HAL_GetREVID>
 8004326:	4603      	mov	r3, r0
 8004328:	f241 0203 	movw	r2, #4099	@ 0x1003
 800432c:	4293      	cmp	r3, r2
 800432e:	d817      	bhi.n	8004360 <HAL_RCC_OscConfig+0x3ec>
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	6a1b      	ldr	r3, [r3, #32]
 8004334:	2b20      	cmp	r3, #32
 8004336:	d108      	bne.n	800434a <HAL_RCC_OscConfig+0x3d6>
 8004338:	4b4c      	ldr	r3, [pc, #304]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
 8004340:	4a4a      	ldr	r2, [pc, #296]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004342:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8004346:	6053      	str	r3, [r2, #4]
 8004348:	e02e      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 800434a:	4b48      	ldr	r3, [pc, #288]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800434c:	685b      	ldr	r3, [r3, #4]
 800434e:	f023 42f8 	bic.w	r2, r3, #2080374784	@ 0x7c000000
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	6a1b      	ldr	r3, [r3, #32]
 8004356:	069b      	lsls	r3, r3, #26
 8004358:	4944      	ldr	r1, [pc, #272]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800435a:	4313      	orrs	r3, r2
 800435c:	604b      	str	r3, [r1, #4]
 800435e:	e023      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 8004360:	4b42      	ldr	r3, [pc, #264]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004362:	68db      	ldr	r3, [r3, #12]
 8004364:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	6a1b      	ldr	r3, [r3, #32]
 800436c:	061b      	lsls	r3, r3, #24
 800436e:	493f      	ldr	r1, [pc, #252]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004370:	4313      	orrs	r3, r2
 8004372:	60cb      	str	r3, [r1, #12]
 8004374:	e018      	b.n	80043a8 <HAL_RCC_OscConfig+0x434>
 8004376:	4b3d      	ldr	r3, [pc, #244]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	4a3c      	ldr	r2, [pc, #240]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800437c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004380:	6013      	str	r3, [r2, #0]
 8004382:	f7fd fdd5 	bl	8001f30 <HAL_GetTick>
 8004386:	6278      	str	r0, [r7, #36]	@ 0x24
 8004388:	e008      	b.n	800439c <HAL_RCC_OscConfig+0x428>
 800438a:	f7fd fdd1 	bl	8001f30 <HAL_GetTick>
 800438e:	4602      	mov	r2, r0
 8004390:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004392:	1ad3      	subs	r3, r2, r3
 8004394:	2b02      	cmp	r3, #2
 8004396:	d901      	bls.n	800439c <HAL_RCC_OscConfig+0x428>
 8004398:	2303      	movs	r3, #3
 800439a:	e23d      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800439c:	4b33      	ldr	r3, [pc, #204]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80043a4:	2b00      	cmp	r3, #0
 80043a6:	d1f0      	bne.n	800438a <HAL_RCC_OscConfig+0x416>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f003 0308 	and.w	r3, r3, #8
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	d036      	beq.n	8004422 <HAL_RCC_OscConfig+0x4ae>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	695b      	ldr	r3, [r3, #20]
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d019      	beq.n	80043f0 <HAL_RCC_OscConfig+0x47c>
 80043bc:	4b2b      	ldr	r3, [pc, #172]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80043be:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80043c0:	4a2a      	ldr	r2, [pc, #168]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80043c2:	f043 0301 	orr.w	r3, r3, #1
 80043c6:	6753      	str	r3, [r2, #116]	@ 0x74
 80043c8:	f7fd fdb2 	bl	8001f30 <HAL_GetTick>
 80043cc:	6278      	str	r0, [r7, #36]	@ 0x24
 80043ce:	e008      	b.n	80043e2 <HAL_RCC_OscConfig+0x46e>
 80043d0:	f7fd fdae 	bl	8001f30 <HAL_GetTick>
 80043d4:	4602      	mov	r2, r0
 80043d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80043d8:	1ad3      	subs	r3, r2, r3
 80043da:	2b02      	cmp	r3, #2
 80043dc:	d901      	bls.n	80043e2 <HAL_RCC_OscConfig+0x46e>
 80043de:	2303      	movs	r3, #3
 80043e0:	e21a      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80043e2:	4b22      	ldr	r3, [pc, #136]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80043e4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80043e6:	f003 0302 	and.w	r3, r3, #2
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d0f0      	beq.n	80043d0 <HAL_RCC_OscConfig+0x45c>
 80043ee:	e018      	b.n	8004422 <HAL_RCC_OscConfig+0x4ae>
 80043f0:	4b1e      	ldr	r3, [pc, #120]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80043f2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80043f4:	4a1d      	ldr	r2, [pc, #116]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 80043f6:	f023 0301 	bic.w	r3, r3, #1
 80043fa:	6753      	str	r3, [r2, #116]	@ 0x74
 80043fc:	f7fd fd98 	bl	8001f30 <HAL_GetTick>
 8004400:	6278      	str	r0, [r7, #36]	@ 0x24
 8004402:	e008      	b.n	8004416 <HAL_RCC_OscConfig+0x4a2>
 8004404:	f7fd fd94 	bl	8001f30 <HAL_GetTick>
 8004408:	4602      	mov	r2, r0
 800440a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800440c:	1ad3      	subs	r3, r2, r3
 800440e:	2b02      	cmp	r3, #2
 8004410:	d901      	bls.n	8004416 <HAL_RCC_OscConfig+0x4a2>
 8004412:	2303      	movs	r3, #3
 8004414:	e200      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004416:	4b15      	ldr	r3, [pc, #84]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004418:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800441a:	f003 0302 	and.w	r3, r3, #2
 800441e:	2b00      	cmp	r3, #0
 8004420:	d1f0      	bne.n	8004404 <HAL_RCC_OscConfig+0x490>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	681b      	ldr	r3, [r3, #0]
 8004426:	f003 0320 	and.w	r3, r3, #32
 800442a:	2b00      	cmp	r3, #0
 800442c:	d039      	beq.n	80044a2 <HAL_RCC_OscConfig+0x52e>
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	699b      	ldr	r3, [r3, #24]
 8004432:	2b00      	cmp	r3, #0
 8004434:	d01c      	beq.n	8004470 <HAL_RCC_OscConfig+0x4fc>
 8004436:	4b0d      	ldr	r3, [pc, #52]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	4a0c      	ldr	r2, [pc, #48]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800443c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8004440:	6013      	str	r3, [r2, #0]
 8004442:	f7fd fd75 	bl	8001f30 <HAL_GetTick>
 8004446:	6278      	str	r0, [r7, #36]	@ 0x24
 8004448:	e008      	b.n	800445c <HAL_RCC_OscConfig+0x4e8>
 800444a:	f7fd fd71 	bl	8001f30 <HAL_GetTick>
 800444e:	4602      	mov	r2, r0
 8004450:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004452:	1ad3      	subs	r3, r2, r3
 8004454:	2b02      	cmp	r3, #2
 8004456:	d901      	bls.n	800445c <HAL_RCC_OscConfig+0x4e8>
 8004458:	2303      	movs	r3, #3
 800445a:	e1dd      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800445c:	4b03      	ldr	r3, [pc, #12]	@ (800446c <HAL_RCC_OscConfig+0x4f8>)
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004464:	2b00      	cmp	r3, #0
 8004466:	d0f0      	beq.n	800444a <HAL_RCC_OscConfig+0x4d6>
 8004468:	e01b      	b.n	80044a2 <HAL_RCC_OscConfig+0x52e>
 800446a:	bf00      	nop
 800446c:	58024400 	.word	0x58024400
 8004470:	4b9b      	ldr	r3, [pc, #620]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004472:	681b      	ldr	r3, [r3, #0]
 8004474:	4a9a      	ldr	r2, [pc, #616]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004476:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800447a:	6013      	str	r3, [r2, #0]
 800447c:	f7fd fd58 	bl	8001f30 <HAL_GetTick>
 8004480:	6278      	str	r0, [r7, #36]	@ 0x24
 8004482:	e008      	b.n	8004496 <HAL_RCC_OscConfig+0x522>
 8004484:	f7fd fd54 	bl	8001f30 <HAL_GetTick>
 8004488:	4602      	mov	r2, r0
 800448a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800448c:	1ad3      	subs	r3, r2, r3
 800448e:	2b02      	cmp	r3, #2
 8004490:	d901      	bls.n	8004496 <HAL_RCC_OscConfig+0x522>
 8004492:	2303      	movs	r3, #3
 8004494:	e1c0      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004496:	4b92      	ldr	r3, [pc, #584]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d1f0      	bne.n	8004484 <HAL_RCC_OscConfig+0x510>
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	f003 0304 	and.w	r3, r3, #4
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	f000 8081 	beq.w	80045b2 <HAL_RCC_OscConfig+0x63e>
 80044b0:	4b8c      	ldr	r3, [pc, #560]	@ (80046e4 <HAL_RCC_OscConfig+0x770>)
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a8b      	ldr	r2, [pc, #556]	@ (80046e4 <HAL_RCC_OscConfig+0x770>)
 80044b6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80044ba:	6013      	str	r3, [r2, #0]
 80044bc:	f7fd fd38 	bl	8001f30 <HAL_GetTick>
 80044c0:	6278      	str	r0, [r7, #36]	@ 0x24
 80044c2:	e008      	b.n	80044d6 <HAL_RCC_OscConfig+0x562>
 80044c4:	f7fd fd34 	bl	8001f30 <HAL_GetTick>
 80044c8:	4602      	mov	r2, r0
 80044ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80044cc:	1ad3      	subs	r3, r2, r3
 80044ce:	2b64      	cmp	r3, #100	@ 0x64
 80044d0:	d901      	bls.n	80044d6 <HAL_RCC_OscConfig+0x562>
 80044d2:	2303      	movs	r3, #3
 80044d4:	e1a0      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80044d6:	4b83      	ldr	r3, [pc, #524]	@ (80046e4 <HAL_RCC_OscConfig+0x770>)
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d0f0      	beq.n	80044c4 <HAL_RCC_OscConfig+0x550>
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	689b      	ldr	r3, [r3, #8]
 80044e6:	2b01      	cmp	r3, #1
 80044e8:	d106      	bne.n	80044f8 <HAL_RCC_OscConfig+0x584>
 80044ea:	4b7d      	ldr	r3, [pc, #500]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80044ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80044ee:	4a7c      	ldr	r2, [pc, #496]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80044f0:	f043 0301 	orr.w	r3, r3, #1
 80044f4:	6713      	str	r3, [r2, #112]	@ 0x70
 80044f6:	e02d      	b.n	8004554 <HAL_RCC_OscConfig+0x5e0>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	689b      	ldr	r3, [r3, #8]
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d10c      	bne.n	800451a <HAL_RCC_OscConfig+0x5a6>
 8004500:	4b77      	ldr	r3, [pc, #476]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004502:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004504:	4a76      	ldr	r2, [pc, #472]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004506:	f023 0301 	bic.w	r3, r3, #1
 800450a:	6713      	str	r3, [r2, #112]	@ 0x70
 800450c:	4b74      	ldr	r3, [pc, #464]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800450e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004510:	4a73      	ldr	r2, [pc, #460]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004512:	f023 0304 	bic.w	r3, r3, #4
 8004516:	6713      	str	r3, [r2, #112]	@ 0x70
 8004518:	e01c      	b.n	8004554 <HAL_RCC_OscConfig+0x5e0>
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	689b      	ldr	r3, [r3, #8]
 800451e:	2b05      	cmp	r3, #5
 8004520:	d10c      	bne.n	800453c <HAL_RCC_OscConfig+0x5c8>
 8004522:	4b6f      	ldr	r3, [pc, #444]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004524:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004526:	4a6e      	ldr	r2, [pc, #440]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004528:	f043 0304 	orr.w	r3, r3, #4
 800452c:	6713      	str	r3, [r2, #112]	@ 0x70
 800452e:	4b6c      	ldr	r3, [pc, #432]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004530:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004532:	4a6b      	ldr	r2, [pc, #428]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004534:	f043 0301 	orr.w	r3, r3, #1
 8004538:	6713      	str	r3, [r2, #112]	@ 0x70
 800453a:	e00b      	b.n	8004554 <HAL_RCC_OscConfig+0x5e0>
 800453c:	4b68      	ldr	r3, [pc, #416]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800453e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004540:	4a67      	ldr	r2, [pc, #412]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004542:	f023 0301 	bic.w	r3, r3, #1
 8004546:	6713      	str	r3, [r2, #112]	@ 0x70
 8004548:	4b65      	ldr	r3, [pc, #404]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800454a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800454c:	4a64      	ldr	r2, [pc, #400]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800454e:	f023 0304 	bic.w	r3, r3, #4
 8004552:	6713      	str	r3, [r2, #112]	@ 0x70
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	689b      	ldr	r3, [r3, #8]
 8004558:	2b00      	cmp	r3, #0
 800455a:	d015      	beq.n	8004588 <HAL_RCC_OscConfig+0x614>
 800455c:	f7fd fce8 	bl	8001f30 <HAL_GetTick>
 8004560:	6278      	str	r0, [r7, #36]	@ 0x24
 8004562:	e00a      	b.n	800457a <HAL_RCC_OscConfig+0x606>
 8004564:	f7fd fce4 	bl	8001f30 <HAL_GetTick>
 8004568:	4602      	mov	r2, r0
 800456a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800456c:	1ad3      	subs	r3, r2, r3
 800456e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004572:	4293      	cmp	r3, r2
 8004574:	d901      	bls.n	800457a <HAL_RCC_OscConfig+0x606>
 8004576:	2303      	movs	r3, #3
 8004578:	e14e      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 800457a:	4b59      	ldr	r3, [pc, #356]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800457c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800457e:	f003 0302 	and.w	r3, r3, #2
 8004582:	2b00      	cmp	r3, #0
 8004584:	d0ee      	beq.n	8004564 <HAL_RCC_OscConfig+0x5f0>
 8004586:	e014      	b.n	80045b2 <HAL_RCC_OscConfig+0x63e>
 8004588:	f7fd fcd2 	bl	8001f30 <HAL_GetTick>
 800458c:	6278      	str	r0, [r7, #36]	@ 0x24
 800458e:	e00a      	b.n	80045a6 <HAL_RCC_OscConfig+0x632>
 8004590:	f7fd fcce 	bl	8001f30 <HAL_GetTick>
 8004594:	4602      	mov	r2, r0
 8004596:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004598:	1ad3      	subs	r3, r2, r3
 800459a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800459e:	4293      	cmp	r3, r2
 80045a0:	d901      	bls.n	80045a6 <HAL_RCC_OscConfig+0x632>
 80045a2:	2303      	movs	r3, #3
 80045a4:	e138      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80045a6:	4b4e      	ldr	r3, [pc, #312]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80045a8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80045aa:	f003 0302 	and.w	r3, r3, #2
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d1ee      	bne.n	8004590 <HAL_RCC_OscConfig+0x61c>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	f000 812d 	beq.w	8004816 <HAL_RCC_OscConfig+0x8a2>
 80045bc:	4b48      	ldr	r3, [pc, #288]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80045be:	691b      	ldr	r3, [r3, #16]
 80045c0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80045c4:	2b18      	cmp	r3, #24
 80045c6:	f000 80bd 	beq.w	8004744 <HAL_RCC_OscConfig+0x7d0>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045ce:	2b02      	cmp	r3, #2
 80045d0:	f040 809e 	bne.w	8004710 <HAL_RCC_OscConfig+0x79c>
 80045d4:	4b42      	ldr	r3, [pc, #264]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4a41      	ldr	r2, [pc, #260]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80045da:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80045de:	6013      	str	r3, [r2, #0]
 80045e0:	f7fd fca6 	bl	8001f30 <HAL_GetTick>
 80045e4:	6278      	str	r0, [r7, #36]	@ 0x24
 80045e6:	e008      	b.n	80045fa <HAL_RCC_OscConfig+0x686>
 80045e8:	f7fd fca2 	bl	8001f30 <HAL_GetTick>
 80045ec:	4602      	mov	r2, r0
 80045ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80045f0:	1ad3      	subs	r3, r2, r3
 80045f2:	2b02      	cmp	r3, #2
 80045f4:	d901      	bls.n	80045fa <HAL_RCC_OscConfig+0x686>
 80045f6:	2303      	movs	r3, #3
 80045f8:	e10e      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80045fa:	4b39      	ldr	r3, [pc, #228]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004602:	2b00      	cmp	r3, #0
 8004604:	d1f0      	bne.n	80045e8 <HAL_RCC_OscConfig+0x674>
 8004606:	4b36      	ldr	r3, [pc, #216]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004608:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800460a:	4b37      	ldr	r3, [pc, #220]	@ (80046e8 <HAL_RCC_OscConfig+0x774>)
 800460c:	4013      	ands	r3, r2
 800460e:	687a      	ldr	r2, [r7, #4]
 8004610:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8004612:	687a      	ldr	r2, [r7, #4]
 8004614:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8004616:	0112      	lsls	r2, r2, #4
 8004618:	430a      	orrs	r2, r1
 800461a:	4931      	ldr	r1, [pc, #196]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800461c:	4313      	orrs	r3, r2
 800461e:	628b      	str	r3, [r1, #40]	@ 0x28
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004624:	3b01      	subs	r3, #1
 8004626:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800462e:	3b01      	subs	r3, #1
 8004630:	025b      	lsls	r3, r3, #9
 8004632:	b29b      	uxth	r3, r3
 8004634:	431a      	orrs	r2, r3
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800463a:	3b01      	subs	r3, #1
 800463c:	041b      	lsls	r3, r3, #16
 800463e:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8004642:	431a      	orrs	r2, r3
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004648:	3b01      	subs	r3, #1
 800464a:	061b      	lsls	r3, r3, #24
 800464c:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8004650:	4923      	ldr	r1, [pc, #140]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004652:	4313      	orrs	r3, r2
 8004654:	630b      	str	r3, [r1, #48]	@ 0x30
 8004656:	4b22      	ldr	r3, [pc, #136]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004658:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800465a:	4a21      	ldr	r2, [pc, #132]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800465c:	f023 0301 	bic.w	r3, r3, #1
 8004660:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8004662:	4b1f      	ldr	r3, [pc, #124]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004664:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004666:	4b21      	ldr	r3, [pc, #132]	@ (80046ec <HAL_RCC_OscConfig+0x778>)
 8004668:	4013      	ands	r3, r2
 800466a:	687a      	ldr	r2, [r7, #4]
 800466c:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800466e:	00d2      	lsls	r2, r2, #3
 8004670:	491b      	ldr	r1, [pc, #108]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004672:	4313      	orrs	r3, r2
 8004674:	634b      	str	r3, [r1, #52]	@ 0x34
 8004676:	4b1a      	ldr	r3, [pc, #104]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004678:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800467a:	f023 020c 	bic.w	r2, r3, #12
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004682:	4917      	ldr	r1, [pc, #92]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004684:	4313      	orrs	r3, r2
 8004686:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8004688:	4b15      	ldr	r3, [pc, #84]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800468a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800468c:	f023 0202 	bic.w	r2, r3, #2
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004694:	4912      	ldr	r1, [pc, #72]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 8004696:	4313      	orrs	r3, r2
 8004698:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800469a:	4b11      	ldr	r3, [pc, #68]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 800469c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800469e:	4a10      	ldr	r2, [pc, #64]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80046a4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80046a6:	4b0e      	ldr	r3, [pc, #56]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046aa:	4a0d      	ldr	r2, [pc, #52]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046ac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80046b0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80046b2:	4b0b      	ldr	r3, [pc, #44]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046b6:	4a0a      	ldr	r2, [pc, #40]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046b8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80046bc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80046be:	4b08      	ldr	r3, [pc, #32]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80046c2:	4a07      	ldr	r2, [pc, #28]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046c4:	f043 0301 	orr.w	r3, r3, #1
 80046c8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80046ca:	4b05      	ldr	r3, [pc, #20]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	4a04      	ldr	r2, [pc, #16]	@ (80046e0 <HAL_RCC_OscConfig+0x76c>)
 80046d0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80046d4:	6013      	str	r3, [r2, #0]
 80046d6:	f7fd fc2b 	bl	8001f30 <HAL_GetTick>
 80046da:	6278      	str	r0, [r7, #36]	@ 0x24
 80046dc:	e011      	b.n	8004702 <HAL_RCC_OscConfig+0x78e>
 80046de:	bf00      	nop
 80046e0:	58024400 	.word	0x58024400
 80046e4:	58024800 	.word	0x58024800
 80046e8:	fffffc0c 	.word	0xfffffc0c
 80046ec:	ffff0007 	.word	0xffff0007
 80046f0:	f7fd fc1e 	bl	8001f30 <HAL_GetTick>
 80046f4:	4602      	mov	r2, r0
 80046f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80046f8:	1ad3      	subs	r3, r2, r3
 80046fa:	2b02      	cmp	r3, #2
 80046fc:	d901      	bls.n	8004702 <HAL_RCC_OscConfig+0x78e>
 80046fe:	2303      	movs	r3, #3
 8004700:	e08a      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004702:	4b47      	ldr	r3, [pc, #284]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800470a:	2b00      	cmp	r3, #0
 800470c:	d0f0      	beq.n	80046f0 <HAL_RCC_OscConfig+0x77c>
 800470e:	e082      	b.n	8004816 <HAL_RCC_OscConfig+0x8a2>
 8004710:	4b43      	ldr	r3, [pc, #268]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	4a42      	ldr	r2, [pc, #264]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004716:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800471a:	6013      	str	r3, [r2, #0]
 800471c:	f7fd fc08 	bl	8001f30 <HAL_GetTick>
 8004720:	6278      	str	r0, [r7, #36]	@ 0x24
 8004722:	e008      	b.n	8004736 <HAL_RCC_OscConfig+0x7c2>
 8004724:	f7fd fc04 	bl	8001f30 <HAL_GetTick>
 8004728:	4602      	mov	r2, r0
 800472a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800472c:	1ad3      	subs	r3, r2, r3
 800472e:	2b02      	cmp	r3, #2
 8004730:	d901      	bls.n	8004736 <HAL_RCC_OscConfig+0x7c2>
 8004732:	2303      	movs	r3, #3
 8004734:	e070      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 8004736:	4b3a      	ldr	r3, [pc, #232]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800473e:	2b00      	cmp	r3, #0
 8004740:	d1f0      	bne.n	8004724 <HAL_RCC_OscConfig+0x7b0>
 8004742:	e068      	b.n	8004816 <HAL_RCC_OscConfig+0x8a2>
 8004744:	4b36      	ldr	r3, [pc, #216]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004746:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004748:	613b      	str	r3, [r7, #16]
 800474a:	4b35      	ldr	r3, [pc, #212]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 800474c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800474e:	60fb      	str	r3, [r7, #12]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004754:	2b01      	cmp	r3, #1
 8004756:	d031      	beq.n	80047bc <HAL_RCC_OscConfig+0x848>
 8004758:	693b      	ldr	r3, [r7, #16]
 800475a:	f003 0203 	and.w	r2, r3, #3
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004762:	429a      	cmp	r2, r3
 8004764:	d12a      	bne.n	80047bc <HAL_RCC_OscConfig+0x848>
 8004766:	693b      	ldr	r3, [r7, #16]
 8004768:	091b      	lsrs	r3, r3, #4
 800476a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004772:	429a      	cmp	r2, r3
 8004774:	d122      	bne.n	80047bc <HAL_RCC_OscConfig+0x848>
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004780:	3b01      	subs	r3, #1
 8004782:	429a      	cmp	r2, r3
 8004784:	d11a      	bne.n	80047bc <HAL_RCC_OscConfig+0x848>
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	0a5b      	lsrs	r3, r3, #9
 800478a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004792:	3b01      	subs	r3, #1
 8004794:	429a      	cmp	r2, r3
 8004796:	d111      	bne.n	80047bc <HAL_RCC_OscConfig+0x848>
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	0c1b      	lsrs	r3, r3, #16
 800479c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80047a4:	3b01      	subs	r3, #1
 80047a6:	429a      	cmp	r2, r3
 80047a8:	d108      	bne.n	80047bc <HAL_RCC_OscConfig+0x848>
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	0e1b      	lsrs	r3, r3, #24
 80047ae:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80047b6:	3b01      	subs	r3, #1
 80047b8:	429a      	cmp	r2, r3
 80047ba:	d001      	beq.n	80047c0 <HAL_RCC_OscConfig+0x84c>
 80047bc:	2301      	movs	r3, #1
 80047be:	e02b      	b.n	8004818 <HAL_RCC_OscConfig+0x8a4>
 80047c0:	4b17      	ldr	r3, [pc, #92]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 80047c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80047c4:	08db      	lsrs	r3, r3, #3
 80047c6:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80047ca:	613b      	str	r3, [r7, #16]
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047d0:	693a      	ldr	r2, [r7, #16]
 80047d2:	429a      	cmp	r2, r3
 80047d4:	d01f      	beq.n	8004816 <HAL_RCC_OscConfig+0x8a2>
 80047d6:	4b12      	ldr	r3, [pc, #72]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 80047d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80047da:	4a11      	ldr	r2, [pc, #68]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 80047dc:	f023 0301 	bic.w	r3, r3, #1
 80047e0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80047e2:	f7fd fba5 	bl	8001f30 <HAL_GetTick>
 80047e6:	6278      	str	r0, [r7, #36]	@ 0x24
 80047e8:	bf00      	nop
 80047ea:	f7fd fba1 	bl	8001f30 <HAL_GetTick>
 80047ee:	4602      	mov	r2, r0
 80047f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047f2:	4293      	cmp	r3, r2
 80047f4:	d0f9      	beq.n	80047ea <HAL_RCC_OscConfig+0x876>
 80047f6:	4b0a      	ldr	r3, [pc, #40]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 80047f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80047fa:	4b0a      	ldr	r3, [pc, #40]	@ (8004824 <HAL_RCC_OscConfig+0x8b0>)
 80047fc:	4013      	ands	r3, r2
 80047fe:	687a      	ldr	r2, [r7, #4]
 8004800:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8004802:	00d2      	lsls	r2, r2, #3
 8004804:	4906      	ldr	r1, [pc, #24]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004806:	4313      	orrs	r3, r2
 8004808:	634b      	str	r3, [r1, #52]	@ 0x34
 800480a:	4b05      	ldr	r3, [pc, #20]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 800480c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800480e:	4a04      	ldr	r2, [pc, #16]	@ (8004820 <HAL_RCC_OscConfig+0x8ac>)
 8004810:	f043 0301 	orr.w	r3, r3, #1
 8004814:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8004816:	2300      	movs	r3, #0
 8004818:	4618      	mov	r0, r3
 800481a:	3730      	adds	r7, #48	@ 0x30
 800481c:	46bd      	mov	sp, r7
 800481e:	bd80      	pop	{r7, pc}
 8004820:	58024400 	.word	0x58024400
 8004824:	ffff0007 	.word	0xffff0007

08004828 <HAL_RCC_ClockConfig>:
 8004828:	b580      	push	{r7, lr}
 800482a:	b086      	sub	sp, #24
 800482c:	af00      	add	r7, sp, #0
 800482e:	6078      	str	r0, [r7, #4]
 8004830:	6039      	str	r1, [r7, #0]
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	2b00      	cmp	r3, #0
 8004836:	d101      	bne.n	800483c <HAL_RCC_ClockConfig+0x14>
 8004838:	2301      	movs	r3, #1
 800483a:	e19c      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 800483c:	4b8a      	ldr	r3, [pc, #552]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	f003 030f 	and.w	r3, r3, #15
 8004844:	683a      	ldr	r2, [r7, #0]
 8004846:	429a      	cmp	r2, r3
 8004848:	d910      	bls.n	800486c <HAL_RCC_ClockConfig+0x44>
 800484a:	4b87      	ldr	r3, [pc, #540]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	f023 020f 	bic.w	r2, r3, #15
 8004852:	4985      	ldr	r1, [pc, #532]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 8004854:	683b      	ldr	r3, [r7, #0]
 8004856:	4313      	orrs	r3, r2
 8004858:	600b      	str	r3, [r1, #0]
 800485a:	4b83      	ldr	r3, [pc, #524]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	f003 030f 	and.w	r3, r3, #15
 8004862:	683a      	ldr	r2, [r7, #0]
 8004864:	429a      	cmp	r2, r3
 8004866:	d001      	beq.n	800486c <HAL_RCC_ClockConfig+0x44>
 8004868:	2301      	movs	r3, #1
 800486a:	e184      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	f003 0304 	and.w	r3, r3, #4
 8004874:	2b00      	cmp	r3, #0
 8004876:	d010      	beq.n	800489a <HAL_RCC_ClockConfig+0x72>
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	691a      	ldr	r2, [r3, #16]
 800487c:	4b7b      	ldr	r3, [pc, #492]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 800487e:	699b      	ldr	r3, [r3, #24]
 8004880:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8004884:	429a      	cmp	r2, r3
 8004886:	d908      	bls.n	800489a <HAL_RCC_ClockConfig+0x72>
 8004888:	4b78      	ldr	r3, [pc, #480]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 800488a:	699b      	ldr	r3, [r3, #24]
 800488c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	691b      	ldr	r3, [r3, #16]
 8004894:	4975      	ldr	r1, [pc, #468]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004896:	4313      	orrs	r3, r2
 8004898:	618b      	str	r3, [r1, #24]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f003 0308 	and.w	r3, r3, #8
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d010      	beq.n	80048c8 <HAL_RCC_ClockConfig+0xa0>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	695a      	ldr	r2, [r3, #20]
 80048aa:	4b70      	ldr	r3, [pc, #448]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048ac:	69db      	ldr	r3, [r3, #28]
 80048ae:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80048b2:	429a      	cmp	r2, r3
 80048b4:	d908      	bls.n	80048c8 <HAL_RCC_ClockConfig+0xa0>
 80048b6:	4b6d      	ldr	r3, [pc, #436]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048b8:	69db      	ldr	r3, [r3, #28]
 80048ba:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	695b      	ldr	r3, [r3, #20]
 80048c2:	496a      	ldr	r1, [pc, #424]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048c4:	4313      	orrs	r3, r2
 80048c6:	61cb      	str	r3, [r1, #28]
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	f003 0310 	and.w	r3, r3, #16
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d010      	beq.n	80048f6 <HAL_RCC_ClockConfig+0xce>
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	699a      	ldr	r2, [r3, #24]
 80048d8:	4b64      	ldr	r3, [pc, #400]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048da:	69db      	ldr	r3, [r3, #28]
 80048dc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80048e0:	429a      	cmp	r2, r3
 80048e2:	d908      	bls.n	80048f6 <HAL_RCC_ClockConfig+0xce>
 80048e4:	4b61      	ldr	r3, [pc, #388]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048e6:	69db      	ldr	r3, [r3, #28]
 80048e8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	699b      	ldr	r3, [r3, #24]
 80048f0:	495e      	ldr	r1, [pc, #376]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80048f2:	4313      	orrs	r3, r2
 80048f4:	61cb      	str	r3, [r1, #28]
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	f003 0320 	and.w	r3, r3, #32
 80048fe:	2b00      	cmp	r3, #0
 8004900:	d010      	beq.n	8004924 <HAL_RCC_ClockConfig+0xfc>
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	69da      	ldr	r2, [r3, #28]
 8004906:	4b59      	ldr	r3, [pc, #356]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004908:	6a1b      	ldr	r3, [r3, #32]
 800490a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800490e:	429a      	cmp	r2, r3
 8004910:	d908      	bls.n	8004924 <HAL_RCC_ClockConfig+0xfc>
 8004912:	4b56      	ldr	r3, [pc, #344]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004914:	6a1b      	ldr	r3, [r3, #32]
 8004916:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	69db      	ldr	r3, [r3, #28]
 800491e:	4953      	ldr	r1, [pc, #332]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004920:	4313      	orrs	r3, r2
 8004922:	620b      	str	r3, [r1, #32]
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	681b      	ldr	r3, [r3, #0]
 8004928:	f003 0302 	and.w	r3, r3, #2
 800492c:	2b00      	cmp	r3, #0
 800492e:	d010      	beq.n	8004952 <HAL_RCC_ClockConfig+0x12a>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	68da      	ldr	r2, [r3, #12]
 8004934:	4b4d      	ldr	r3, [pc, #308]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004936:	699b      	ldr	r3, [r3, #24]
 8004938:	f003 030f 	and.w	r3, r3, #15
 800493c:	429a      	cmp	r2, r3
 800493e:	d908      	bls.n	8004952 <HAL_RCC_ClockConfig+0x12a>
 8004940:	4b4a      	ldr	r3, [pc, #296]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004942:	699b      	ldr	r3, [r3, #24]
 8004944:	f023 020f 	bic.w	r2, r3, #15
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	68db      	ldr	r3, [r3, #12]
 800494c:	4947      	ldr	r1, [pc, #284]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 800494e:	4313      	orrs	r3, r2
 8004950:	618b      	str	r3, [r1, #24]
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	f003 0301 	and.w	r3, r3, #1
 800495a:	2b00      	cmp	r3, #0
 800495c:	d055      	beq.n	8004a0a <HAL_RCC_ClockConfig+0x1e2>
 800495e:	4b43      	ldr	r3, [pc, #268]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004960:	699b      	ldr	r3, [r3, #24]
 8004962:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	689b      	ldr	r3, [r3, #8]
 800496a:	4940      	ldr	r1, [pc, #256]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 800496c:	4313      	orrs	r3, r2
 800496e:	618b      	str	r3, [r1, #24]
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	685b      	ldr	r3, [r3, #4]
 8004974:	2b02      	cmp	r3, #2
 8004976:	d107      	bne.n	8004988 <HAL_RCC_ClockConfig+0x160>
 8004978:	4b3c      	ldr	r3, [pc, #240]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004980:	2b00      	cmp	r3, #0
 8004982:	d121      	bne.n	80049c8 <HAL_RCC_ClockConfig+0x1a0>
 8004984:	2301      	movs	r3, #1
 8004986:	e0f6      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	685b      	ldr	r3, [r3, #4]
 800498c:	2b03      	cmp	r3, #3
 800498e:	d107      	bne.n	80049a0 <HAL_RCC_ClockConfig+0x178>
 8004990:	4b36      	ldr	r3, [pc, #216]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004998:	2b00      	cmp	r3, #0
 800499a:	d115      	bne.n	80049c8 <HAL_RCC_ClockConfig+0x1a0>
 800499c:	2301      	movs	r3, #1
 800499e:	e0ea      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	685b      	ldr	r3, [r3, #4]
 80049a4:	2b01      	cmp	r3, #1
 80049a6:	d107      	bne.n	80049b8 <HAL_RCC_ClockConfig+0x190>
 80049a8:	4b30      	ldr	r3, [pc, #192]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d109      	bne.n	80049c8 <HAL_RCC_ClockConfig+0x1a0>
 80049b4:	2301      	movs	r3, #1
 80049b6:	e0de      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 80049b8:	4b2c      	ldr	r3, [pc, #176]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f003 0304 	and.w	r3, r3, #4
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d101      	bne.n	80049c8 <HAL_RCC_ClockConfig+0x1a0>
 80049c4:	2301      	movs	r3, #1
 80049c6:	e0d6      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 80049c8:	4b28      	ldr	r3, [pc, #160]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80049ca:	691b      	ldr	r3, [r3, #16]
 80049cc:	f023 0207 	bic.w	r2, r3, #7
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	685b      	ldr	r3, [r3, #4]
 80049d4:	4925      	ldr	r1, [pc, #148]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80049d6:	4313      	orrs	r3, r2
 80049d8:	610b      	str	r3, [r1, #16]
 80049da:	f7fd faa9 	bl	8001f30 <HAL_GetTick>
 80049de:	6178      	str	r0, [r7, #20]
 80049e0:	e00a      	b.n	80049f8 <HAL_RCC_ClockConfig+0x1d0>
 80049e2:	f7fd faa5 	bl	8001f30 <HAL_GetTick>
 80049e6:	4602      	mov	r2, r0
 80049e8:	697b      	ldr	r3, [r7, #20]
 80049ea:	1ad3      	subs	r3, r2, r3
 80049ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 80049f0:	4293      	cmp	r3, r2
 80049f2:	d901      	bls.n	80049f8 <HAL_RCC_ClockConfig+0x1d0>
 80049f4:	2303      	movs	r3, #3
 80049f6:	e0be      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 80049f8:	4b1c      	ldr	r3, [pc, #112]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 80049fa:	691b      	ldr	r3, [r3, #16]
 80049fc:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	685b      	ldr	r3, [r3, #4]
 8004a04:	00db      	lsls	r3, r3, #3
 8004a06:	429a      	cmp	r2, r3
 8004a08:	d1eb      	bne.n	80049e2 <HAL_RCC_ClockConfig+0x1ba>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	f003 0302 	and.w	r3, r3, #2
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d010      	beq.n	8004a38 <HAL_RCC_ClockConfig+0x210>
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	68da      	ldr	r2, [r3, #12]
 8004a1a:	4b14      	ldr	r3, [pc, #80]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004a1c:	699b      	ldr	r3, [r3, #24]
 8004a1e:	f003 030f 	and.w	r3, r3, #15
 8004a22:	429a      	cmp	r2, r3
 8004a24:	d208      	bcs.n	8004a38 <HAL_RCC_ClockConfig+0x210>
 8004a26:	4b11      	ldr	r3, [pc, #68]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004a28:	699b      	ldr	r3, [r3, #24]
 8004a2a:	f023 020f 	bic.w	r2, r3, #15
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	68db      	ldr	r3, [r3, #12]
 8004a32:	490e      	ldr	r1, [pc, #56]	@ (8004a6c <HAL_RCC_ClockConfig+0x244>)
 8004a34:	4313      	orrs	r3, r2
 8004a36:	618b      	str	r3, [r1, #24]
 8004a38:	4b0b      	ldr	r3, [pc, #44]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	f003 030f 	and.w	r3, r3, #15
 8004a40:	683a      	ldr	r2, [r7, #0]
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d214      	bcs.n	8004a70 <HAL_RCC_ClockConfig+0x248>
 8004a46:	4b08      	ldr	r3, [pc, #32]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 8004a48:	681b      	ldr	r3, [r3, #0]
 8004a4a:	f023 020f 	bic.w	r2, r3, #15
 8004a4e:	4906      	ldr	r1, [pc, #24]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 8004a50:	683b      	ldr	r3, [r7, #0]
 8004a52:	4313      	orrs	r3, r2
 8004a54:	600b      	str	r3, [r1, #0]
 8004a56:	4b04      	ldr	r3, [pc, #16]	@ (8004a68 <HAL_RCC_ClockConfig+0x240>)
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	f003 030f 	and.w	r3, r3, #15
 8004a5e:	683a      	ldr	r2, [r7, #0]
 8004a60:	429a      	cmp	r2, r3
 8004a62:	d005      	beq.n	8004a70 <HAL_RCC_ClockConfig+0x248>
 8004a64:	2301      	movs	r3, #1
 8004a66:	e086      	b.n	8004b76 <HAL_RCC_ClockConfig+0x34e>
 8004a68:	52002000 	.word	0x52002000
 8004a6c:	58024400 	.word	0x58024400
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	f003 0304 	and.w	r3, r3, #4
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d010      	beq.n	8004a9e <HAL_RCC_ClockConfig+0x276>
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	691a      	ldr	r2, [r3, #16]
 8004a80:	4b3f      	ldr	r3, [pc, #252]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004a82:	699b      	ldr	r3, [r3, #24]
 8004a84:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8004a88:	429a      	cmp	r2, r3
 8004a8a:	d208      	bcs.n	8004a9e <HAL_RCC_ClockConfig+0x276>
 8004a8c:	4b3c      	ldr	r3, [pc, #240]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004a8e:	699b      	ldr	r3, [r3, #24]
 8004a90:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	691b      	ldr	r3, [r3, #16]
 8004a98:	4939      	ldr	r1, [pc, #228]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004a9a:	4313      	orrs	r3, r2
 8004a9c:	618b      	str	r3, [r1, #24]
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	681b      	ldr	r3, [r3, #0]
 8004aa2:	f003 0308 	and.w	r3, r3, #8
 8004aa6:	2b00      	cmp	r3, #0
 8004aa8:	d010      	beq.n	8004acc <HAL_RCC_ClockConfig+0x2a4>
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	695a      	ldr	r2, [r3, #20]
 8004aae:	4b34      	ldr	r3, [pc, #208]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004ab0:	69db      	ldr	r3, [r3, #28]
 8004ab2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8004ab6:	429a      	cmp	r2, r3
 8004ab8:	d208      	bcs.n	8004acc <HAL_RCC_ClockConfig+0x2a4>
 8004aba:	4b31      	ldr	r3, [pc, #196]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004abc:	69db      	ldr	r3, [r3, #28]
 8004abe:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	695b      	ldr	r3, [r3, #20]
 8004ac6:	492e      	ldr	r1, [pc, #184]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004ac8:	4313      	orrs	r3, r2
 8004aca:	61cb      	str	r3, [r1, #28]
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	f003 0310 	and.w	r3, r3, #16
 8004ad4:	2b00      	cmp	r3, #0
 8004ad6:	d010      	beq.n	8004afa <HAL_RCC_ClockConfig+0x2d2>
 8004ad8:	687b      	ldr	r3, [r7, #4]
 8004ada:	699a      	ldr	r2, [r3, #24]
 8004adc:	4b28      	ldr	r3, [pc, #160]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004ade:	69db      	ldr	r3, [r3, #28]
 8004ae0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8004ae4:	429a      	cmp	r2, r3
 8004ae6:	d208      	bcs.n	8004afa <HAL_RCC_ClockConfig+0x2d2>
 8004ae8:	4b25      	ldr	r3, [pc, #148]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004aea:	69db      	ldr	r3, [r3, #28]
 8004aec:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	699b      	ldr	r3, [r3, #24]
 8004af4:	4922      	ldr	r1, [pc, #136]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004af6:	4313      	orrs	r3, r2
 8004af8:	61cb      	str	r3, [r1, #28]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	f003 0320 	and.w	r3, r3, #32
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d010      	beq.n	8004b28 <HAL_RCC_ClockConfig+0x300>
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	69da      	ldr	r2, [r3, #28]
 8004b0a:	4b1d      	ldr	r3, [pc, #116]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004b0c:	6a1b      	ldr	r3, [r3, #32]
 8004b0e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8004b12:	429a      	cmp	r2, r3
 8004b14:	d208      	bcs.n	8004b28 <HAL_RCC_ClockConfig+0x300>
 8004b16:	4b1a      	ldr	r3, [pc, #104]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004b18:	6a1b      	ldr	r3, [r3, #32]
 8004b1a:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	69db      	ldr	r3, [r3, #28]
 8004b22:	4917      	ldr	r1, [pc, #92]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004b24:	4313      	orrs	r3, r2
 8004b26:	620b      	str	r3, [r1, #32]
 8004b28:	f000 f834 	bl	8004b94 <HAL_RCC_GetSysClockFreq>
 8004b2c:	4602      	mov	r2, r0
 8004b2e:	4b14      	ldr	r3, [pc, #80]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004b30:	699b      	ldr	r3, [r3, #24]
 8004b32:	0a1b      	lsrs	r3, r3, #8
 8004b34:	f003 030f 	and.w	r3, r3, #15
 8004b38:	4912      	ldr	r1, [pc, #72]	@ (8004b84 <HAL_RCC_ClockConfig+0x35c>)
 8004b3a:	5ccb      	ldrb	r3, [r1, r3]
 8004b3c:	f003 031f 	and.w	r3, r3, #31
 8004b40:	fa22 f303 	lsr.w	r3, r2, r3
 8004b44:	613b      	str	r3, [r7, #16]
 8004b46:	4b0e      	ldr	r3, [pc, #56]	@ (8004b80 <HAL_RCC_ClockConfig+0x358>)
 8004b48:	699b      	ldr	r3, [r3, #24]
 8004b4a:	f003 030f 	and.w	r3, r3, #15
 8004b4e:	4a0d      	ldr	r2, [pc, #52]	@ (8004b84 <HAL_RCC_ClockConfig+0x35c>)
 8004b50:	5cd3      	ldrb	r3, [r2, r3]
 8004b52:	f003 031f 	and.w	r3, r3, #31
 8004b56:	693a      	ldr	r2, [r7, #16]
 8004b58:	fa22 f303 	lsr.w	r3, r2, r3
 8004b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8004b88 <HAL_RCC_ClockConfig+0x360>)
 8004b5e:	6013      	str	r3, [r2, #0]
 8004b60:	4a0a      	ldr	r2, [pc, #40]	@ (8004b8c <HAL_RCC_ClockConfig+0x364>)
 8004b62:	693b      	ldr	r3, [r7, #16]
 8004b64:	6013      	str	r3, [r2, #0]
 8004b66:	4b0a      	ldr	r3, [pc, #40]	@ (8004b90 <HAL_RCC_ClockConfig+0x368>)
 8004b68:	681b      	ldr	r3, [r3, #0]
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	f7fd f824 	bl	8001bb8 <HAL_InitTick>
 8004b70:	4603      	mov	r3, r0
 8004b72:	73fb      	strb	r3, [r7, #15]
 8004b74:	7bfb      	ldrb	r3, [r7, #15]
 8004b76:	4618      	mov	r0, r3
 8004b78:	3718      	adds	r7, #24
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	bd80      	pop	{r7, pc}
 8004b7e:	bf00      	nop
 8004b80:	58024400 	.word	0x58024400
 8004b84:	0800b194 	.word	0x0800b194
 8004b88:	2400016c 	.word	0x2400016c
 8004b8c:	24000168 	.word	0x24000168
 8004b90:	24000170 	.word	0x24000170

08004b94 <HAL_RCC_GetSysClockFreq>:
 8004b94:	b480      	push	{r7}
 8004b96:	b089      	sub	sp, #36	@ 0x24
 8004b98:	af00      	add	r7, sp, #0
 8004b9a:	4bb3      	ldr	r3, [pc, #716]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004b9c:	691b      	ldr	r3, [r3, #16]
 8004b9e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004ba2:	2b18      	cmp	r3, #24
 8004ba4:	f200 8155 	bhi.w	8004e52 <HAL_RCC_GetSysClockFreq+0x2be>
 8004ba8:	a201      	add	r2, pc, #4	@ (adr r2, 8004bb0 <HAL_RCC_GetSysClockFreq+0x1c>)
 8004baa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004bae:	bf00      	nop
 8004bb0:	08004c15 	.word	0x08004c15
 8004bb4:	08004e53 	.word	0x08004e53
 8004bb8:	08004e53 	.word	0x08004e53
 8004bbc:	08004e53 	.word	0x08004e53
 8004bc0:	08004e53 	.word	0x08004e53
 8004bc4:	08004e53 	.word	0x08004e53
 8004bc8:	08004e53 	.word	0x08004e53
 8004bcc:	08004e53 	.word	0x08004e53
 8004bd0:	08004c3b 	.word	0x08004c3b
 8004bd4:	08004e53 	.word	0x08004e53
 8004bd8:	08004e53 	.word	0x08004e53
 8004bdc:	08004e53 	.word	0x08004e53
 8004be0:	08004e53 	.word	0x08004e53
 8004be4:	08004e53 	.word	0x08004e53
 8004be8:	08004e53 	.word	0x08004e53
 8004bec:	08004e53 	.word	0x08004e53
 8004bf0:	08004c41 	.word	0x08004c41
 8004bf4:	08004e53 	.word	0x08004e53
 8004bf8:	08004e53 	.word	0x08004e53
 8004bfc:	08004e53 	.word	0x08004e53
 8004c00:	08004e53 	.word	0x08004e53
 8004c04:	08004e53 	.word	0x08004e53
 8004c08:	08004e53 	.word	0x08004e53
 8004c0c:	08004e53 	.word	0x08004e53
 8004c10:	08004c47 	.word	0x08004c47
 8004c14:	4b94      	ldr	r3, [pc, #592]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f003 0320 	and.w	r3, r3, #32
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d009      	beq.n	8004c34 <HAL_RCC_GetSysClockFreq+0xa0>
 8004c20:	4b91      	ldr	r3, [pc, #580]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	08db      	lsrs	r3, r3, #3
 8004c26:	f003 0303 	and.w	r3, r3, #3
 8004c2a:	4a90      	ldr	r2, [pc, #576]	@ (8004e6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004c2c:	fa22 f303 	lsr.w	r3, r2, r3
 8004c30:	61bb      	str	r3, [r7, #24]
 8004c32:	e111      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004c34:	4b8d      	ldr	r3, [pc, #564]	@ (8004e6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004c36:	61bb      	str	r3, [r7, #24]
 8004c38:	e10e      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004c3a:	4b8d      	ldr	r3, [pc, #564]	@ (8004e70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8004c3c:	61bb      	str	r3, [r7, #24]
 8004c3e:	e10b      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004c40:	4b8c      	ldr	r3, [pc, #560]	@ (8004e74 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8004c42:	61bb      	str	r3, [r7, #24]
 8004c44:	e108      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004c46:	4b88      	ldr	r3, [pc, #544]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c4a:	f003 0303 	and.w	r3, r3, #3
 8004c4e:	617b      	str	r3, [r7, #20]
 8004c50:	4b85      	ldr	r3, [pc, #532]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004c54:	091b      	lsrs	r3, r3, #4
 8004c56:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8004c5a:	613b      	str	r3, [r7, #16]
 8004c5c:	4b82      	ldr	r3, [pc, #520]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c60:	f003 0301 	and.w	r3, r3, #1
 8004c64:	60fb      	str	r3, [r7, #12]
 8004c66:	4b80      	ldr	r3, [pc, #512]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004c68:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004c6a:	08db      	lsrs	r3, r3, #3
 8004c6c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8004c70:	68fa      	ldr	r2, [r7, #12]
 8004c72:	fb02 f303 	mul.w	r3, r2, r3
 8004c76:	ee07 3a90 	vmov	s15, r3
 8004c7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004c7e:	edc7 7a02 	vstr	s15, [r7, #8]
 8004c82:	693b      	ldr	r3, [r7, #16]
 8004c84:	2b00      	cmp	r3, #0
 8004c86:	f000 80e1 	beq.w	8004e4c <HAL_RCC_GetSysClockFreq+0x2b8>
 8004c8a:	697b      	ldr	r3, [r7, #20]
 8004c8c:	2b02      	cmp	r3, #2
 8004c8e:	f000 8083 	beq.w	8004d98 <HAL_RCC_GetSysClockFreq+0x204>
 8004c92:	697b      	ldr	r3, [r7, #20]
 8004c94:	2b02      	cmp	r3, #2
 8004c96:	f200 80a1 	bhi.w	8004ddc <HAL_RCC_GetSysClockFreq+0x248>
 8004c9a:	697b      	ldr	r3, [r7, #20]
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d003      	beq.n	8004ca8 <HAL_RCC_GetSysClockFreq+0x114>
 8004ca0:	697b      	ldr	r3, [r7, #20]
 8004ca2:	2b01      	cmp	r3, #1
 8004ca4:	d056      	beq.n	8004d54 <HAL_RCC_GetSysClockFreq+0x1c0>
 8004ca6:	e099      	b.n	8004ddc <HAL_RCC_GetSysClockFreq+0x248>
 8004ca8:	4b6f      	ldr	r3, [pc, #444]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	f003 0320 	and.w	r3, r3, #32
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d02d      	beq.n	8004d10 <HAL_RCC_GetSysClockFreq+0x17c>
 8004cb4:	4b6c      	ldr	r3, [pc, #432]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	08db      	lsrs	r3, r3, #3
 8004cba:	f003 0303 	and.w	r3, r3, #3
 8004cbe:	4a6b      	ldr	r2, [pc, #428]	@ (8004e6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8004cc0:	fa22 f303 	lsr.w	r3, r2, r3
 8004cc4:	607b      	str	r3, [r7, #4]
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	ee07 3a90 	vmov	s15, r3
 8004ccc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004cd0:	693b      	ldr	r3, [r7, #16]
 8004cd2:	ee07 3a90 	vmov	s15, r3
 8004cd6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004cda:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004cde:	4b62      	ldr	r3, [pc, #392]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004ce0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ce2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004ce6:	ee07 3a90 	vmov	s15, r3
 8004cea:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004cee:	ed97 6a02 	vldr	s12, [r7, #8]
 8004cf2:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8004e78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004cf6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004cfa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004cfe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004d02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d06:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004d0a:	edc7 7a07 	vstr	s15, [r7, #28]
 8004d0e:	e087      	b.n	8004e20 <HAL_RCC_GetSysClockFreq+0x28c>
 8004d10:	693b      	ldr	r3, [r7, #16]
 8004d12:	ee07 3a90 	vmov	s15, r3
 8004d16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004d1a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8004e7c <HAL_RCC_GetSysClockFreq+0x2e8>
 8004d1e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004d22:	4b51      	ldr	r3, [pc, #324]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004d24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d26:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004d2a:	ee07 3a90 	vmov	s15, r3
 8004d2e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004d32:	ed97 6a02 	vldr	s12, [r7, #8]
 8004d36:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8004e78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004d3a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004d3e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004d42:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004d46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d4a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004d4e:	edc7 7a07 	vstr	s15, [r7, #28]
 8004d52:	e065      	b.n	8004e20 <HAL_RCC_GetSysClockFreq+0x28c>
 8004d54:	693b      	ldr	r3, [r7, #16]
 8004d56:	ee07 3a90 	vmov	s15, r3
 8004d5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004d5e:	eddf 6a48 	vldr	s13, [pc, #288]	@ 8004e80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8004d62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004d66:	4b40      	ldr	r3, [pc, #256]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004d68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004d6e:	ee07 3a90 	vmov	s15, r3
 8004d72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004d76:	ed97 6a02 	vldr	s12, [r7, #8]
 8004d7a:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8004e78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004d7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004d82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004d86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004d8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004d8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004d92:	edc7 7a07 	vstr	s15, [r7, #28]
 8004d96:	e043      	b.n	8004e20 <HAL_RCC_GetSysClockFreq+0x28c>
 8004d98:	693b      	ldr	r3, [r7, #16]
 8004d9a:	ee07 3a90 	vmov	s15, r3
 8004d9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004da2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8004e84 <HAL_RCC_GetSysClockFreq+0x2f0>
 8004da6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004daa:	4b2f      	ldr	r3, [pc, #188]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004dac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004dae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004db2:	ee07 3a90 	vmov	s15, r3
 8004db6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004dba:	ed97 6a02 	vldr	s12, [r7, #8]
 8004dbe:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8004e78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004dc2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004dc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004dca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004dce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004dd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004dd6:	edc7 7a07 	vstr	s15, [r7, #28]
 8004dda:	e021      	b.n	8004e20 <HAL_RCC_GetSysClockFreq+0x28c>
 8004ddc:	693b      	ldr	r3, [r7, #16]
 8004dde:	ee07 3a90 	vmov	s15, r3
 8004de2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004de6:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8004e80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8004dea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8004dee:	4b1e      	ldr	r3, [pc, #120]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004df0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004df2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004df6:	ee07 3a90 	vmov	s15, r3
 8004dfa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8004dfe:	ed97 6a02 	vldr	s12, [r7, #8]
 8004e02:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8004e78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8004e06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8004e0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8004e0e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8004e12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8004e16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004e1a:	edc7 7a07 	vstr	s15, [r7, #28]
 8004e1e:	bf00      	nop
 8004e20:	4b11      	ldr	r3, [pc, #68]	@ (8004e68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8004e22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004e24:	0a5b      	lsrs	r3, r3, #9
 8004e26:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8004e2a:	3301      	adds	r3, #1
 8004e2c:	603b      	str	r3, [r7, #0]
 8004e2e:	683b      	ldr	r3, [r7, #0]
 8004e30:	ee07 3a90 	vmov	s15, r3
 8004e34:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8004e38:	edd7 6a07 	vldr	s13, [r7, #28]
 8004e3c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004e40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e44:	ee17 3a90 	vmov	r3, s15
 8004e48:	61bb      	str	r3, [r7, #24]
 8004e4a:	e005      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004e4c:	2300      	movs	r3, #0
 8004e4e:	61bb      	str	r3, [r7, #24]
 8004e50:	e002      	b.n	8004e58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8004e52:	4b07      	ldr	r3, [pc, #28]	@ (8004e70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8004e54:	61bb      	str	r3, [r7, #24]
 8004e56:	bf00      	nop
 8004e58:	69bb      	ldr	r3, [r7, #24]
 8004e5a:	4618      	mov	r0, r3
 8004e5c:	3724      	adds	r7, #36	@ 0x24
 8004e5e:	46bd      	mov	sp, r7
 8004e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e64:	4770      	bx	lr
 8004e66:	bf00      	nop
 8004e68:	58024400 	.word	0x58024400
 8004e6c:	03d09000 	.word	0x03d09000
 8004e70:	003d0900 	.word	0x003d0900
 8004e74:	017d7840 	.word	0x017d7840
 8004e78:	46000000 	.word	0x46000000
 8004e7c:	4c742400 	.word	0x4c742400
 8004e80:	4a742400 	.word	0x4a742400
 8004e84:	4bbebc20 	.word	0x4bbebc20

08004e88 <HAL_RCC_GetHCLKFreq>:
 8004e88:	b580      	push	{r7, lr}
 8004e8a:	b082      	sub	sp, #8
 8004e8c:	af00      	add	r7, sp, #0
 8004e8e:	f7ff fe81 	bl	8004b94 <HAL_RCC_GetSysClockFreq>
 8004e92:	4602      	mov	r2, r0
 8004e94:	4b10      	ldr	r3, [pc, #64]	@ (8004ed8 <HAL_RCC_GetHCLKFreq+0x50>)
 8004e96:	699b      	ldr	r3, [r3, #24]
 8004e98:	0a1b      	lsrs	r3, r3, #8
 8004e9a:	f003 030f 	and.w	r3, r3, #15
 8004e9e:	490f      	ldr	r1, [pc, #60]	@ (8004edc <HAL_RCC_GetHCLKFreq+0x54>)
 8004ea0:	5ccb      	ldrb	r3, [r1, r3]
 8004ea2:	f003 031f 	and.w	r3, r3, #31
 8004ea6:	fa22 f303 	lsr.w	r3, r2, r3
 8004eaa:	607b      	str	r3, [r7, #4]
 8004eac:	4b0a      	ldr	r3, [pc, #40]	@ (8004ed8 <HAL_RCC_GetHCLKFreq+0x50>)
 8004eae:	699b      	ldr	r3, [r3, #24]
 8004eb0:	f003 030f 	and.w	r3, r3, #15
 8004eb4:	4a09      	ldr	r2, [pc, #36]	@ (8004edc <HAL_RCC_GetHCLKFreq+0x54>)
 8004eb6:	5cd3      	ldrb	r3, [r2, r3]
 8004eb8:	f003 031f 	and.w	r3, r3, #31
 8004ebc:	687a      	ldr	r2, [r7, #4]
 8004ebe:	fa22 f303 	lsr.w	r3, r2, r3
 8004ec2:	4a07      	ldr	r2, [pc, #28]	@ (8004ee0 <HAL_RCC_GetHCLKFreq+0x58>)
 8004ec4:	6013      	str	r3, [r2, #0]
 8004ec6:	4a07      	ldr	r2, [pc, #28]	@ (8004ee4 <HAL_RCC_GetHCLKFreq+0x5c>)
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6013      	str	r3, [r2, #0]
 8004ecc:	4b04      	ldr	r3, [pc, #16]	@ (8004ee0 <HAL_RCC_GetHCLKFreq+0x58>)
 8004ece:	681b      	ldr	r3, [r3, #0]
 8004ed0:	4618      	mov	r0, r3
 8004ed2:	3708      	adds	r7, #8
 8004ed4:	46bd      	mov	sp, r7
 8004ed6:	bd80      	pop	{r7, pc}
 8004ed8:	58024400 	.word	0x58024400
 8004edc:	0800b194 	.word	0x0800b194
 8004ee0:	2400016c 	.word	0x2400016c
 8004ee4:	24000168 	.word	0x24000168

08004ee8 <HAL_RCC_GetPCLK1Freq>:
 8004ee8:	b580      	push	{r7, lr}
 8004eea:	af00      	add	r7, sp, #0
 8004eec:	f7ff ffcc 	bl	8004e88 <HAL_RCC_GetHCLKFreq>
 8004ef0:	4602      	mov	r2, r0
 8004ef2:	4b06      	ldr	r3, [pc, #24]	@ (8004f0c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004ef4:	69db      	ldr	r3, [r3, #28]
 8004ef6:	091b      	lsrs	r3, r3, #4
 8004ef8:	f003 0307 	and.w	r3, r3, #7
 8004efc:	4904      	ldr	r1, [pc, #16]	@ (8004f10 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004efe:	5ccb      	ldrb	r3, [r1, r3]
 8004f00:	f003 031f 	and.w	r3, r3, #31
 8004f04:	fa22 f303 	lsr.w	r3, r2, r3
 8004f08:	4618      	mov	r0, r3
 8004f0a:	bd80      	pop	{r7, pc}
 8004f0c:	58024400 	.word	0x58024400
 8004f10:	0800b194 	.word	0x0800b194

08004f14 <HAL_RCC_GetPCLK2Freq>:
 8004f14:	b580      	push	{r7, lr}
 8004f16:	af00      	add	r7, sp, #0
 8004f18:	f7ff ffb6 	bl	8004e88 <HAL_RCC_GetHCLKFreq>
 8004f1c:	4602      	mov	r2, r0
 8004f1e:	4b06      	ldr	r3, [pc, #24]	@ (8004f38 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004f20:	69db      	ldr	r3, [r3, #28]
 8004f22:	0a1b      	lsrs	r3, r3, #8
 8004f24:	f003 0307 	and.w	r3, r3, #7
 8004f28:	4904      	ldr	r1, [pc, #16]	@ (8004f3c <HAL_RCC_GetPCLK2Freq+0x28>)
 8004f2a:	5ccb      	ldrb	r3, [r1, r3]
 8004f2c:	f003 031f 	and.w	r3, r3, #31
 8004f30:	fa22 f303 	lsr.w	r3, r2, r3
 8004f34:	4618      	mov	r0, r3
 8004f36:	bd80      	pop	{r7, pc}
 8004f38:	58024400 	.word	0x58024400
 8004f3c:	0800b194 	.word	0x0800b194

08004f40 <HAL_RCC_GetClockConfig>:
 8004f40:	b480      	push	{r7}
 8004f42:	b083      	sub	sp, #12
 8004f44:	af00      	add	r7, sp, #0
 8004f46:	6078      	str	r0, [r7, #4]
 8004f48:	6039      	str	r1, [r7, #0]
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	223f      	movs	r2, #63	@ 0x3f
 8004f4e:	601a      	str	r2, [r3, #0]
 8004f50:	4b1a      	ldr	r3, [pc, #104]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f52:	691b      	ldr	r3, [r3, #16]
 8004f54:	f003 0207 	and.w	r2, r3, #7
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	605a      	str	r2, [r3, #4]
 8004f5c:	4b17      	ldr	r3, [pc, #92]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f5e:	699b      	ldr	r3, [r3, #24]
 8004f60:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	609a      	str	r2, [r3, #8]
 8004f68:	4b14      	ldr	r3, [pc, #80]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f6a:	699b      	ldr	r3, [r3, #24]
 8004f6c:	f003 020f 	and.w	r2, r3, #15
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	60da      	str	r2, [r3, #12]
 8004f74:	4b11      	ldr	r3, [pc, #68]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f76:	699b      	ldr	r3, [r3, #24]
 8004f78:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	611a      	str	r2, [r3, #16]
 8004f80:	4b0e      	ldr	r3, [pc, #56]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f82:	69db      	ldr	r3, [r3, #28]
 8004f84:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	615a      	str	r2, [r3, #20]
 8004f8c:	4b0b      	ldr	r3, [pc, #44]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f8e:	69db      	ldr	r3, [r3, #28]
 8004f90:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	619a      	str	r2, [r3, #24]
 8004f98:	4b08      	ldr	r3, [pc, #32]	@ (8004fbc <HAL_RCC_GetClockConfig+0x7c>)
 8004f9a:	6a1b      	ldr	r3, [r3, #32]
 8004f9c:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	61da      	str	r2, [r3, #28]
 8004fa4:	4b06      	ldr	r3, [pc, #24]	@ (8004fc0 <HAL_RCC_GetClockConfig+0x80>)
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	f003 020f 	and.w	r2, r3, #15
 8004fac:	683b      	ldr	r3, [r7, #0]
 8004fae:	601a      	str	r2, [r3, #0]
 8004fb0:	bf00      	nop
 8004fb2:	370c      	adds	r7, #12
 8004fb4:	46bd      	mov	sp, r7
 8004fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fba:	4770      	bx	lr
 8004fbc:	58024400 	.word	0x58024400
 8004fc0:	52002000 	.word	0x52002000

08004fc4 <HAL_RCCEx_PeriphCLKConfig>:
 8004fc4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004fc8:	b0ca      	sub	sp, #296	@ 0x128
 8004fca:	af00      	add	r7, sp, #0
 8004fcc:	f8c7 0114 	str.w	r0, [r7, #276]	@ 0x114
 8004fd0:	2300      	movs	r3, #0
 8004fd2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8004fd6:	2300      	movs	r3, #0
 8004fd8:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8004fdc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8004fe0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fe4:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 8004fe8:	2500      	movs	r5, #0
 8004fea:	ea54 0305 	orrs.w	r3, r4, r5
 8004fee:	d049      	beq.n	8005084 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8004ff0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8004ff4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004ff6:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8004ffa:	d02f      	beq.n	800505c <HAL_RCCEx_PeriphCLKConfig+0x98>
 8004ffc:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8005000:	d828      	bhi.n	8005054 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8005002:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8005006:	d01a      	beq.n	800503e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005008:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800500c:	d822      	bhi.n	8005054 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800500e:	2b00      	cmp	r3, #0
 8005010:	d003      	beq.n	800501a <HAL_RCCEx_PeriphCLKConfig+0x56>
 8005012:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005016:	d007      	beq.n	8005028 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8005018:	e01c      	b.n	8005054 <HAL_RCCEx_PeriphCLKConfig+0x90>
 800501a:	4bb8      	ldr	r3, [pc, #736]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800501c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800501e:	4ab7      	ldr	r2, [pc, #732]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005020:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005024:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005026:	e01a      	b.n	800505e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005028:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800502c:	3308      	adds	r3, #8
 800502e:	2102      	movs	r1, #2
 8005030:	4618      	mov	r0, r3
 8005032:	f002 fb61 	bl	80076f8 <RCCEx_PLL2_Config>
 8005036:	4603      	mov	r3, r0
 8005038:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800503c:	e00f      	b.n	800505e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800503e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005042:	3328      	adds	r3, #40	@ 0x28
 8005044:	2102      	movs	r1, #2
 8005046:	4618      	mov	r0, r3
 8005048:	f002 fc08 	bl	800785c <RCCEx_PLL3_Config>
 800504c:	4603      	mov	r3, r0
 800504e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005052:	e004      	b.n	800505e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005054:	2301      	movs	r3, #1
 8005056:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800505a:	e000      	b.n	800505e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 800505c:	bf00      	nop
 800505e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005062:	2b00      	cmp	r3, #0
 8005064:	d10a      	bne.n	800507c <HAL_RCCEx_PeriphCLKConfig+0xb8>
 8005066:	4ba5      	ldr	r3, [pc, #660]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005068:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800506a:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 800506e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005072:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8005074:	4aa1      	ldr	r2, [pc, #644]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005076:	430b      	orrs	r3, r1
 8005078:	6513      	str	r3, [r2, #80]	@ 0x50
 800507a:	e003      	b.n	8005084 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 800507c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005080:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005084:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005088:	e9d3 2300 	ldrd	r2, r3, [r3]
 800508c:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 8005090:	f04f 0900 	mov.w	r9, #0
 8005094:	ea58 0309 	orrs.w	r3, r8, r9
 8005098:	d047      	beq.n	800512a <HAL_RCCEx_PeriphCLKConfig+0x166>
 800509a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800509e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80050a0:	2b04      	cmp	r3, #4
 80050a2:	d82a      	bhi.n	80050fa <HAL_RCCEx_PeriphCLKConfig+0x136>
 80050a4:	a201      	add	r2, pc, #4	@ (adr r2, 80050ac <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 80050a6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80050aa:	bf00      	nop
 80050ac:	080050c1 	.word	0x080050c1
 80050b0:	080050cf 	.word	0x080050cf
 80050b4:	080050e5 	.word	0x080050e5
 80050b8:	08005103 	.word	0x08005103
 80050bc:	08005103 	.word	0x08005103
 80050c0:	4b8e      	ldr	r3, [pc, #568]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80050c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050c4:	4a8d      	ldr	r2, [pc, #564]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80050c6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80050ca:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80050cc:	e01a      	b.n	8005104 <HAL_RCCEx_PeriphCLKConfig+0x140>
 80050ce:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80050d2:	3308      	adds	r3, #8
 80050d4:	2100      	movs	r1, #0
 80050d6:	4618      	mov	r0, r3
 80050d8:	f002 fb0e 	bl	80076f8 <RCCEx_PLL2_Config>
 80050dc:	4603      	mov	r3, r0
 80050de:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80050e2:	e00f      	b.n	8005104 <HAL_RCCEx_PeriphCLKConfig+0x140>
 80050e4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80050e8:	3328      	adds	r3, #40	@ 0x28
 80050ea:	2100      	movs	r1, #0
 80050ec:	4618      	mov	r0, r3
 80050ee:	f002 fbb5 	bl	800785c <RCCEx_PLL3_Config>
 80050f2:	4603      	mov	r3, r0
 80050f4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80050f8:	e004      	b.n	8005104 <HAL_RCCEx_PeriphCLKConfig+0x140>
 80050fa:	2301      	movs	r3, #1
 80050fc:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005100:	e000      	b.n	8005104 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8005102:	bf00      	nop
 8005104:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005108:	2b00      	cmp	r3, #0
 800510a:	d10a      	bne.n	8005122 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 800510c:	4b7b      	ldr	r3, [pc, #492]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800510e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005110:	f023 0107 	bic.w	r1, r3, #7
 8005114:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005118:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800511a:	4a78      	ldr	r2, [pc, #480]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800511c:	430b      	orrs	r3, r1
 800511e:	6513      	str	r3, [r2, #80]	@ 0x50
 8005120:	e003      	b.n	800512a <HAL_RCCEx_PeriphCLKConfig+0x166>
 8005122:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005126:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800512a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800512e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005132:	f402 7a00 	and.w	sl, r2, #512	@ 0x200
 8005136:	f04f 0b00 	mov.w	fp, #0
 800513a:	ea5a 030b 	orrs.w	r3, sl, fp
 800513e:	d04c      	beq.n	80051da <HAL_RCCEx_PeriphCLKConfig+0x216>
 8005140:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005144:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005146:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800514a:	d030      	beq.n	80051ae <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 800514c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005150:	d829      	bhi.n	80051a6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8005152:	2bc0      	cmp	r3, #192	@ 0xc0
 8005154:	d02d      	beq.n	80051b2 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8005156:	2bc0      	cmp	r3, #192	@ 0xc0
 8005158:	d825      	bhi.n	80051a6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800515a:	2b80      	cmp	r3, #128	@ 0x80
 800515c:	d018      	beq.n	8005190 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 800515e:	2b80      	cmp	r3, #128	@ 0x80
 8005160:	d821      	bhi.n	80051a6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8005162:	2b00      	cmp	r3, #0
 8005164:	d002      	beq.n	800516c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8005166:	2b40      	cmp	r3, #64	@ 0x40
 8005168:	d007      	beq.n	800517a <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 800516a:	e01c      	b.n	80051a6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 800516c:	4b63      	ldr	r3, [pc, #396]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800516e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005170:	4a62      	ldr	r2, [pc, #392]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005172:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005176:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005178:	e01c      	b.n	80051b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 800517a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800517e:	3308      	adds	r3, #8
 8005180:	2100      	movs	r1, #0
 8005182:	4618      	mov	r0, r3
 8005184:	f002 fab8 	bl	80076f8 <RCCEx_PLL2_Config>
 8005188:	4603      	mov	r3, r0
 800518a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800518e:	e011      	b.n	80051b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8005190:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005194:	3328      	adds	r3, #40	@ 0x28
 8005196:	2100      	movs	r1, #0
 8005198:	4618      	mov	r0, r3
 800519a:	f002 fb5f 	bl	800785c <RCCEx_PLL3_Config>
 800519e:	4603      	mov	r3, r0
 80051a0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80051a4:	e006      	b.n	80051b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 80051a6:	2301      	movs	r3, #1
 80051a8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80051ac:	e002      	b.n	80051b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 80051ae:	bf00      	nop
 80051b0:	e000      	b.n	80051b4 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 80051b2:	bf00      	nop
 80051b4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d10a      	bne.n	80051d2 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 80051bc:	4b4f      	ldr	r3, [pc, #316]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80051be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80051c0:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 80051c4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80051c8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80051ca:	4a4c      	ldr	r2, [pc, #304]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80051cc:	430b      	orrs	r3, r1
 80051ce:	6513      	str	r3, [r2, #80]	@ 0x50
 80051d0:	e003      	b.n	80051da <HAL_RCCEx_PeriphCLKConfig+0x216>
 80051d2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80051d6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80051da:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80051de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051e2:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 80051e6:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 80051ea:	2300      	movs	r3, #0
 80051ec:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 80051f0:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	@ 0x108
 80051f4:	460b      	mov	r3, r1
 80051f6:	4313      	orrs	r3, r2
 80051f8:	d053      	beq.n	80052a2 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 80051fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80051fe:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8005202:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8005206:	d035      	beq.n	8005274 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8005208:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800520c:	d82e      	bhi.n	800526c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800520e:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8005212:	d031      	beq.n	8005278 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 8005214:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8005218:	d828      	bhi.n	800526c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 800521a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800521e:	d01a      	beq.n	8005256 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8005220:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005224:	d822      	bhi.n	800526c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8005226:	2b00      	cmp	r3, #0
 8005228:	d003      	beq.n	8005232 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 800522a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800522e:	d007      	beq.n	8005240 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8005230:	e01c      	b.n	800526c <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8005232:	4b32      	ldr	r3, [pc, #200]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005234:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005236:	4a31      	ldr	r2, [pc, #196]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005238:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800523c:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800523e:	e01c      	b.n	800527a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8005240:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005244:	3308      	adds	r3, #8
 8005246:	2100      	movs	r1, #0
 8005248:	4618      	mov	r0, r3
 800524a:	f002 fa55 	bl	80076f8 <RCCEx_PLL2_Config>
 800524e:	4603      	mov	r3, r0
 8005250:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005254:	e011      	b.n	800527a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8005256:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800525a:	3328      	adds	r3, #40	@ 0x28
 800525c:	2100      	movs	r1, #0
 800525e:	4618      	mov	r0, r3
 8005260:	f002 fafc 	bl	800785c <RCCEx_PLL3_Config>
 8005264:	4603      	mov	r3, r0
 8005266:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800526a:	e006      	b.n	800527a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 800526c:	2301      	movs	r3, #1
 800526e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005272:	e002      	b.n	800527a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8005274:	bf00      	nop
 8005276:	e000      	b.n	800527a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8005278:	bf00      	nop
 800527a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800527e:	2b00      	cmp	r3, #0
 8005280:	d10b      	bne.n	800529a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 8005282:	4b1e      	ldr	r3, [pc, #120]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005284:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005286:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 800528a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800528e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8005292:	4a1a      	ldr	r2, [pc, #104]	@ (80052fc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8005294:	430b      	orrs	r3, r1
 8005296:	6593      	str	r3, [r2, #88]	@ 0x58
 8005298:	e003      	b.n	80052a2 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 800529a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800529e:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80052a2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80052a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052aa:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 80052ae:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 80052b2:	2300      	movs	r3, #0
 80052b4:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 80052b8:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 80052bc:	460b      	mov	r3, r1
 80052be:	4313      	orrs	r3, r2
 80052c0:	d056      	beq.n	8005370 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 80052c2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80052c6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80052ca:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80052ce:	d038      	beq.n	8005342 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 80052d0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80052d4:	d831      	bhi.n	800533a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80052d6:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80052da:	d034      	beq.n	8005346 <HAL_RCCEx_PeriphCLKConfig+0x382>
 80052dc:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80052e0:	d82b      	bhi.n	800533a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80052e2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80052e6:	d01d      	beq.n	8005324 <HAL_RCCEx_PeriphCLKConfig+0x360>
 80052e8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80052ec:	d825      	bhi.n	800533a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d006      	beq.n	8005300 <HAL_RCCEx_PeriphCLKConfig+0x33c>
 80052f2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80052f6:	d00a      	beq.n	800530e <HAL_RCCEx_PeriphCLKConfig+0x34a>
 80052f8:	e01f      	b.n	800533a <HAL_RCCEx_PeriphCLKConfig+0x376>
 80052fa:	bf00      	nop
 80052fc:	58024400 	.word	0x58024400
 8005300:	4ba2      	ldr	r3, [pc, #648]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005302:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005304:	4aa1      	ldr	r2, [pc, #644]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005306:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800530a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800530c:	e01c      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x384>
 800530e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005312:	3308      	adds	r3, #8
 8005314:	2100      	movs	r1, #0
 8005316:	4618      	mov	r0, r3
 8005318:	f002 f9ee 	bl	80076f8 <RCCEx_PLL2_Config>
 800531c:	4603      	mov	r3, r0
 800531e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005322:	e011      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8005324:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005328:	3328      	adds	r3, #40	@ 0x28
 800532a:	2100      	movs	r1, #0
 800532c:	4618      	mov	r0, r3
 800532e:	f002 fa95 	bl	800785c <RCCEx_PLL3_Config>
 8005332:	4603      	mov	r3, r0
 8005334:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005338:	e006      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x384>
 800533a:	2301      	movs	r3, #1
 800533c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005340:	e002      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8005342:	bf00      	nop
 8005344:	e000      	b.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8005346:	bf00      	nop
 8005348:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800534c:	2b00      	cmp	r3, #0
 800534e:	d10b      	bne.n	8005368 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8005350:	4b8e      	ldr	r3, [pc, #568]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005352:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005354:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8005358:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800535c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8005360:	4a8a      	ldr	r2, [pc, #552]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005362:	430b      	orrs	r3, r1
 8005364:	6593      	str	r3, [r2, #88]	@ 0x58
 8005366:	e003      	b.n	8005370 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 8005368:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800536c:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005370:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005374:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005378:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 800537c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005380:	2300      	movs	r3, #0
 8005382:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8005386:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 800538a:	460b      	mov	r3, r1
 800538c:	4313      	orrs	r3, r2
 800538e:	d03a      	beq.n	8005406 <HAL_RCCEx_PeriphCLKConfig+0x442>
 8005390:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005394:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005396:	2b30      	cmp	r3, #48	@ 0x30
 8005398:	d01f      	beq.n	80053da <HAL_RCCEx_PeriphCLKConfig+0x416>
 800539a:	2b30      	cmp	r3, #48	@ 0x30
 800539c:	d819      	bhi.n	80053d2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800539e:	2b20      	cmp	r3, #32
 80053a0:	d00c      	beq.n	80053bc <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 80053a2:	2b20      	cmp	r3, #32
 80053a4:	d815      	bhi.n	80053d2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80053a6:	2b00      	cmp	r3, #0
 80053a8:	d019      	beq.n	80053de <HAL_RCCEx_PeriphCLKConfig+0x41a>
 80053aa:	2b10      	cmp	r3, #16
 80053ac:	d111      	bne.n	80053d2 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80053ae:	4b77      	ldr	r3, [pc, #476]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80053b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80053b2:	4a76      	ldr	r2, [pc, #472]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80053b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80053b8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80053ba:	e011      	b.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 80053bc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80053c0:	3308      	adds	r3, #8
 80053c2:	2102      	movs	r1, #2
 80053c4:	4618      	mov	r0, r3
 80053c6:	f002 f997 	bl	80076f8 <RCCEx_PLL2_Config>
 80053ca:	4603      	mov	r3, r0
 80053cc:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80053d0:	e006      	b.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 80053d2:	2301      	movs	r3, #1
 80053d4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80053d8:	e002      	b.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 80053da:	bf00      	nop
 80053dc:	e000      	b.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 80053de:	bf00      	nop
 80053e0:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80053e4:	2b00      	cmp	r3, #0
 80053e6:	d10a      	bne.n	80053fe <HAL_RCCEx_PeriphCLKConfig+0x43a>
 80053e8:	4b68      	ldr	r3, [pc, #416]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80053ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80053ec:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 80053f0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80053f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80053f6:	4a65      	ldr	r2, [pc, #404]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80053f8:	430b      	orrs	r3, r1
 80053fa:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80053fc:	e003      	b.n	8005406 <HAL_RCCEx_PeriphCLKConfig+0x442>
 80053fe:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005402:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005406:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800540a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800540e:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8005412:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005416:	2300      	movs	r3, #0
 8005418:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800541c:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8005420:	460b      	mov	r3, r1
 8005422:	4313      	orrs	r3, r2
 8005424:	d051      	beq.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x506>
 8005426:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800542a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800542c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005430:	d035      	beq.n	800549e <HAL_RCCEx_PeriphCLKConfig+0x4da>
 8005432:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005436:	d82e      	bhi.n	8005496 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8005438:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800543c:	d031      	beq.n	80054a2 <HAL_RCCEx_PeriphCLKConfig+0x4de>
 800543e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8005442:	d828      	bhi.n	8005496 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8005444:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005448:	d01a      	beq.n	8005480 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 800544a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800544e:	d822      	bhi.n	8005496 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8005450:	2b00      	cmp	r3, #0
 8005452:	d003      	beq.n	800545c <HAL_RCCEx_PeriphCLKConfig+0x498>
 8005454:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005458:	d007      	beq.n	800546a <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 800545a:	e01c      	b.n	8005496 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800545c:	4b4b      	ldr	r3, [pc, #300]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800545e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005460:	4a4a      	ldr	r2, [pc, #296]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005462:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005466:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005468:	e01c      	b.n	80054a4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800546a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800546e:	3308      	adds	r3, #8
 8005470:	2100      	movs	r1, #0
 8005472:	4618      	mov	r0, r3
 8005474:	f002 f940 	bl	80076f8 <RCCEx_PLL2_Config>
 8005478:	4603      	mov	r3, r0
 800547a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800547e:	e011      	b.n	80054a4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8005480:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005484:	3328      	adds	r3, #40	@ 0x28
 8005486:	2100      	movs	r1, #0
 8005488:	4618      	mov	r0, r3
 800548a:	f002 f9e7 	bl	800785c <RCCEx_PLL3_Config>
 800548e:	4603      	mov	r3, r0
 8005490:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005494:	e006      	b.n	80054a4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8005496:	2301      	movs	r3, #1
 8005498:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800549c:	e002      	b.n	80054a4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 800549e:	bf00      	nop
 80054a0:	e000      	b.n	80054a4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80054a2:	bf00      	nop
 80054a4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80054a8:	2b00      	cmp	r3, #0
 80054aa:	d10a      	bne.n	80054c2 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80054ac:	4b37      	ldr	r3, [pc, #220]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80054ae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80054b0:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 80054b4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80054b8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80054ba:	4a34      	ldr	r2, [pc, #208]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80054bc:	430b      	orrs	r3, r1
 80054be:	6513      	str	r3, [r2, #80]	@ 0x50
 80054c0:	e003      	b.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x506>
 80054c2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80054c6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80054ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80054ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054d2:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 80054d6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80054da:	2300      	movs	r3, #0
 80054dc:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 80054e0:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 80054e4:	460b      	mov	r3, r1
 80054e6:	4313      	orrs	r3, r2
 80054e8:	d056      	beq.n	8005598 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 80054ea:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80054ee:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80054f0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80054f4:	d033      	beq.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x59a>
 80054f6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80054fa:	d82c      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x592>
 80054fc:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005500:	d02f      	beq.n	8005562 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8005502:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005506:	d826      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005508:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800550c:	d02b      	beq.n	8005566 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 800550e:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8005512:	d820      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005514:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005518:	d012      	beq.n	8005540 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 800551a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800551e:	d81a      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8005520:	2b00      	cmp	r3, #0
 8005522:	d022      	beq.n	800556a <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8005524:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005528:	d115      	bne.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x592>
 800552a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800552e:	3308      	adds	r3, #8
 8005530:	2101      	movs	r1, #1
 8005532:	4618      	mov	r0, r3
 8005534:	f002 f8e0 	bl	80076f8 <RCCEx_PLL2_Config>
 8005538:	4603      	mov	r3, r0
 800553a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800553e:	e015      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8005540:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005544:	3328      	adds	r3, #40	@ 0x28
 8005546:	2101      	movs	r1, #1
 8005548:	4618      	mov	r0, r3
 800554a:	f002 f987 	bl	800785c <RCCEx_PLL3_Config>
 800554e:	4603      	mov	r3, r0
 8005550:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005554:	e00a      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8005556:	2301      	movs	r3, #1
 8005558:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800555c:	e006      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800555e:	bf00      	nop
 8005560:	e004      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8005562:	bf00      	nop
 8005564:	e002      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8005566:	bf00      	nop
 8005568:	e000      	b.n	800556c <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 800556a:	bf00      	nop
 800556c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005570:	2b00      	cmp	r3, #0
 8005572:	d10d      	bne.n	8005590 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8005574:	4b05      	ldr	r3, [pc, #20]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005576:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005578:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 800557c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005580:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005582:	4a02      	ldr	r2, [pc, #8]	@ (800558c <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8005584:	430b      	orrs	r3, r1
 8005586:	6513      	str	r3, [r2, #80]	@ 0x50
 8005588:	e006      	b.n	8005598 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800558a:	bf00      	nop
 800558c:	58024400 	.word	0x58024400
 8005590:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005594:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005598:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800559c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055a0:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 80055a4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80055a8:	2300      	movs	r3, #0
 80055aa:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80055ae:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 80055b2:	460b      	mov	r3, r1
 80055b4:	4313      	orrs	r3, r2
 80055b6:	d055      	beq.n	8005664 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 80055b8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80055bc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80055c0:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80055c4:	d033      	beq.n	800562e <HAL_RCCEx_PeriphCLKConfig+0x66a>
 80055c6:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80055ca:	d82c      	bhi.n	8005626 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80055cc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80055d0:	d02f      	beq.n	8005632 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 80055d2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80055d6:	d826      	bhi.n	8005626 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80055d8:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80055dc:	d02b      	beq.n	8005636 <HAL_RCCEx_PeriphCLKConfig+0x672>
 80055de:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80055e2:	d820      	bhi.n	8005626 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80055e4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80055e8:	d012      	beq.n	8005610 <HAL_RCCEx_PeriphCLKConfig+0x64c>
 80055ea:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80055ee:	d81a      	bhi.n	8005626 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	d022      	beq.n	800563a <HAL_RCCEx_PeriphCLKConfig+0x676>
 80055f4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80055f8:	d115      	bne.n	8005626 <HAL_RCCEx_PeriphCLKConfig+0x662>
 80055fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80055fe:	3308      	adds	r3, #8
 8005600:	2101      	movs	r1, #1
 8005602:	4618      	mov	r0, r3
 8005604:	f002 f878 	bl	80076f8 <RCCEx_PLL2_Config>
 8005608:	4603      	mov	r3, r0
 800560a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800560e:	e015      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8005610:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005614:	3328      	adds	r3, #40	@ 0x28
 8005616:	2101      	movs	r1, #1
 8005618:	4618      	mov	r0, r3
 800561a:	f002 f91f 	bl	800785c <RCCEx_PLL3_Config>
 800561e:	4603      	mov	r3, r0
 8005620:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005624:	e00a      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8005626:	2301      	movs	r3, #1
 8005628:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800562c:	e006      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 800562e:	bf00      	nop
 8005630:	e004      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8005632:	bf00      	nop
 8005634:	e002      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8005636:	bf00      	nop
 8005638:	e000      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x678>
 800563a:	bf00      	nop
 800563c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005640:	2b00      	cmp	r3, #0
 8005642:	d10b      	bne.n	800565c <HAL_RCCEx_PeriphCLKConfig+0x698>
 8005644:	4ba3      	ldr	r3, [pc, #652]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005646:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005648:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800564c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005650:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8005654:	4a9f      	ldr	r2, [pc, #636]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005656:	430b      	orrs	r3, r1
 8005658:	6593      	str	r3, [r2, #88]	@ 0x58
 800565a:	e003      	b.n	8005664 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 800565c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005660:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005664:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005668:	e9d3 2300 	ldrd	r2, r3, [r3]
 800566c:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 8005670:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005674:	2300      	movs	r3, #0
 8005676:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800567a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800567e:	460b      	mov	r3, r1
 8005680:	4313      	orrs	r3, r2
 8005682:	d037      	beq.n	80056f4 <HAL_RCCEx_PeriphCLKConfig+0x730>
 8005684:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005688:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800568a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800568e:	d00e      	beq.n	80056ae <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8005690:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005694:	d816      	bhi.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x700>
 8005696:	2b00      	cmp	r3, #0
 8005698:	d018      	beq.n	80056cc <HAL_RCCEx_PeriphCLKConfig+0x708>
 800569a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800569e:	d111      	bne.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x700>
 80056a0:	4b8c      	ldr	r3, [pc, #560]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80056a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056a4:	4a8b      	ldr	r2, [pc, #556]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80056a6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80056aa:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80056ac:	e00f      	b.n	80056ce <HAL_RCCEx_PeriphCLKConfig+0x70a>
 80056ae:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80056b2:	3308      	adds	r3, #8
 80056b4:	2101      	movs	r1, #1
 80056b6:	4618      	mov	r0, r3
 80056b8:	f002 f81e 	bl	80076f8 <RCCEx_PLL2_Config>
 80056bc:	4603      	mov	r3, r0
 80056be:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80056c2:	e004      	b.n	80056ce <HAL_RCCEx_PeriphCLKConfig+0x70a>
 80056c4:	2301      	movs	r3, #1
 80056c6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80056ca:	e000      	b.n	80056ce <HAL_RCCEx_PeriphCLKConfig+0x70a>
 80056cc:	bf00      	nop
 80056ce:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80056d2:	2b00      	cmp	r3, #0
 80056d4:	d10a      	bne.n	80056ec <HAL_RCCEx_PeriphCLKConfig+0x728>
 80056d6:	4b7f      	ldr	r3, [pc, #508]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80056d8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80056da:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 80056de:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80056e2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80056e4:	4a7b      	ldr	r2, [pc, #492]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80056e6:	430b      	orrs	r3, r1
 80056e8:	6513      	str	r3, [r2, #80]	@ 0x50
 80056ea:	e003      	b.n	80056f4 <HAL_RCCEx_PeriphCLKConfig+0x730>
 80056ec:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80056f0:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80056f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80056f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056fc:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 8005700:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005704:	2300      	movs	r3, #0
 8005706:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800570a:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 800570e:	460b      	mov	r3, r1
 8005710:	4313      	orrs	r3, r2
 8005712:	d039      	beq.n	8005788 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 8005714:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005718:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800571a:	2b03      	cmp	r3, #3
 800571c:	d81c      	bhi.n	8005758 <HAL_RCCEx_PeriphCLKConfig+0x794>
 800571e:	a201      	add	r2, pc, #4	@ (adr r2, 8005724 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 8005720:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005724:	08005761 	.word	0x08005761
 8005728:	08005735 	.word	0x08005735
 800572c:	08005743 	.word	0x08005743
 8005730:	08005761 	.word	0x08005761
 8005734:	4b67      	ldr	r3, [pc, #412]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005736:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005738:	4a66      	ldr	r2, [pc, #408]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800573a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800573e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005740:	e00f      	b.n	8005762 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 8005742:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005746:	3308      	adds	r3, #8
 8005748:	2102      	movs	r1, #2
 800574a:	4618      	mov	r0, r3
 800574c:	f001 ffd4 	bl	80076f8 <RCCEx_PLL2_Config>
 8005750:	4603      	mov	r3, r0
 8005752:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005756:	e004      	b.n	8005762 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 8005758:	2301      	movs	r3, #1
 800575a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800575e:	e000      	b.n	8005762 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 8005760:	bf00      	nop
 8005762:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005766:	2b00      	cmp	r3, #0
 8005768:	d10a      	bne.n	8005780 <HAL_RCCEx_PeriphCLKConfig+0x7bc>
 800576a:	4b5a      	ldr	r3, [pc, #360]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800576c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800576e:	f023 0103 	bic.w	r1, r3, #3
 8005772:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005776:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005778:	4a56      	ldr	r2, [pc, #344]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800577a:	430b      	orrs	r3, r1
 800577c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800577e:	e003      	b.n	8005788 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 8005780:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005784:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005788:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800578c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005790:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8005794:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005798:	2300      	movs	r3, #0
 800579a:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800579e:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 80057a2:	460b      	mov	r3, r1
 80057a4:	4313      	orrs	r3, r2
 80057a6:	f000 809f 	beq.w	80058e8 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80057aa:	4b4b      	ldr	r3, [pc, #300]	@ (80058d8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	4a4a      	ldr	r2, [pc, #296]	@ (80058d8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80057b0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80057b4:	6013      	str	r3, [r2, #0]
 80057b6:	f7fc fbbb 	bl	8001f30 <HAL_GetTick>
 80057ba:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 80057be:	e00b      	b.n	80057d8 <HAL_RCCEx_PeriphCLKConfig+0x814>
 80057c0:	f7fc fbb6 	bl	8001f30 <HAL_GetTick>
 80057c4:	4602      	mov	r2, r0
 80057c6:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 80057ca:	1ad3      	subs	r3, r2, r3
 80057cc:	2b64      	cmp	r3, #100	@ 0x64
 80057ce:	d903      	bls.n	80057d8 <HAL_RCCEx_PeriphCLKConfig+0x814>
 80057d0:	2303      	movs	r3, #3
 80057d2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80057d6:	e005      	b.n	80057e4 <HAL_RCCEx_PeriphCLKConfig+0x820>
 80057d8:	4b3f      	ldr	r3, [pc, #252]	@ (80058d8 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80057da:	681b      	ldr	r3, [r3, #0]
 80057dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d0ed      	beq.n	80057c0 <HAL_RCCEx_PeriphCLKConfig+0x7fc>
 80057e4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d179      	bne.n	80058e0 <HAL_RCCEx_PeriphCLKConfig+0x91c>
 80057ec:	4b39      	ldr	r3, [pc, #228]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80057ee:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 80057f0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80057f4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80057f8:	4053      	eors	r3, r2
 80057fa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d015      	beq.n	800582e <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8005802:	4b34      	ldr	r3, [pc, #208]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005804:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005806:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800580a:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 800580e:	4b31      	ldr	r3, [pc, #196]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005810:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005812:	4a30      	ldr	r2, [pc, #192]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005814:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005818:	6713      	str	r3, [r2, #112]	@ 0x70
 800581a:	4b2e      	ldr	r3, [pc, #184]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800581c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800581e:	4a2d      	ldr	r2, [pc, #180]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005820:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005824:	6713      	str	r3, [r2, #112]	@ 0x70
 8005826:	4a2b      	ldr	r2, [pc, #172]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005828:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 800582c:	6713      	str	r3, [r2, #112]	@ 0x70
 800582e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005832:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8005836:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800583a:	d118      	bne.n	800586e <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 800583c:	f7fc fb78 	bl	8001f30 <HAL_GetTick>
 8005840:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 8005844:	e00d      	b.n	8005862 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 8005846:	f7fc fb73 	bl	8001f30 <HAL_GetTick>
 800584a:	4602      	mov	r2, r0
 800584c:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 8005850:	1ad2      	subs	r2, r2, r3
 8005852:	f241 3388 	movw	r3, #5000	@ 0x1388
 8005856:	429a      	cmp	r2, r3
 8005858:	d903      	bls.n	8005862 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 800585a:	2303      	movs	r3, #3
 800585c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005860:	e005      	b.n	800586e <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 8005862:	4b1c      	ldr	r3, [pc, #112]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8005864:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005866:	f003 0302 	and.w	r3, r3, #2
 800586a:	2b00      	cmp	r3, #0
 800586c:	d0eb      	beq.n	8005846 <HAL_RCCEx_PeriphCLKConfig+0x882>
 800586e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005872:	2b00      	cmp	r3, #0
 8005874:	d129      	bne.n	80058ca <HAL_RCCEx_PeriphCLKConfig+0x906>
 8005876:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800587a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800587e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005882:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8005886:	d10e      	bne.n	80058a6 <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 8005888:	4b12      	ldr	r3, [pc, #72]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800588a:	691b      	ldr	r3, [r3, #16]
 800588c:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 8005890:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005894:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8005898:	091a      	lsrs	r2, r3, #4
 800589a:	4b10      	ldr	r3, [pc, #64]	@ (80058dc <HAL_RCCEx_PeriphCLKConfig+0x918>)
 800589c:	4013      	ands	r3, r2
 800589e:	4a0d      	ldr	r2, [pc, #52]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80058a0:	430b      	orrs	r3, r1
 80058a2:	6113      	str	r3, [r2, #16]
 80058a4:	e005      	b.n	80058b2 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 80058a6:	4b0b      	ldr	r3, [pc, #44]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80058a8:	691b      	ldr	r3, [r3, #16]
 80058aa:	4a0a      	ldr	r2, [pc, #40]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80058ac:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80058b0:	6113      	str	r3, [r2, #16]
 80058b2:	4b08      	ldr	r3, [pc, #32]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80058b4:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 80058b6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80058ba:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80058be:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80058c2:	4a04      	ldr	r2, [pc, #16]	@ (80058d4 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80058c4:	430b      	orrs	r3, r1
 80058c6:	6713      	str	r3, [r2, #112]	@ 0x70
 80058c8:	e00e      	b.n	80058e8 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80058ca:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80058ce:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80058d2:	e009      	b.n	80058e8 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80058d4:	58024400 	.word	0x58024400
 80058d8:	58024800 	.word	0x58024800
 80058dc:	00ffffcf 	.word	0x00ffffcf
 80058e0:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80058e4:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80058e8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80058ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058f0:	f002 0301 	and.w	r3, r2, #1
 80058f4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80058f8:	2300      	movs	r3, #0
 80058fa:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80058fe:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8005902:	460b      	mov	r3, r1
 8005904:	4313      	orrs	r3, r2
 8005906:	f000 8089 	beq.w	8005a1c <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800590a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800590e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005910:	2b28      	cmp	r3, #40	@ 0x28
 8005912:	d86b      	bhi.n	80059ec <HAL_RCCEx_PeriphCLKConfig+0xa28>
 8005914:	a201      	add	r2, pc, #4	@ (adr r2, 800591c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8005916:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800591a:	bf00      	nop
 800591c:	080059f5 	.word	0x080059f5
 8005920:	080059ed 	.word	0x080059ed
 8005924:	080059ed 	.word	0x080059ed
 8005928:	080059ed 	.word	0x080059ed
 800592c:	080059ed 	.word	0x080059ed
 8005930:	080059ed 	.word	0x080059ed
 8005934:	080059ed 	.word	0x080059ed
 8005938:	080059ed 	.word	0x080059ed
 800593c:	080059c1 	.word	0x080059c1
 8005940:	080059ed 	.word	0x080059ed
 8005944:	080059ed 	.word	0x080059ed
 8005948:	080059ed 	.word	0x080059ed
 800594c:	080059ed 	.word	0x080059ed
 8005950:	080059ed 	.word	0x080059ed
 8005954:	080059ed 	.word	0x080059ed
 8005958:	080059ed 	.word	0x080059ed
 800595c:	080059d7 	.word	0x080059d7
 8005960:	080059ed 	.word	0x080059ed
 8005964:	080059ed 	.word	0x080059ed
 8005968:	080059ed 	.word	0x080059ed
 800596c:	080059ed 	.word	0x080059ed
 8005970:	080059ed 	.word	0x080059ed
 8005974:	080059ed 	.word	0x080059ed
 8005978:	080059ed 	.word	0x080059ed
 800597c:	080059f5 	.word	0x080059f5
 8005980:	080059ed 	.word	0x080059ed
 8005984:	080059ed 	.word	0x080059ed
 8005988:	080059ed 	.word	0x080059ed
 800598c:	080059ed 	.word	0x080059ed
 8005990:	080059ed 	.word	0x080059ed
 8005994:	080059ed 	.word	0x080059ed
 8005998:	080059ed 	.word	0x080059ed
 800599c:	080059f5 	.word	0x080059f5
 80059a0:	080059ed 	.word	0x080059ed
 80059a4:	080059ed 	.word	0x080059ed
 80059a8:	080059ed 	.word	0x080059ed
 80059ac:	080059ed 	.word	0x080059ed
 80059b0:	080059ed 	.word	0x080059ed
 80059b4:	080059ed 	.word	0x080059ed
 80059b8:	080059ed 	.word	0x080059ed
 80059bc:	080059f5 	.word	0x080059f5
 80059c0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80059c4:	3308      	adds	r3, #8
 80059c6:	2101      	movs	r1, #1
 80059c8:	4618      	mov	r0, r3
 80059ca:	f001 fe95 	bl	80076f8 <RCCEx_PLL2_Config>
 80059ce:	4603      	mov	r3, r0
 80059d0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80059d4:	e00f      	b.n	80059f6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 80059d6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80059da:	3328      	adds	r3, #40	@ 0x28
 80059dc:	2101      	movs	r1, #1
 80059de:	4618      	mov	r0, r3
 80059e0:	f001 ff3c 	bl	800785c <RCCEx_PLL3_Config>
 80059e4:	4603      	mov	r3, r0
 80059e6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80059ea:	e004      	b.n	80059f6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 80059ec:	2301      	movs	r3, #1
 80059ee:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80059f2:	e000      	b.n	80059f6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 80059f4:	bf00      	nop
 80059f6:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d10a      	bne.n	8005a14 <HAL_RCCEx_PeriphCLKConfig+0xa50>
 80059fe:	4bbf      	ldr	r3, [pc, #764]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005a00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005a02:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 8005a06:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005a0a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8005a0c:	4abb      	ldr	r2, [pc, #748]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005a0e:	430b      	orrs	r3, r1
 8005a10:	6553      	str	r3, [r2, #84]	@ 0x54
 8005a12:	e003      	b.n	8005a1c <HAL_RCCEx_PeriphCLKConfig+0xa58>
 8005a14:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005a18:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005a1c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005a20:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a24:	f002 0302 	and.w	r3, r2, #2
 8005a28:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005a2c:	2300      	movs	r3, #0
 8005a2e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8005a32:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 8005a36:	460b      	mov	r3, r1
 8005a38:	4313      	orrs	r3, r2
 8005a3a:	d041      	beq.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 8005a3c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005a40:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8005a42:	2b05      	cmp	r3, #5
 8005a44:	d824      	bhi.n	8005a90 <HAL_RCCEx_PeriphCLKConfig+0xacc>
 8005a46:	a201      	add	r2, pc, #4	@ (adr r2, 8005a4c <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 8005a48:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005a4c:	08005a99 	.word	0x08005a99
 8005a50:	08005a65 	.word	0x08005a65
 8005a54:	08005a7b 	.word	0x08005a7b
 8005a58:	08005a99 	.word	0x08005a99
 8005a5c:	08005a99 	.word	0x08005a99
 8005a60:	08005a99 	.word	0x08005a99
 8005a64:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005a68:	3308      	adds	r3, #8
 8005a6a:	2101      	movs	r1, #1
 8005a6c:	4618      	mov	r0, r3
 8005a6e:	f001 fe43 	bl	80076f8 <RCCEx_PLL2_Config>
 8005a72:	4603      	mov	r3, r0
 8005a74:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005a78:	e00f      	b.n	8005a9a <HAL_RCCEx_PeriphCLKConfig+0xad6>
 8005a7a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005a7e:	3328      	adds	r3, #40	@ 0x28
 8005a80:	2101      	movs	r1, #1
 8005a82:	4618      	mov	r0, r3
 8005a84:	f001 feea 	bl	800785c <RCCEx_PLL3_Config>
 8005a88:	4603      	mov	r3, r0
 8005a8a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005a8e:	e004      	b.n	8005a9a <HAL_RCCEx_PeriphCLKConfig+0xad6>
 8005a90:	2301      	movs	r3, #1
 8005a92:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005a96:	e000      	b.n	8005a9a <HAL_RCCEx_PeriphCLKConfig+0xad6>
 8005a98:	bf00      	nop
 8005a9a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d10a      	bne.n	8005ab8 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
 8005aa2:	4b96      	ldr	r3, [pc, #600]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005aa4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005aa6:	f023 0107 	bic.w	r1, r3, #7
 8005aaa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005aae:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8005ab0:	4a92      	ldr	r2, [pc, #584]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005ab2:	430b      	orrs	r3, r1
 8005ab4:	6553      	str	r3, [r2, #84]	@ 0x54
 8005ab6:	e003      	b.n	8005ac0 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 8005ab8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005abc:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005ac0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005ac4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ac8:	f002 0304 	and.w	r3, r2, #4
 8005acc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8005ad0:	2300      	movs	r3, #0
 8005ad2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005ad6:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 8005ada:	460b      	mov	r3, r1
 8005adc:	4313      	orrs	r3, r2
 8005ade:	d044      	beq.n	8005b6a <HAL_RCCEx_PeriphCLKConfig+0xba6>
 8005ae0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005ae4:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005ae8:	2b05      	cmp	r3, #5
 8005aea:	d825      	bhi.n	8005b38 <HAL_RCCEx_PeriphCLKConfig+0xb74>
 8005aec:	a201      	add	r2, pc, #4	@ (adr r2, 8005af4 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 8005aee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005af2:	bf00      	nop
 8005af4:	08005b41 	.word	0x08005b41
 8005af8:	08005b0d 	.word	0x08005b0d
 8005afc:	08005b23 	.word	0x08005b23
 8005b00:	08005b41 	.word	0x08005b41
 8005b04:	08005b41 	.word	0x08005b41
 8005b08:	08005b41 	.word	0x08005b41
 8005b0c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005b10:	3308      	adds	r3, #8
 8005b12:	2101      	movs	r1, #1
 8005b14:	4618      	mov	r0, r3
 8005b16:	f001 fdef 	bl	80076f8 <RCCEx_PLL2_Config>
 8005b1a:	4603      	mov	r3, r0
 8005b1c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005b20:	e00f      	b.n	8005b42 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8005b22:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005b26:	3328      	adds	r3, #40	@ 0x28
 8005b28:	2101      	movs	r1, #1
 8005b2a:	4618      	mov	r0, r3
 8005b2c:	f001 fe96 	bl	800785c <RCCEx_PLL3_Config>
 8005b30:	4603      	mov	r3, r0
 8005b32:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005b36:	e004      	b.n	8005b42 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8005b38:	2301      	movs	r3, #1
 8005b3a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005b3e:	e000      	b.n	8005b42 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8005b40:	bf00      	nop
 8005b42:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005b46:	2b00      	cmp	r3, #0
 8005b48:	d10b      	bne.n	8005b62 <HAL_RCCEx_PeriphCLKConfig+0xb9e>
 8005b4a:	4b6c      	ldr	r3, [pc, #432]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005b4c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b4e:	f023 0107 	bic.w	r1, r3, #7
 8005b52:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005b56:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8005b5a:	4a68      	ldr	r2, [pc, #416]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005b5c:	430b      	orrs	r3, r1
 8005b5e:	6593      	str	r3, [r2, #88]	@ 0x58
 8005b60:	e003      	b.n	8005b6a <HAL_RCCEx_PeriphCLKConfig+0xba6>
 8005b62:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005b66:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005b6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005b6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b72:	f002 0320 	and.w	r3, r2, #32
 8005b76:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005b7a:	2300      	movs	r3, #0
 8005b7c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8005b80:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8005b84:	460b      	mov	r3, r1
 8005b86:	4313      	orrs	r3, r2
 8005b88:	d055      	beq.n	8005c36 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 8005b8a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005b8e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005b92:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8005b96:	d033      	beq.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 8005b98:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8005b9c:	d82c      	bhi.n	8005bf8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005b9e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005ba2:	d02f      	beq.n	8005c04 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 8005ba4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005ba8:	d826      	bhi.n	8005bf8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005baa:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8005bae:	d02b      	beq.n	8005c08 <HAL_RCCEx_PeriphCLKConfig+0xc44>
 8005bb0:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8005bb4:	d820      	bhi.n	8005bf8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005bb6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005bba:	d012      	beq.n	8005be2 <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 8005bbc:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005bc0:	d81a      	bhi.n	8005bf8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d022      	beq.n	8005c0c <HAL_RCCEx_PeriphCLKConfig+0xc48>
 8005bc6:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005bca:	d115      	bne.n	8005bf8 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8005bcc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005bd0:	3308      	adds	r3, #8
 8005bd2:	2100      	movs	r1, #0
 8005bd4:	4618      	mov	r0, r3
 8005bd6:	f001 fd8f 	bl	80076f8 <RCCEx_PLL2_Config>
 8005bda:	4603      	mov	r3, r0
 8005bdc:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005be0:	e015      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005be2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005be6:	3328      	adds	r3, #40	@ 0x28
 8005be8:	2102      	movs	r1, #2
 8005bea:	4618      	mov	r0, r3
 8005bec:	f001 fe36 	bl	800785c <RCCEx_PLL3_Config>
 8005bf0:	4603      	mov	r3, r0
 8005bf2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005bf6:	e00a      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005bf8:	2301      	movs	r3, #1
 8005bfa:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005bfe:	e006      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005c00:	bf00      	nop
 8005c02:	e004      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005c04:	bf00      	nop
 8005c06:	e002      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005c08:	bf00      	nop
 8005c0a:	e000      	b.n	8005c0e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8005c0c:	bf00      	nop
 8005c0e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005c12:	2b00      	cmp	r3, #0
 8005c14:	d10b      	bne.n	8005c2e <HAL_RCCEx_PeriphCLKConfig+0xc6a>
 8005c16:	4b39      	ldr	r3, [pc, #228]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005c18:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005c1a:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8005c1e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005c22:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8005c26:	4a35      	ldr	r2, [pc, #212]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005c28:	430b      	orrs	r3, r1
 8005c2a:	6553      	str	r3, [r2, #84]	@ 0x54
 8005c2c:	e003      	b.n	8005c36 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 8005c2e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005c32:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005c36:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005c3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c3e:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8005c42:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8005c46:	2300      	movs	r3, #0
 8005c48:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8005c4c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 8005c50:	460b      	mov	r3, r1
 8005c52:	4313      	orrs	r3, r2
 8005c54:	d058      	beq.n	8005d08 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8005c56:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005c5a:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8005c5e:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8005c62:	d033      	beq.n	8005ccc <HAL_RCCEx_PeriphCLKConfig+0xd08>
 8005c64:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8005c68:	d82c      	bhi.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005c6a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c6e:	d02f      	beq.n	8005cd0 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 8005c70:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005c74:	d826      	bhi.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005c76:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8005c7a:	d02b      	beq.n	8005cd4 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 8005c7c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8005c80:	d820      	bhi.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005c82:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005c86:	d012      	beq.n	8005cae <HAL_RCCEx_PeriphCLKConfig+0xcea>
 8005c88:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005c8c:	d81a      	bhi.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005c8e:	2b00      	cmp	r3, #0
 8005c90:	d022      	beq.n	8005cd8 <HAL_RCCEx_PeriphCLKConfig+0xd14>
 8005c92:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005c96:	d115      	bne.n	8005cc4 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8005c98:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005c9c:	3308      	adds	r3, #8
 8005c9e:	2100      	movs	r1, #0
 8005ca0:	4618      	mov	r0, r3
 8005ca2:	f001 fd29 	bl	80076f8 <RCCEx_PLL2_Config>
 8005ca6:	4603      	mov	r3, r0
 8005ca8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005cac:	e015      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005cae:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005cb2:	3328      	adds	r3, #40	@ 0x28
 8005cb4:	2102      	movs	r1, #2
 8005cb6:	4618      	mov	r0, r3
 8005cb8:	f001 fdd0 	bl	800785c <RCCEx_PLL3_Config>
 8005cbc:	4603      	mov	r3, r0
 8005cbe:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005cc2:	e00a      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005cc4:	2301      	movs	r3, #1
 8005cc6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005cca:	e006      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005ccc:	bf00      	nop
 8005cce:	e004      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005cd0:	bf00      	nop
 8005cd2:	e002      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005cd4:	bf00      	nop
 8005cd6:	e000      	b.n	8005cda <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8005cd8:	bf00      	nop
 8005cda:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d10e      	bne.n	8005d00 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 8005ce2:	4b06      	ldr	r3, [pc, #24]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005ce4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005ce6:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 8005cea:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005cee:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8005cf2:	4a02      	ldr	r2, [pc, #8]	@ (8005cfc <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8005cf4:	430b      	orrs	r3, r1
 8005cf6:	6593      	str	r3, [r2, #88]	@ 0x58
 8005cf8:	e006      	b.n	8005d08 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8005cfa:	bf00      	nop
 8005cfc:	58024400 	.word	0x58024400
 8005d00:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005d04:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005d08:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005d0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d10:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8005d14:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8005d18:	2300      	movs	r3, #0
 8005d1a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005d1e:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 8005d22:	460b      	mov	r3, r1
 8005d24:	4313      	orrs	r3, r2
 8005d26:	d055      	beq.n	8005dd4 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8005d28:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005d2c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8005d30:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8005d34:	d033      	beq.n	8005d9e <HAL_RCCEx_PeriphCLKConfig+0xdda>
 8005d36:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8005d3a:	d82c      	bhi.n	8005d96 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005d3c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005d40:	d02f      	beq.n	8005da2 <HAL_RCCEx_PeriphCLKConfig+0xdde>
 8005d42:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005d46:	d826      	bhi.n	8005d96 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005d48:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8005d4c:	d02b      	beq.n	8005da6 <HAL_RCCEx_PeriphCLKConfig+0xde2>
 8005d4e:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8005d52:	d820      	bhi.n	8005d96 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005d54:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005d58:	d012      	beq.n	8005d80 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 8005d5a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005d5e:	d81a      	bhi.n	8005d96 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d022      	beq.n	8005daa <HAL_RCCEx_PeriphCLKConfig+0xde6>
 8005d64:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005d68:	d115      	bne.n	8005d96 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8005d6a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005d6e:	3308      	adds	r3, #8
 8005d70:	2100      	movs	r1, #0
 8005d72:	4618      	mov	r0, r3
 8005d74:	f001 fcc0 	bl	80076f8 <RCCEx_PLL2_Config>
 8005d78:	4603      	mov	r3, r0
 8005d7a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005d7e:	e015      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005d80:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005d84:	3328      	adds	r3, #40	@ 0x28
 8005d86:	2102      	movs	r1, #2
 8005d88:	4618      	mov	r0, r3
 8005d8a:	f001 fd67 	bl	800785c <RCCEx_PLL3_Config>
 8005d8e:	4603      	mov	r3, r0
 8005d90:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005d94:	e00a      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005d96:	2301      	movs	r3, #1
 8005d98:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005d9c:	e006      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005d9e:	bf00      	nop
 8005da0:	e004      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005da2:	bf00      	nop
 8005da4:	e002      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005da6:	bf00      	nop
 8005da8:	e000      	b.n	8005dac <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8005daa:	bf00      	nop
 8005dac:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005db0:	2b00      	cmp	r3, #0
 8005db2:	d10b      	bne.n	8005dcc <HAL_RCCEx_PeriphCLKConfig+0xe08>
 8005db4:	4ba1      	ldr	r3, [pc, #644]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005db6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005db8:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 8005dbc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005dc0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8005dc4:	4a9d      	ldr	r2, [pc, #628]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005dc6:	430b      	orrs	r3, r1
 8005dc8:	6593      	str	r3, [r2, #88]	@ 0x58
 8005dca:	e003      	b.n	8005dd4 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8005dcc:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005dd0:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005dd4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ddc:	f002 0308 	and.w	r3, r2, #8
 8005de0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005de4:	2300      	movs	r3, #0
 8005de6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005dea:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 8005dee:	460b      	mov	r3, r1
 8005df0:	4313      	orrs	r3, r2
 8005df2:	d01e      	beq.n	8005e32 <HAL_RCCEx_PeriphCLKConfig+0xe6e>
 8005df4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005df8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005dfc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005e00:	d10c      	bne.n	8005e1c <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8005e02:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e06:	3328      	adds	r3, #40	@ 0x28
 8005e08:	2102      	movs	r1, #2
 8005e0a:	4618      	mov	r0, r3
 8005e0c:	f001 fd26 	bl	800785c <RCCEx_PLL3_Config>
 8005e10:	4603      	mov	r3, r0
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d002      	beq.n	8005e1c <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8005e16:	2301      	movs	r3, #1
 8005e18:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005e1c:	4b87      	ldr	r3, [pc, #540]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005e1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005e20:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8005e24:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e28:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8005e2c:	4a83      	ldr	r2, [pc, #524]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005e2e:	430b      	orrs	r3, r1
 8005e30:	6553      	str	r3, [r2, #84]	@ 0x54
 8005e32:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e3a:	f002 0310 	and.w	r3, r2, #16
 8005e3e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005e42:	2300      	movs	r3, #0
 8005e44:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8005e48:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8005e4c:	460b      	mov	r3, r1
 8005e4e:	4313      	orrs	r3, r2
 8005e50:	d01e      	beq.n	8005e90 <HAL_RCCEx_PeriphCLKConfig+0xecc>
 8005e52:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e56:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005e5a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005e5e:	d10c      	bne.n	8005e7a <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8005e60:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e64:	3328      	adds	r3, #40	@ 0x28
 8005e66:	2102      	movs	r1, #2
 8005e68:	4618      	mov	r0, r3
 8005e6a:	f001 fcf7 	bl	800785c <RCCEx_PLL3_Config>
 8005e6e:	4603      	mov	r3, r0
 8005e70:	2b00      	cmp	r3, #0
 8005e72:	d002      	beq.n	8005e7a <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8005e74:	2301      	movs	r3, #1
 8005e76:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005e7a:	4b70      	ldr	r3, [pc, #448]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005e7c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005e7e:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8005e82:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e86:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8005e8a:	4a6c      	ldr	r2, [pc, #432]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005e8c:	430b      	orrs	r3, r1
 8005e8e:	6593      	str	r3, [r2, #88]	@ 0x58
 8005e90:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005e94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e98:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8005e9c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005ea0:	2300      	movs	r3, #0
 8005ea2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8005ea6:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8005eaa:	460b      	mov	r3, r1
 8005eac:	4313      	orrs	r3, r2
 8005eae:	d03e      	beq.n	8005f2e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8005eb0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005eb4:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005eb8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005ebc:	d022      	beq.n	8005f04 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8005ebe:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005ec2:	d81b      	bhi.n	8005efc <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8005ec4:	2b00      	cmp	r3, #0
 8005ec6:	d003      	beq.n	8005ed0 <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 8005ec8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ecc:	d00b      	beq.n	8005ee6 <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8005ece:	e015      	b.n	8005efc <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8005ed0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005ed4:	3308      	adds	r3, #8
 8005ed6:	2100      	movs	r1, #0
 8005ed8:	4618      	mov	r0, r3
 8005eda:	f001 fc0d 	bl	80076f8 <RCCEx_PLL2_Config>
 8005ede:	4603      	mov	r3, r0
 8005ee0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005ee4:	e00f      	b.n	8005f06 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8005ee6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005eea:	3328      	adds	r3, #40	@ 0x28
 8005eec:	2102      	movs	r1, #2
 8005eee:	4618      	mov	r0, r3
 8005ef0:	f001 fcb4 	bl	800785c <RCCEx_PLL3_Config>
 8005ef4:	4603      	mov	r3, r0
 8005ef6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005efa:	e004      	b.n	8005f06 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8005efc:	2301      	movs	r3, #1
 8005efe:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005f02:	e000      	b.n	8005f06 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8005f04:	bf00      	nop
 8005f06:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d10b      	bne.n	8005f26 <HAL_RCCEx_PeriphCLKConfig+0xf62>
 8005f0e:	4b4b      	ldr	r3, [pc, #300]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f10:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005f12:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8005f16:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005f1a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005f1e:	4a47      	ldr	r2, [pc, #284]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f20:	430b      	orrs	r3, r1
 8005f22:	6593      	str	r3, [r2, #88]	@ 0x58
 8005f24:	e003      	b.n	8005f2e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8005f26:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005f2a:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005f2e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005f32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f36:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 8005f3a:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005f3c:	2300      	movs	r3, #0
 8005f3e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8005f40:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8005f44:	460b      	mov	r3, r1
 8005f46:	4313      	orrs	r3, r2
 8005f48:	d03b      	beq.n	8005fc2 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8005f4a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005f4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005f52:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8005f56:	d01f      	beq.n	8005f98 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 8005f58:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8005f5c:	d818      	bhi.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8005f5e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8005f62:	d003      	beq.n	8005f6c <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 8005f64:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8005f68:	d007      	beq.n	8005f7a <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 8005f6a:	e011      	b.n	8005f90 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8005f6c:	4b33      	ldr	r3, [pc, #204]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f70:	4a32      	ldr	r2, [pc, #200]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005f72:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005f76:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005f78:	e00f      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8005f7a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005f7e:	3328      	adds	r3, #40	@ 0x28
 8005f80:	2101      	movs	r1, #1
 8005f82:	4618      	mov	r0, r3
 8005f84:	f001 fc6a 	bl	800785c <RCCEx_PLL3_Config>
 8005f88:	4603      	mov	r3, r0
 8005f8a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005f8e:	e004      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8005f90:	2301      	movs	r3, #1
 8005f92:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8005f96:	e000      	b.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8005f98:	bf00      	nop
 8005f9a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005f9e:	2b00      	cmp	r3, #0
 8005fa0:	d10b      	bne.n	8005fba <HAL_RCCEx_PeriphCLKConfig+0xff6>
 8005fa2:	4b26      	ldr	r3, [pc, #152]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005fa4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005fa6:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8005faa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005fae:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8005fb2:	4a22      	ldr	r2, [pc, #136]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005fb4:	430b      	orrs	r3, r1
 8005fb6:	6553      	str	r3, [r2, #84]	@ 0x54
 8005fb8:	e003      	b.n	8005fc2 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8005fba:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8005fbe:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8005fc2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005fc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fca:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8005fce:	673b      	str	r3, [r7, #112]	@ 0x70
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	677b      	str	r3, [r7, #116]	@ 0x74
 8005fd4:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8005fd8:	460b      	mov	r3, r1
 8005fda:	4313      	orrs	r3, r2
 8005fdc:	d034      	beq.n	8006048 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8005fde:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8005fe2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d003      	beq.n	8005ff0 <HAL_RCCEx_PeriphCLKConfig+0x102c>
 8005fe8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005fec:	d007      	beq.n	8005ffe <HAL_RCCEx_PeriphCLKConfig+0x103a>
 8005fee:	e011      	b.n	8006014 <HAL_RCCEx_PeriphCLKConfig+0x1050>
 8005ff0:	4b12      	ldr	r3, [pc, #72]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005ff2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005ff4:	4a11      	ldr	r2, [pc, #68]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8005ff6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005ffa:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005ffc:	e00e      	b.n	800601c <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8005ffe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006002:	3308      	adds	r3, #8
 8006004:	2102      	movs	r1, #2
 8006006:	4618      	mov	r0, r3
 8006008:	f001 fb76 	bl	80076f8 <RCCEx_PLL2_Config>
 800600c:	4603      	mov	r3, r0
 800600e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8006012:	e003      	b.n	800601c <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8006014:	2301      	movs	r3, #1
 8006016:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800601a:	bf00      	nop
 800601c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006020:	2b00      	cmp	r3, #0
 8006022:	d10d      	bne.n	8006040 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8006024:	4b05      	ldr	r3, [pc, #20]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8006026:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006028:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800602c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006030:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006032:	4a02      	ldr	r2, [pc, #8]	@ (800603c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8006034:	430b      	orrs	r3, r1
 8006036:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8006038:	e006      	b.n	8006048 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 800603a:	bf00      	nop
 800603c:	58024400 	.word	0x58024400
 8006040:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006044:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8006048:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800604c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006050:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8006054:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006056:	2300      	movs	r3, #0
 8006058:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800605a:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 800605e:	460b      	mov	r3, r1
 8006060:	4313      	orrs	r3, r2
 8006062:	d00c      	beq.n	800607e <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8006064:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006068:	3328      	adds	r3, #40	@ 0x28
 800606a:	2102      	movs	r1, #2
 800606c:	4618      	mov	r0, r3
 800606e:	f001 fbf5 	bl	800785c <RCCEx_PLL3_Config>
 8006072:	4603      	mov	r3, r0
 8006074:	2b00      	cmp	r3, #0
 8006076:	d002      	beq.n	800607e <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8006078:	2301      	movs	r3, #1
 800607a:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800607e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006082:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006086:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 800608a:	663b      	str	r3, [r7, #96]	@ 0x60
 800608c:	2300      	movs	r3, #0
 800608e:	667b      	str	r3, [r7, #100]	@ 0x64
 8006090:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8006094:	460b      	mov	r3, r1
 8006096:	4313      	orrs	r3, r2
 8006098:	d038      	beq.n	800610c <HAL_RCCEx_PeriphCLKConfig+0x1148>
 800609a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800609e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80060a2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80060a6:	d018      	beq.n	80060da <HAL_RCCEx_PeriphCLKConfig+0x1116>
 80060a8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80060ac:	d811      	bhi.n	80060d2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80060ae:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80060b2:	d014      	beq.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x111a>
 80060b4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80060b8:	d80b      	bhi.n	80060d2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d011      	beq.n	80060e2 <HAL_RCCEx_PeriphCLKConfig+0x111e>
 80060be:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80060c2:	d106      	bne.n	80060d2 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 80060c4:	4bc3      	ldr	r3, [pc, #780]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80060c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80060c8:	4ac2      	ldr	r2, [pc, #776]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80060ca:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80060ce:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80060d0:	e008      	b.n	80060e4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 80060d2:	2301      	movs	r3, #1
 80060d4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80060d8:	e004      	b.n	80060e4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 80060da:	bf00      	nop
 80060dc:	e002      	b.n	80060e4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 80060de:	bf00      	nop
 80060e0:	e000      	b.n	80060e4 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 80060e2:	bf00      	nop
 80060e4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d10b      	bne.n	8006104 <HAL_RCCEx_PeriphCLKConfig+0x1140>
 80060ec:	4bb9      	ldr	r3, [pc, #740]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80060ee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80060f0:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80060f4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80060f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80060fc:	4ab5      	ldr	r2, [pc, #724]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80060fe:	430b      	orrs	r3, r1
 8006100:	6553      	str	r3, [r2, #84]	@ 0x54
 8006102:	e003      	b.n	800610c <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8006104:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006108:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800610c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006110:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006114:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8006118:	65bb      	str	r3, [r7, #88]	@ 0x58
 800611a:	2300      	movs	r3, #0
 800611c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800611e:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 8006122:	460b      	mov	r3, r1
 8006124:	4313      	orrs	r3, r2
 8006126:	d009      	beq.n	800613c <HAL_RCCEx_PeriphCLKConfig+0x1178>
 8006128:	4baa      	ldr	r3, [pc, #680]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800612a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800612c:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8006130:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006134:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006136:	4aa7      	ldr	r2, [pc, #668]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006138:	430b      	orrs	r3, r1
 800613a:	6513      	str	r3, [r2, #80]	@ 0x50
 800613c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006140:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006144:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 8006148:	653b      	str	r3, [r7, #80]	@ 0x50
 800614a:	2300      	movs	r3, #0
 800614c:	657b      	str	r3, [r7, #84]	@ 0x54
 800614e:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8006152:	460b      	mov	r3, r1
 8006154:	4313      	orrs	r3, r2
 8006156:	d00a      	beq.n	800616e <HAL_RCCEx_PeriphCLKConfig+0x11aa>
 8006158:	4b9e      	ldr	r3, [pc, #632]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800615a:	691b      	ldr	r3, [r3, #16]
 800615c:	f423 4180 	bic.w	r1, r3, #16384	@ 0x4000
 8006160:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006164:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8006168:	4a9a      	ldr	r2, [pc, #616]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800616a:	430b      	orrs	r3, r1
 800616c:	6113      	str	r3, [r2, #16]
 800616e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006172:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006176:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 800617a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800617c:	2300      	movs	r3, #0
 800617e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006180:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8006184:	460b      	mov	r3, r1
 8006186:	4313      	orrs	r3, r2
 8006188:	d009      	beq.n	800619e <HAL_RCCEx_PeriphCLKConfig+0x11da>
 800618a:	4b92      	ldr	r3, [pc, #584]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800618c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800618e:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 8006192:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006196:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006198:	4a8e      	ldr	r2, [pc, #568]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 800619a:	430b      	orrs	r3, r1
 800619c:	6513      	str	r3, [r2, #80]	@ 0x50
 800619e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80061a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061a6:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 80061aa:	643b      	str	r3, [r7, #64]	@ 0x40
 80061ac:	2300      	movs	r3, #0
 80061ae:	647b      	str	r3, [r7, #68]	@ 0x44
 80061b0:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 80061b4:	460b      	mov	r3, r1
 80061b6:	4313      	orrs	r3, r2
 80061b8:	d00e      	beq.n	80061d8 <HAL_RCCEx_PeriphCLKConfig+0x1214>
 80061ba:	4b86      	ldr	r3, [pc, #536]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061bc:	691b      	ldr	r3, [r3, #16]
 80061be:	4a85      	ldr	r2, [pc, #532]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061c0:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80061c4:	6113      	str	r3, [r2, #16]
 80061c6:	4b83      	ldr	r3, [pc, #524]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061c8:	6919      	ldr	r1, [r3, #16]
 80061ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80061ce:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80061d2:	4a80      	ldr	r2, [pc, #512]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061d4:	430b      	orrs	r3, r1
 80061d6:	6113      	str	r3, [r2, #16]
 80061d8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80061dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061e0:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 80061e4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80061e6:	2300      	movs	r3, #0
 80061e8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80061ea:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 80061ee:	460b      	mov	r3, r1
 80061f0:	4313      	orrs	r3, r2
 80061f2:	d009      	beq.n	8006208 <HAL_RCCEx_PeriphCLKConfig+0x1244>
 80061f4:	4b77      	ldr	r3, [pc, #476]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 80061f6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80061f8:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 80061fc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006200:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006202:	4a74      	ldr	r2, [pc, #464]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006204:	430b      	orrs	r3, r1
 8006206:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8006208:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800620c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006210:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8006214:	633b      	str	r3, [r7, #48]	@ 0x30
 8006216:	2300      	movs	r3, #0
 8006218:	637b      	str	r3, [r7, #52]	@ 0x34
 800621a:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 800621e:	460b      	mov	r3, r1
 8006220:	4313      	orrs	r3, r2
 8006222:	d00a      	beq.n	800623a <HAL_RCCEx_PeriphCLKConfig+0x1276>
 8006224:	4b6b      	ldr	r3, [pc, #428]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006226:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006228:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 800622c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8006230:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006234:	4a67      	ldr	r2, [pc, #412]	@ (80063d4 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8006236:	430b      	orrs	r3, r1
 8006238:	6553      	str	r3, [r2, #84]	@ 0x54
 800623a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800623e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006242:	2100      	movs	r1, #0
 8006244:	62b9      	str	r1, [r7, #40]	@ 0x28
 8006246:	f003 0301 	and.w	r3, r3, #1
 800624a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800624c:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8006250:	460b      	mov	r3, r1
 8006252:	4313      	orrs	r3, r2
 8006254:	d011      	beq.n	800627a <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 8006256:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800625a:	3308      	adds	r3, #8
 800625c:	2100      	movs	r1, #0
 800625e:	4618      	mov	r0, r3
 8006260:	f001 fa4a 	bl	80076f8 <RCCEx_PLL2_Config>
 8006264:	4603      	mov	r3, r0
 8006266:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800626a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800626e:	2b00      	cmp	r3, #0
 8006270:	d003      	beq.n	800627a <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 8006272:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006276:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800627a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800627e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006282:	2100      	movs	r1, #0
 8006284:	6239      	str	r1, [r7, #32]
 8006286:	f003 0302 	and.w	r3, r3, #2
 800628a:	627b      	str	r3, [r7, #36]	@ 0x24
 800628c:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8006290:	460b      	mov	r3, r1
 8006292:	4313      	orrs	r3, r2
 8006294:	d011      	beq.n	80062ba <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 8006296:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800629a:	3308      	adds	r3, #8
 800629c:	2101      	movs	r1, #1
 800629e:	4618      	mov	r0, r3
 80062a0:	f001 fa2a 	bl	80076f8 <RCCEx_PLL2_Config>
 80062a4:	4603      	mov	r3, r0
 80062a6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80062aa:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d003      	beq.n	80062ba <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 80062b2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80062b6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80062ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80062be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062c2:	2100      	movs	r1, #0
 80062c4:	61b9      	str	r1, [r7, #24]
 80062c6:	f003 0304 	and.w	r3, r3, #4
 80062ca:	61fb      	str	r3, [r7, #28]
 80062cc:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 80062d0:	460b      	mov	r3, r1
 80062d2:	4313      	orrs	r3, r2
 80062d4:	d011      	beq.n	80062fa <HAL_RCCEx_PeriphCLKConfig+0x1336>
 80062d6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80062da:	3308      	adds	r3, #8
 80062dc:	2102      	movs	r1, #2
 80062de:	4618      	mov	r0, r3
 80062e0:	f001 fa0a 	bl	80076f8 <RCCEx_PLL2_Config>
 80062e4:	4603      	mov	r3, r0
 80062e6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80062ea:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d003      	beq.n	80062fa <HAL_RCCEx_PeriphCLKConfig+0x1336>
 80062f2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80062f6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80062fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80062fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006302:	2100      	movs	r1, #0
 8006304:	6139      	str	r1, [r7, #16]
 8006306:	f003 0308 	and.w	r3, r3, #8
 800630a:	617b      	str	r3, [r7, #20]
 800630c:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8006310:	460b      	mov	r3, r1
 8006312:	4313      	orrs	r3, r2
 8006314:	d011      	beq.n	800633a <HAL_RCCEx_PeriphCLKConfig+0x1376>
 8006316:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800631a:	3328      	adds	r3, #40	@ 0x28
 800631c:	2100      	movs	r1, #0
 800631e:	4618      	mov	r0, r3
 8006320:	f001 fa9c 	bl	800785c <RCCEx_PLL3_Config>
 8006324:	4603      	mov	r3, r0
 8006326:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800632a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800632e:	2b00      	cmp	r3, #0
 8006330:	d003      	beq.n	800633a <HAL_RCCEx_PeriphCLKConfig+0x1376>
 8006332:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006336:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800633a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800633e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006342:	2100      	movs	r1, #0
 8006344:	60b9      	str	r1, [r7, #8]
 8006346:	f003 0310 	and.w	r3, r3, #16
 800634a:	60fb      	str	r3, [r7, #12]
 800634c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8006350:	460b      	mov	r3, r1
 8006352:	4313      	orrs	r3, r2
 8006354:	d011      	beq.n	800637a <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 8006356:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800635a:	3328      	adds	r3, #40	@ 0x28
 800635c:	2101      	movs	r1, #1
 800635e:	4618      	mov	r0, r3
 8006360:	f001 fa7c 	bl	800785c <RCCEx_PLL3_Config>
 8006364:	4603      	mov	r3, r0
 8006366:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800636a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800636e:	2b00      	cmp	r3, #0
 8006370:	d003      	beq.n	800637a <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 8006372:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8006376:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800637a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800637e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006382:	2100      	movs	r1, #0
 8006384:	6039      	str	r1, [r7, #0]
 8006386:	f003 0320 	and.w	r3, r3, #32
 800638a:	607b      	str	r3, [r7, #4]
 800638c:	e9d7 1200 	ldrd	r1, r2, [r7]
 8006390:	460b      	mov	r3, r1
 8006392:	4313      	orrs	r3, r2
 8006394:	d011      	beq.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 8006396:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800639a:	3328      	adds	r3, #40	@ 0x28
 800639c:	2102      	movs	r1, #2
 800639e:	4618      	mov	r0, r3
 80063a0:	f001 fa5c 	bl	800785c <RCCEx_PLL3_Config>
 80063a4:	4603      	mov	r3, r0
 80063a6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80063aa:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	d003      	beq.n	80063ba <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 80063b2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80063b6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80063ba:	f897 3126 	ldrb.w	r3, [r7, #294]	@ 0x126
 80063be:	2b00      	cmp	r3, #0
 80063c0:	d101      	bne.n	80063c6 <HAL_RCCEx_PeriphCLKConfig+0x1402>
 80063c2:	2300      	movs	r3, #0
 80063c4:	e000      	b.n	80063c8 <HAL_RCCEx_PeriphCLKConfig+0x1404>
 80063c6:	2301      	movs	r3, #1
 80063c8:	4618      	mov	r0, r3
 80063ca:	f507 7794 	add.w	r7, r7, #296	@ 0x128
 80063ce:	46bd      	mov	sp, r7
 80063d0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80063d4:	58024400 	.word	0x58024400

080063d8 <HAL_RCCEx_GetPeriphCLKFreq>:
 80063d8:	b580      	push	{r7, lr}
 80063da:	b090      	sub	sp, #64	@ 0x40
 80063dc:	af00      	add	r7, sp, #0
 80063de:	e9c7 0100 	strd	r0, r1, [r7]
 80063e2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80063e6:	f5a2 7180 	sub.w	r1, r2, #256	@ 0x100
 80063ea:	430b      	orrs	r3, r1
 80063ec:	f040 8094 	bne.w	8006518 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 80063f0:	4b9e      	ldr	r3, [pc, #632]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80063f2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80063f4:	f003 0307 	and.w	r3, r3, #7
 80063f8:	633b      	str	r3, [r7, #48]	@ 0x30
 80063fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80063fc:	2b04      	cmp	r3, #4
 80063fe:	f200 8087 	bhi.w	8006510 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8006402:	a201      	add	r2, pc, #4	@ (adr r2, 8006408 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8006404:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006408:	0800641d 	.word	0x0800641d
 800640c:	08006445 	.word	0x08006445
 8006410:	0800646d 	.word	0x0800646d
 8006414:	08006509 	.word	0x08006509
 8006418:	08006495 	.word	0x08006495
 800641c:	4b93      	ldr	r3, [pc, #588]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006424:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006428:	d108      	bne.n	800643c <HAL_RCCEx_GetPeriphCLKFreq+0x64>
 800642a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800642e:	4618      	mov	r0, r3
 8006430:	f001 f810 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 8006434:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006436:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006438:	f000 bd45 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800643c:	2300      	movs	r3, #0
 800643e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006440:	f000 bd41 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006444:	4b89      	ldr	r3, [pc, #548]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800644c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006450:	d108      	bne.n	8006464 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
 8006452:	f107 0318 	add.w	r3, r7, #24
 8006456:	4618      	mov	r0, r3
 8006458:	f000 fd54 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 800645c:	69bb      	ldr	r3, [r7, #24]
 800645e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006460:	f000 bd31 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006464:	2300      	movs	r3, #0
 8006466:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006468:	f000 bd2d 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800646c:	4b7f      	ldr	r3, [pc, #508]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006474:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006478:	d108      	bne.n	800648c <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
 800647a:	f107 030c 	add.w	r3, r7, #12
 800647e:	4618      	mov	r0, r3
 8006480:	f000 fe94 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006488:	f000 bd1d 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800648c:	2300      	movs	r3, #0
 800648e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006490:	f000 bd19 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006494:	4b75      	ldr	r3, [pc, #468]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006496:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006498:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800649c:	637b      	str	r3, [r7, #52]	@ 0x34
 800649e:	4b73      	ldr	r3, [pc, #460]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80064a0:	681b      	ldr	r3, [r3, #0]
 80064a2:	f003 0304 	and.w	r3, r3, #4
 80064a6:	2b04      	cmp	r3, #4
 80064a8:	d10c      	bne.n	80064c4 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 80064aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80064ac:	2b00      	cmp	r3, #0
 80064ae:	d109      	bne.n	80064c4 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 80064b0:	4b6e      	ldr	r3, [pc, #440]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	08db      	lsrs	r3, r3, #3
 80064b6:	f003 0303 	and.w	r3, r3, #3
 80064ba:	4a6d      	ldr	r2, [pc, #436]	@ (8006670 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 80064bc:	fa22 f303 	lsr.w	r3, r2, r3
 80064c0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80064c2:	e01f      	b.n	8006504 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 80064c4:	4b69      	ldr	r3, [pc, #420]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80064cc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80064d0:	d106      	bne.n	80064e0 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 80064d2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80064d4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80064d8:	d102      	bne.n	80064e0 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 80064da:	4b66      	ldr	r3, [pc, #408]	@ (8006674 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 80064dc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80064de:	e011      	b.n	8006504 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 80064e0:	4b62      	ldr	r3, [pc, #392]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80064e8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80064ec:	d106      	bne.n	80064fc <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 80064ee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80064f0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80064f4:	d102      	bne.n	80064fc <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 80064f6:	4b60      	ldr	r3, [pc, #384]	@ (8006678 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 80064f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80064fa:	e003      	b.n	8006504 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 80064fc:	2300      	movs	r3, #0
 80064fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006500:	f000 bce1 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006504:	f000 bcdf 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006508:	4b5c      	ldr	r3, [pc, #368]	@ (800667c <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 800650a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800650c:	f000 bcdb 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006510:	2300      	movs	r3, #0
 8006512:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006514:	f000 bcd7 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006518:	e9d7 2300 	ldrd	r2, r3, [r7]
 800651c:	f5a2 7100 	sub.w	r1, r2, #512	@ 0x200
 8006520:	430b      	orrs	r3, r1
 8006522:	f040 80ad 	bne.w	8006680 <HAL_RCCEx_GetPeriphCLKFreq+0x2a8>
 8006526:	4b51      	ldr	r3, [pc, #324]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006528:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800652a:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 800652e:	633b      	str	r3, [r7, #48]	@ 0x30
 8006530:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006532:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006536:	d056      	beq.n	80065e6 <HAL_RCCEx_GetPeriphCLKFreq+0x20e>
 8006538:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800653a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800653e:	f200 8090 	bhi.w	8006662 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8006542:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006544:	2bc0      	cmp	r3, #192	@ 0xc0
 8006546:	f000 8088 	beq.w	800665a <HAL_RCCEx_GetPeriphCLKFreq+0x282>
 800654a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800654c:	2bc0      	cmp	r3, #192	@ 0xc0
 800654e:	f200 8088 	bhi.w	8006662 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8006552:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006554:	2b80      	cmp	r3, #128	@ 0x80
 8006556:	d032      	beq.n	80065be <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 8006558:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800655a:	2b80      	cmp	r3, #128	@ 0x80
 800655c:	f200 8081 	bhi.w	8006662 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8006560:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006562:	2b00      	cmp	r3, #0
 8006564:	d003      	beq.n	800656e <HAL_RCCEx_GetPeriphCLKFreq+0x196>
 8006566:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006568:	2b40      	cmp	r3, #64	@ 0x40
 800656a:	d014      	beq.n	8006596 <HAL_RCCEx_GetPeriphCLKFreq+0x1be>
 800656c:	e079      	b.n	8006662 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 800656e:	4b3f      	ldr	r3, [pc, #252]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006576:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800657a:	d108      	bne.n	800658e <HAL_RCCEx_GetPeriphCLKFreq+0x1b6>
 800657c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8006580:	4618      	mov	r0, r3
 8006582:	f000 ff67 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 8006586:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006588:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800658a:	f000 bc9c 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800658e:	2300      	movs	r3, #0
 8006590:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006592:	f000 bc98 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006596:	4b35      	ldr	r3, [pc, #212]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800659e:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80065a2:	d108      	bne.n	80065b6 <HAL_RCCEx_GetPeriphCLKFreq+0x1de>
 80065a4:	f107 0318 	add.w	r3, r7, #24
 80065a8:	4618      	mov	r0, r3
 80065aa:	f000 fcab 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 80065ae:	69bb      	ldr	r3, [r7, #24]
 80065b0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80065b2:	f000 bc88 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80065b6:	2300      	movs	r3, #0
 80065b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80065ba:	f000 bc84 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80065be:	4b2b      	ldr	r3, [pc, #172]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80065c6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80065ca:	d108      	bne.n	80065de <HAL_RCCEx_GetPeriphCLKFreq+0x206>
 80065cc:	f107 030c 	add.w	r3, r7, #12
 80065d0:	4618      	mov	r0, r3
 80065d2:	f000 fdeb 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80065da:	f000 bc74 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80065de:	2300      	movs	r3, #0
 80065e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80065e2:	f000 bc70 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80065e6:	4b21      	ldr	r3, [pc, #132]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80065e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80065ea:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80065ee:	637b      	str	r3, [r7, #52]	@ 0x34
 80065f0:	4b1e      	ldr	r3, [pc, #120]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	f003 0304 	and.w	r3, r3, #4
 80065f8:	2b04      	cmp	r3, #4
 80065fa:	d10c      	bne.n	8006616 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 80065fc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d109      	bne.n	8006616 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 8006602:	4b1a      	ldr	r3, [pc, #104]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	08db      	lsrs	r3, r3, #3
 8006608:	f003 0303 	and.w	r3, r3, #3
 800660c:	4a18      	ldr	r2, [pc, #96]	@ (8006670 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800660e:	fa22 f303 	lsr.w	r3, r2, r3
 8006612:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006614:	e01f      	b.n	8006656 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8006616:	4b15      	ldr	r3, [pc, #84]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800661e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006622:	d106      	bne.n	8006632 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 8006624:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006626:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800662a:	d102      	bne.n	8006632 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 800662c:	4b11      	ldr	r3, [pc, #68]	@ (8006674 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 800662e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006630:	e011      	b.n	8006656 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8006632:	4b0e      	ldr	r3, [pc, #56]	@ (800666c <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800663a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800663e:	d106      	bne.n	800664e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 8006640:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006642:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006646:	d102      	bne.n	800664e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 8006648:	4b0b      	ldr	r3, [pc, #44]	@ (8006678 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 800664a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800664c:	e003      	b.n	8006656 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 800664e:	2300      	movs	r3, #0
 8006650:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006652:	f000 bc38 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006656:	f000 bc36 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800665a:	4b08      	ldr	r3, [pc, #32]	@ (800667c <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 800665c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800665e:	f000 bc32 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006662:	2300      	movs	r3, #0
 8006664:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006666:	f000 bc2e 	b.w	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800666a:	bf00      	nop
 800666c:	58024400 	.word	0x58024400
 8006670:	03d09000 	.word	0x03d09000
 8006674:	003d0900 	.word	0x003d0900
 8006678:	017d7840 	.word	0x017d7840
 800667c:	00bb8000 	.word	0x00bb8000
 8006680:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006684:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 8006688:	430b      	orrs	r3, r1
 800668a:	f040 809c 	bne.w	80067c6 <HAL_RCCEx_GetPeriphCLKFreq+0x3ee>
 800668e:	4b9e      	ldr	r3, [pc, #632]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006690:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006692:	f403 0360 	and.w	r3, r3, #14680064	@ 0xe00000
 8006696:	633b      	str	r3, [r7, #48]	@ 0x30
 8006698:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800669a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800669e:	d054      	beq.n	800674a <HAL_RCCEx_GetPeriphCLKFreq+0x372>
 80066a0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066a2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80066a6:	f200 808b 	bhi.w	80067c0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80066aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066ac:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 80066b0:	f000 8083 	beq.w	80067ba <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 80066b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066b6:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 80066ba:	f200 8081 	bhi.w	80067c0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80066be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066c0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80066c4:	d02f      	beq.n	8006726 <HAL_RCCEx_GetPeriphCLKFreq+0x34e>
 80066c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066c8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80066cc:	d878      	bhi.n	80067c0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80066ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066d0:	2b00      	cmp	r3, #0
 80066d2:	d004      	beq.n	80066de <HAL_RCCEx_GetPeriphCLKFreq+0x306>
 80066d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80066d6:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80066da:	d012      	beq.n	8006702 <HAL_RCCEx_GetPeriphCLKFreq+0x32a>
 80066dc:	e070      	b.n	80067c0 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80066de:	4b8a      	ldr	r3, [pc, #552]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80066e6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80066ea:	d107      	bne.n	80066fc <HAL_RCCEx_GetPeriphCLKFreq+0x324>
 80066ec:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80066f0:	4618      	mov	r0, r3
 80066f2:	f000 feaf 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 80066f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80066f8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80066fa:	e3e4      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80066fc:	2300      	movs	r3, #0
 80066fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006700:	e3e1      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006702:	4b81      	ldr	r3, [pc, #516]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800670a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800670e:	d107      	bne.n	8006720 <HAL_RCCEx_GetPeriphCLKFreq+0x348>
 8006710:	f107 0318 	add.w	r3, r7, #24
 8006714:	4618      	mov	r0, r3
 8006716:	f000 fbf5 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 800671a:	69bb      	ldr	r3, [r7, #24]
 800671c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800671e:	e3d2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006720:	2300      	movs	r3, #0
 8006722:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006724:	e3cf      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006726:	4b78      	ldr	r3, [pc, #480]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800672e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006732:	d107      	bne.n	8006744 <HAL_RCCEx_GetPeriphCLKFreq+0x36c>
 8006734:	f107 030c 	add.w	r3, r7, #12
 8006738:	4618      	mov	r0, r3
 800673a:	f000 fd37 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006742:	e3c0      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006744:	2300      	movs	r3, #0
 8006746:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006748:	e3bd      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800674a:	4b6f      	ldr	r3, [pc, #444]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800674c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800674e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8006752:	637b      	str	r3, [r7, #52]	@ 0x34
 8006754:	4b6c      	ldr	r3, [pc, #432]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	f003 0304 	and.w	r3, r3, #4
 800675c:	2b04      	cmp	r3, #4
 800675e:	d10c      	bne.n	800677a <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 8006760:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006762:	2b00      	cmp	r3, #0
 8006764:	d109      	bne.n	800677a <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 8006766:	4b68      	ldr	r3, [pc, #416]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006768:	681b      	ldr	r3, [r3, #0]
 800676a:	08db      	lsrs	r3, r3, #3
 800676c:	f003 0303 	and.w	r3, r3, #3
 8006770:	4a66      	ldr	r2, [pc, #408]	@ (800690c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 8006772:	fa22 f303 	lsr.w	r3, r2, r3
 8006776:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006778:	e01e      	b.n	80067b8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 800677a:	4b63      	ldr	r3, [pc, #396]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006782:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006786:	d106      	bne.n	8006796 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 8006788:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800678a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800678e:	d102      	bne.n	8006796 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 8006790:	4b5f      	ldr	r3, [pc, #380]	@ (8006910 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 8006792:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006794:	e010      	b.n	80067b8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 8006796:	4b5c      	ldr	r3, [pc, #368]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800679e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80067a2:	d106      	bne.n	80067b2 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 80067a4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80067a6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80067aa:	d102      	bne.n	80067b2 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 80067ac:	4b59      	ldr	r3, [pc, #356]	@ (8006914 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 80067ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067b0:	e002      	b.n	80067b8 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 80067b2:	2300      	movs	r3, #0
 80067b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067b6:	e386      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80067b8:	e385      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80067ba:	4b57      	ldr	r3, [pc, #348]	@ (8006918 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 80067bc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067be:	e382      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80067c0:	2300      	movs	r3, #0
 80067c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80067c4:	e37f      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80067c6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80067ca:	f5a2 6100 	sub.w	r1, r2, #2048	@ 0x800
 80067ce:	430b      	orrs	r3, r1
 80067d0:	f040 80a7 	bne.w	8006922 <HAL_RCCEx_GetPeriphCLKFreq+0x54a>
 80067d4:	4b4c      	ldr	r3, [pc, #304]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80067d6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80067d8:	f003 63e0 	and.w	r3, r3, #117440512	@ 0x7000000
 80067dc:	633b      	str	r3, [r7, #48]	@ 0x30
 80067de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80067e0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80067e4:	d055      	beq.n	8006892 <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
 80067e6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80067e8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80067ec:	f200 8096 	bhi.w	800691c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 80067f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80067f2:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80067f6:	f000 8084 	beq.w	8006902 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
 80067fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80067fc:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8006800:	f200 808c 	bhi.w	800691c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8006804:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006806:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800680a:	d030      	beq.n	800686e <HAL_RCCEx_GetPeriphCLKFreq+0x496>
 800680c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800680e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006812:	f200 8083 	bhi.w	800691c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8006816:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006818:	2b00      	cmp	r3, #0
 800681a:	d004      	beq.n	8006826 <HAL_RCCEx_GetPeriphCLKFreq+0x44e>
 800681c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800681e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006822:	d012      	beq.n	800684a <HAL_RCCEx_GetPeriphCLKFreq+0x472>
 8006824:	e07a      	b.n	800691c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8006826:	4b38      	ldr	r3, [pc, #224]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800682e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006832:	d107      	bne.n	8006844 <HAL_RCCEx_GetPeriphCLKFreq+0x46c>
 8006834:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8006838:	4618      	mov	r0, r3
 800683a:	f000 fe0b 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 800683e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006840:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006842:	e340      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006844:	2300      	movs	r3, #0
 8006846:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006848:	e33d      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800684a:	4b2f      	ldr	r3, [pc, #188]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006852:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006856:	d107      	bne.n	8006868 <HAL_RCCEx_GetPeriphCLKFreq+0x490>
 8006858:	f107 0318 	add.w	r3, r7, #24
 800685c:	4618      	mov	r0, r3
 800685e:	f000 fb51 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006862:	69bb      	ldr	r3, [r7, #24]
 8006864:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006866:	e32e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006868:	2300      	movs	r3, #0
 800686a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800686c:	e32b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800686e:	4b26      	ldr	r3, [pc, #152]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006876:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800687a:	d107      	bne.n	800688c <HAL_RCCEx_GetPeriphCLKFreq+0x4b4>
 800687c:	f107 030c 	add.w	r3, r7, #12
 8006880:	4618      	mov	r0, r3
 8006882:	f000 fc93 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 8006886:	68fb      	ldr	r3, [r7, #12]
 8006888:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800688a:	e31c      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800688c:	2300      	movs	r3, #0
 800688e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006890:	e319      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006892:	4b1d      	ldr	r3, [pc, #116]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8006894:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006896:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800689a:	637b      	str	r3, [r7, #52]	@ 0x34
 800689c:	4b1a      	ldr	r3, [pc, #104]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	f003 0304 	and.w	r3, r3, #4
 80068a4:	2b04      	cmp	r3, #4
 80068a6:	d10c      	bne.n	80068c2 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 80068a8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d109      	bne.n	80068c2 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 80068ae:	4b16      	ldr	r3, [pc, #88]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	08db      	lsrs	r3, r3, #3
 80068b4:	f003 0303 	and.w	r3, r3, #3
 80068b8:	4a14      	ldr	r2, [pc, #80]	@ (800690c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 80068ba:	fa22 f303 	lsr.w	r3, r2, r3
 80068be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068c0:	e01e      	b.n	8006900 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 80068c2:	4b11      	ldr	r3, [pc, #68]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80068ca:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80068ce:	d106      	bne.n	80068de <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 80068d0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80068d2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80068d6:	d102      	bne.n	80068de <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 80068d8:	4b0d      	ldr	r3, [pc, #52]	@ (8006910 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 80068da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068dc:	e010      	b.n	8006900 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 80068de:	4b0a      	ldr	r3, [pc, #40]	@ (8006908 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80068e6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80068ea:	d106      	bne.n	80068fa <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 80068ec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80068ee:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80068f2:	d102      	bne.n	80068fa <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 80068f4:	4b07      	ldr	r3, [pc, #28]	@ (8006914 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 80068f6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068f8:	e002      	b.n	8006900 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 80068fa:	2300      	movs	r3, #0
 80068fc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80068fe:	e2e2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006900:	e2e1      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006902:	4b05      	ldr	r3, [pc, #20]	@ (8006918 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 8006904:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006906:	e2de      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006908:	58024400 	.word	0x58024400
 800690c:	03d09000 	.word	0x03d09000
 8006910:	003d0900 	.word	0x003d0900
 8006914:	017d7840 	.word	0x017d7840
 8006918:	00bb8000 	.word	0x00bb8000
 800691c:	2300      	movs	r3, #0
 800691e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006920:	e2d1      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006922:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006926:	f5a2 5180 	sub.w	r1, r2, #4096	@ 0x1000
 800692a:	430b      	orrs	r3, r1
 800692c:	f040 809c 	bne.w	8006a68 <HAL_RCCEx_GetPeriphCLKFreq+0x690>
 8006930:	4b93      	ldr	r3, [pc, #588]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006932:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006934:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
 8006938:	63bb      	str	r3, [r7, #56]	@ 0x38
 800693a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800693c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006940:	d054      	beq.n	80069ec <HAL_RCCEx_GetPeriphCLKFreq+0x614>
 8006942:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006944:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006948:	f200 808b 	bhi.w	8006a62 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 800694c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800694e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8006952:	f000 8083 	beq.w	8006a5c <HAL_RCCEx_GetPeriphCLKFreq+0x684>
 8006956:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006958:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800695c:	f200 8081 	bhi.w	8006a62 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8006960:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006962:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006966:	d02f      	beq.n	80069c8 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 8006968:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800696a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800696e:	d878      	bhi.n	8006a62 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8006970:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006972:	2b00      	cmp	r3, #0
 8006974:	d004      	beq.n	8006980 <HAL_RCCEx_GetPeriphCLKFreq+0x5a8>
 8006976:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006978:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800697c:	d012      	beq.n	80069a4 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 800697e:	e070      	b.n	8006a62 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 8006980:	4b7f      	ldr	r3, [pc, #508]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006982:	681b      	ldr	r3, [r3, #0]
 8006984:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006988:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800698c:	d107      	bne.n	800699e <HAL_RCCEx_GetPeriphCLKFreq+0x5c6>
 800698e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8006992:	4618      	mov	r0, r3
 8006994:	f000 fd5e 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 8006998:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800699a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800699c:	e293      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800699e:	2300      	movs	r3, #0
 80069a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069a2:	e290      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80069a4:	4b76      	ldr	r3, [pc, #472]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80069ac:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80069b0:	d107      	bne.n	80069c2 <HAL_RCCEx_GetPeriphCLKFreq+0x5ea>
 80069b2:	f107 0318 	add.w	r3, r7, #24
 80069b6:	4618      	mov	r0, r3
 80069b8:	f000 faa4 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 80069bc:	69bb      	ldr	r3, [r7, #24]
 80069be:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069c0:	e281      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80069c2:	2300      	movs	r3, #0
 80069c4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069c6:	e27e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80069c8:	4b6d      	ldr	r3, [pc, #436]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80069d0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80069d4:	d107      	bne.n	80069e6 <HAL_RCCEx_GetPeriphCLKFreq+0x60e>
 80069d6:	f107 030c 	add.w	r3, r7, #12
 80069da:	4618      	mov	r0, r3
 80069dc:	f000 fbe6 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069e4:	e26f      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80069e6:	2300      	movs	r3, #0
 80069e8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80069ea:	e26c      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80069ec:	4b64      	ldr	r3, [pc, #400]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80069ee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80069f0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80069f4:	637b      	str	r3, [r7, #52]	@ 0x34
 80069f6:	4b62      	ldr	r3, [pc, #392]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	f003 0304 	and.w	r3, r3, #4
 80069fe:	2b04      	cmp	r3, #4
 8006a00:	d10c      	bne.n	8006a1c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8006a02:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	d109      	bne.n	8006a1c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8006a08:	4b5d      	ldr	r3, [pc, #372]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	08db      	lsrs	r3, r3, #3
 8006a0e:	f003 0303 	and.w	r3, r3, #3
 8006a12:	4a5c      	ldr	r2, [pc, #368]	@ (8006b84 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8006a14:	fa22 f303 	lsr.w	r3, r2, r3
 8006a18:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a1a:	e01e      	b.n	8006a5a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8006a1c:	4b58      	ldr	r3, [pc, #352]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a24:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006a28:	d106      	bne.n	8006a38 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8006a2a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006a2c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006a30:	d102      	bne.n	8006a38 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8006a32:	4b55      	ldr	r3, [pc, #340]	@ (8006b88 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8006a34:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a36:	e010      	b.n	8006a5a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8006a38:	4b51      	ldr	r3, [pc, #324]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006a40:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006a44:	d106      	bne.n	8006a54 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8006a46:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006a48:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006a4c:	d102      	bne.n	8006a54 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8006a4e:	4b4f      	ldr	r3, [pc, #316]	@ (8006b8c <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8006a50:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a52:	e002      	b.n	8006a5a <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8006a54:	2300      	movs	r3, #0
 8006a56:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a58:	e235      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006a5a:	e234      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006a5c:	4b4c      	ldr	r3, [pc, #304]	@ (8006b90 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>)
 8006a5e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a60:	e231      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006a62:	2300      	movs	r3, #0
 8006a64:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a66:	e22e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006a68:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006a6c:	f5a2 5100 	sub.w	r1, r2, #8192	@ 0x2000
 8006a70:	430b      	orrs	r3, r1
 8006a72:	f040 808f 	bne.w	8006b94 <HAL_RCCEx_GetPeriphCLKFreq+0x7bc>
 8006a76:	4b42      	ldr	r3, [pc, #264]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006a78:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006a7a:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
 8006a7e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006a80:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a82:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006a86:	d06b      	beq.n	8006b60 <HAL_RCCEx_GetPeriphCLKFreq+0x788>
 8006a88:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a8a:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006a8e:	d874      	bhi.n	8006b7a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8006a90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a92:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8006a96:	d056      	beq.n	8006b46 <HAL_RCCEx_GetPeriphCLKFreq+0x76e>
 8006a98:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006a9a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8006a9e:	d86c      	bhi.n	8006b7a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8006aa0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006aa2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8006aa6:	d03b      	beq.n	8006b20 <HAL_RCCEx_GetPeriphCLKFreq+0x748>
 8006aa8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006aaa:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8006aae:	d864      	bhi.n	8006b7a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8006ab0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ab2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006ab6:	d021      	beq.n	8006afc <HAL_RCCEx_GetPeriphCLKFreq+0x724>
 8006ab8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006aba:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006abe:	d85c      	bhi.n	8006b7a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8006ac0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ac2:	2b00      	cmp	r3, #0
 8006ac4:	d004      	beq.n	8006ad0 <HAL_RCCEx_GetPeriphCLKFreq+0x6f8>
 8006ac6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ac8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006acc:	d004      	beq.n	8006ad8 <HAL_RCCEx_GetPeriphCLKFreq+0x700>
 8006ace:	e054      	b.n	8006b7a <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8006ad0:	f7fe fa0a 	bl	8004ee8 <HAL_RCC_GetPCLK1Freq>
 8006ad4:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8006ad6:	e1f6      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006ad8:	4b29      	ldr	r3, [pc, #164]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006ae0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006ae4:	d107      	bne.n	8006af6 <HAL_RCCEx_GetPeriphCLKFreq+0x71e>
 8006ae6:	f107 0318 	add.w	r3, r7, #24
 8006aea:	4618      	mov	r0, r3
 8006aec:	f000 fa0a 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006af0:	69fb      	ldr	r3, [r7, #28]
 8006af2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006af4:	e1e7      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006af6:	2300      	movs	r3, #0
 8006af8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006afa:	e1e4      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006afc:	4b20      	ldr	r3, [pc, #128]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006afe:	681b      	ldr	r3, [r3, #0]
 8006b00:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006b04:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006b08:	d107      	bne.n	8006b1a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 8006b0a:	f107 030c 	add.w	r3, r7, #12
 8006b0e:	4618      	mov	r0, r3
 8006b10:	f000 fb4c 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 8006b14:	693b      	ldr	r3, [r7, #16]
 8006b16:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b18:	e1d5      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b1e:	e1d2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b20:	4b17      	ldr	r3, [pc, #92]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	f003 0304 	and.w	r3, r3, #4
 8006b28:	2b04      	cmp	r3, #4
 8006b2a:	d109      	bne.n	8006b40 <HAL_RCCEx_GetPeriphCLKFreq+0x768>
 8006b2c:	4b14      	ldr	r3, [pc, #80]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	08db      	lsrs	r3, r3, #3
 8006b32:	f003 0303 	and.w	r3, r3, #3
 8006b36:	4a13      	ldr	r2, [pc, #76]	@ (8006b84 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8006b38:	fa22 f303 	lsr.w	r3, r2, r3
 8006b3c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b3e:	e1c2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b40:	2300      	movs	r3, #0
 8006b42:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b44:	e1bf      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b46:	4b0e      	ldr	r3, [pc, #56]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b4e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006b52:	d102      	bne.n	8006b5a <HAL_RCCEx_GetPeriphCLKFreq+0x782>
 8006b54:	4b0c      	ldr	r3, [pc, #48]	@ (8006b88 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8006b56:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b58:	e1b5      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b5a:	2300      	movs	r3, #0
 8006b5c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b5e:	e1b2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b60:	4b07      	ldr	r3, [pc, #28]	@ (8006b80 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006b68:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006b6c:	d102      	bne.n	8006b74 <HAL_RCCEx_GetPeriphCLKFreq+0x79c>
 8006b6e:	4b07      	ldr	r3, [pc, #28]	@ (8006b8c <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 8006b70:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b72:	e1a8      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b74:	2300      	movs	r3, #0
 8006b76:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b78:	e1a5      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b7a:	2300      	movs	r3, #0
 8006b7c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006b7e:	e1a2      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006b80:	58024400 	.word	0x58024400
 8006b84:	03d09000 	.word	0x03d09000
 8006b88:	003d0900 	.word	0x003d0900
 8006b8c:	017d7840 	.word	0x017d7840
 8006b90:	00bb8000 	.word	0x00bb8000
 8006b94:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006b98:	f5a2 2100 	sub.w	r1, r2, #524288	@ 0x80000
 8006b9c:	430b      	orrs	r3, r1
 8006b9e:	d173      	bne.n	8006c88 <HAL_RCCEx_GetPeriphCLKFreq+0x8b0>
 8006ba0:	4b9c      	ldr	r3, [pc, #624]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006ba2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006ba4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8006ba8:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006baa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006bac:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006bb0:	d02f      	beq.n	8006c12 <HAL_RCCEx_GetPeriphCLKFreq+0x83a>
 8006bb2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006bb4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006bb8:	d863      	bhi.n	8006c82 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 8006bba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d004      	beq.n	8006bca <HAL_RCCEx_GetPeriphCLKFreq+0x7f2>
 8006bc0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006bc2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006bc6:	d012      	beq.n	8006bee <HAL_RCCEx_GetPeriphCLKFreq+0x816>
 8006bc8:	e05b      	b.n	8006c82 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 8006bca:	4b92      	ldr	r3, [pc, #584]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006bd2:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006bd6:	d107      	bne.n	8006be8 <HAL_RCCEx_GetPeriphCLKFreq+0x810>
 8006bd8:	f107 0318 	add.w	r3, r7, #24
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f000 f991 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006be2:	69bb      	ldr	r3, [r7, #24]
 8006be4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006be6:	e16e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006be8:	2300      	movs	r3, #0
 8006bea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006bec:	e16b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006bee:	4b89      	ldr	r3, [pc, #548]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006bf6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006bfa:	d107      	bne.n	8006c0c <HAL_RCCEx_GetPeriphCLKFreq+0x834>
 8006bfc:	f107 030c 	add.w	r3, r7, #12
 8006c00:	4618      	mov	r0, r3
 8006c02:	f000 fad3 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 8006c06:	697b      	ldr	r3, [r7, #20]
 8006c08:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c0a:	e15c      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006c0c:	2300      	movs	r3, #0
 8006c0e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c10:	e159      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006c12:	4b80      	ldr	r3, [pc, #512]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c14:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006c16:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8006c1a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006c1c:	4b7d      	ldr	r3, [pc, #500]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	f003 0304 	and.w	r3, r3, #4
 8006c24:	2b04      	cmp	r3, #4
 8006c26:	d10c      	bne.n	8006c42 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8006c28:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d109      	bne.n	8006c42 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8006c2e:	4b79      	ldr	r3, [pc, #484]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	08db      	lsrs	r3, r3, #3
 8006c34:	f003 0303 	and.w	r3, r3, #3
 8006c38:	4a77      	ldr	r2, [pc, #476]	@ (8006e18 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8006c3a:	fa22 f303 	lsr.w	r3, r2, r3
 8006c3e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c40:	e01e      	b.n	8006c80 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8006c42:	4b74      	ldr	r3, [pc, #464]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c4a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006c4e:	d106      	bne.n	8006c5e <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 8006c50:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006c52:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006c56:	d102      	bne.n	8006c5e <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 8006c58:	4b70      	ldr	r3, [pc, #448]	@ (8006e1c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8006c5a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c5c:	e010      	b.n	8006c80 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8006c5e:	4b6d      	ldr	r3, [pc, #436]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006c66:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006c6a:	d106      	bne.n	8006c7a <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 8006c6c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8006c6e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006c72:	d102      	bne.n	8006c7a <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 8006c74:	4b6a      	ldr	r3, [pc, #424]	@ (8006e20 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8006c76:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c78:	e002      	b.n	8006c80 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8006c7a:	2300      	movs	r3, #0
 8006c7c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c7e:	e122      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006c80:	e121      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006c82:	2300      	movs	r3, #0
 8006c84:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006c86:	e11e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006c88:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006c8c:	f5a2 3180 	sub.w	r1, r2, #65536	@ 0x10000
 8006c90:	430b      	orrs	r3, r1
 8006c92:	d133      	bne.n	8006cfc <HAL_RCCEx_GetPeriphCLKFreq+0x924>
 8006c94:	4b5f      	ldr	r3, [pc, #380]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006c96:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006c98:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006c9c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006c9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ca0:	2b00      	cmp	r3, #0
 8006ca2:	d004      	beq.n	8006cae <HAL_RCCEx_GetPeriphCLKFreq+0x8d6>
 8006ca4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006ca6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006caa:	d012      	beq.n	8006cd2 <HAL_RCCEx_GetPeriphCLKFreq+0x8fa>
 8006cac:	e023      	b.n	8006cf6 <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 8006cae:	4b59      	ldr	r3, [pc, #356]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006cb0:	681b      	ldr	r3, [r3, #0]
 8006cb2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006cb6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006cba:	d107      	bne.n	8006ccc <HAL_RCCEx_GetPeriphCLKFreq+0x8f4>
 8006cbc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8006cc0:	4618      	mov	r0, r3
 8006cc2:	f000 fbc7 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 8006cc6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006cc8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cca:	e0fc      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006ccc:	2300      	movs	r3, #0
 8006cce:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cd0:	e0f9      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006cd2:	4b50      	ldr	r3, [pc, #320]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006cd4:	681b      	ldr	r3, [r3, #0]
 8006cd6:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006cda:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006cde:	d107      	bne.n	8006cf0 <HAL_RCCEx_GetPeriphCLKFreq+0x918>
 8006ce0:	f107 0318 	add.w	r3, r7, #24
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	f000 f90d 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006cea:	6a3b      	ldr	r3, [r7, #32]
 8006cec:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cee:	e0ea      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006cf0:	2300      	movs	r3, #0
 8006cf2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cf4:	e0e7      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006cf6:	2300      	movs	r3, #0
 8006cf8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006cfa:	e0e4      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006cfc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006d00:	f5a2 4180 	sub.w	r1, r2, #16384	@ 0x4000
 8006d04:	430b      	orrs	r3, r1
 8006d06:	f040 808d 	bne.w	8006e24 <HAL_RCCEx_GetPeriphCLKFreq+0xa4c>
 8006d0a:	4b42      	ldr	r3, [pc, #264]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006d0c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006d0e:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
 8006d12:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006d14:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d16:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006d1a:	d06b      	beq.n	8006df4 <HAL_RCCEx_GetPeriphCLKFreq+0xa1c>
 8006d1c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d1e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006d22:	d874      	bhi.n	8006e0e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8006d24:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d26:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006d2a:	d056      	beq.n	8006dda <HAL_RCCEx_GetPeriphCLKFreq+0xa02>
 8006d2c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d2e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006d32:	d86c      	bhi.n	8006e0e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8006d34:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d36:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8006d3a:	d03b      	beq.n	8006db4 <HAL_RCCEx_GetPeriphCLKFreq+0x9dc>
 8006d3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d3e:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8006d42:	d864      	bhi.n	8006e0e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8006d44:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d46:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006d4a:	d021      	beq.n	8006d90 <HAL_RCCEx_GetPeriphCLKFreq+0x9b8>
 8006d4c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d4e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006d52:	d85c      	bhi.n	8006e0e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8006d54:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d56:	2b00      	cmp	r3, #0
 8006d58:	d004      	beq.n	8006d64 <HAL_RCCEx_GetPeriphCLKFreq+0x98c>
 8006d5a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006d5c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006d60:	d004      	beq.n	8006d6c <HAL_RCCEx_GetPeriphCLKFreq+0x994>
 8006d62:	e054      	b.n	8006e0e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8006d64:	f000 f8b8 	bl	8006ed8 <HAL_RCCEx_GetD3PCLK1Freq>
 8006d68:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8006d6a:	e0ac      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006d6c:	4b29      	ldr	r3, [pc, #164]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006d6e:	681b      	ldr	r3, [r3, #0]
 8006d70:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006d74:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006d78:	d107      	bne.n	8006d8a <HAL_RCCEx_GetPeriphCLKFreq+0x9b2>
 8006d7a:	f107 0318 	add.w	r3, r7, #24
 8006d7e:	4618      	mov	r0, r3
 8006d80:	f000 f8c0 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006d84:	69fb      	ldr	r3, [r7, #28]
 8006d86:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006d88:	e09d      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006d8a:	2300      	movs	r3, #0
 8006d8c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006d8e:	e09a      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006d90:	4b20      	ldr	r3, [pc, #128]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006d98:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006d9c:	d107      	bne.n	8006dae <HAL_RCCEx_GetPeriphCLKFreq+0x9d6>
 8006d9e:	f107 030c 	add.w	r3, r7, #12
 8006da2:	4618      	mov	r0, r3
 8006da4:	f000 fa02 	bl	80071ac <HAL_RCCEx_GetPLL3ClockFreq>
 8006da8:	693b      	ldr	r3, [r7, #16]
 8006daa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006dac:	e08b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006dae:	2300      	movs	r3, #0
 8006db0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006db2:	e088      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006db4:	4b17      	ldr	r3, [pc, #92]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	f003 0304 	and.w	r3, r3, #4
 8006dbc:	2b04      	cmp	r3, #4
 8006dbe:	d109      	bne.n	8006dd4 <HAL_RCCEx_GetPeriphCLKFreq+0x9fc>
 8006dc0:	4b14      	ldr	r3, [pc, #80]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	08db      	lsrs	r3, r3, #3
 8006dc6:	f003 0303 	and.w	r3, r3, #3
 8006dca:	4a13      	ldr	r2, [pc, #76]	@ (8006e18 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8006dcc:	fa22 f303 	lsr.w	r3, r2, r3
 8006dd0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006dd2:	e078      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006dd4:	2300      	movs	r3, #0
 8006dd6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006dd8:	e075      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006dda:	4b0e      	ldr	r3, [pc, #56]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006de2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006de6:	d102      	bne.n	8006dee <HAL_RCCEx_GetPeriphCLKFreq+0xa16>
 8006de8:	4b0c      	ldr	r3, [pc, #48]	@ (8006e1c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8006dea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006dec:	e06b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006dee:	2300      	movs	r3, #0
 8006df0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006df2:	e068      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006df4:	4b07      	ldr	r3, [pc, #28]	@ (8006e14 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006dfc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006e00:	d102      	bne.n	8006e08 <HAL_RCCEx_GetPeriphCLKFreq+0xa30>
 8006e02:	4b07      	ldr	r3, [pc, #28]	@ (8006e20 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8006e04:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e06:	e05e      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e08:	2300      	movs	r3, #0
 8006e0a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e0c:	e05b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e0e:	2300      	movs	r3, #0
 8006e10:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e12:	e058      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e14:	58024400 	.word	0x58024400
 8006e18:	03d09000 	.word	0x03d09000
 8006e1c:	003d0900 	.word	0x003d0900
 8006e20:	017d7840 	.word	0x017d7840
 8006e24:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006e28:	f5a2 4100 	sub.w	r1, r2, #32768	@ 0x8000
 8006e2c:	430b      	orrs	r3, r1
 8006e2e:	d148      	bne.n	8006ec2 <HAL_RCCEx_GetPeriphCLKFreq+0xaea>
 8006e30:	4b27      	ldr	r3, [pc, #156]	@ (8006ed0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8006e32:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006e34:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8006e38:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006e3a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e3c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006e40:	d02a      	beq.n	8006e98 <HAL_RCCEx_GetPeriphCLKFreq+0xac0>
 8006e42:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e44:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006e48:	d838      	bhi.n	8006ebc <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 8006e4a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	d004      	beq.n	8006e5a <HAL_RCCEx_GetPeriphCLKFreq+0xa82>
 8006e50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8006e52:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006e56:	d00d      	beq.n	8006e74 <HAL_RCCEx_GetPeriphCLKFreq+0xa9c>
 8006e58:	e030      	b.n	8006ebc <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 8006e5a:	4b1d      	ldr	r3, [pc, #116]	@ (8006ed0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e62:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006e66:	d102      	bne.n	8006e6e <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 8006e68:	4b1a      	ldr	r3, [pc, #104]	@ (8006ed4 <HAL_RCCEx_GetPeriphCLKFreq+0xafc>)
 8006e6a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e6c:	e02b      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e6e:	2300      	movs	r3, #0
 8006e70:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e72:	e028      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e74:	4b16      	ldr	r3, [pc, #88]	@ (8006ed0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8006e76:	681b      	ldr	r3, [r3, #0]
 8006e78:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006e7c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006e80:	d107      	bne.n	8006e92 <HAL_RCCEx_GetPeriphCLKFreq+0xaba>
 8006e82:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8006e86:	4618      	mov	r0, r3
 8006e88:	f000 fae4 	bl	8007454 <HAL_RCCEx_GetPLL1ClockFreq>
 8006e8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006e8e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e90:	e019      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e92:	2300      	movs	r3, #0
 8006e94:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006e96:	e016      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006e98:	4b0d      	ldr	r3, [pc, #52]	@ (8006ed0 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006ea0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006ea4:	d107      	bne.n	8006eb6 <HAL_RCCEx_GetPeriphCLKFreq+0xade>
 8006ea6:	f107 0318 	add.w	r3, r7, #24
 8006eaa:	4618      	mov	r0, r3
 8006eac:	f000 f82a 	bl	8006f04 <HAL_RCCEx_GetPLL2ClockFreq>
 8006eb0:	69fb      	ldr	r3, [r7, #28]
 8006eb2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006eb4:	e007      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006eb6:	2300      	movs	r3, #0
 8006eb8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006eba:	e004      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006ebc:	2300      	movs	r3, #0
 8006ebe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006ec0:	e001      	b.n	8006ec6 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8006ec2:	2300      	movs	r3, #0
 8006ec4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006ec6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8006ec8:	4618      	mov	r0, r3
 8006eca:	3740      	adds	r7, #64	@ 0x40
 8006ecc:	46bd      	mov	sp, r7
 8006ece:	bd80      	pop	{r7, pc}
 8006ed0:	58024400 	.word	0x58024400
 8006ed4:	017d7840 	.word	0x017d7840

08006ed8 <HAL_RCCEx_GetD3PCLK1Freq>:
 8006ed8:	b580      	push	{r7, lr}
 8006eda:	af00      	add	r7, sp, #0
 8006edc:	f7fd ffd4 	bl	8004e88 <HAL_RCC_GetHCLKFreq>
 8006ee0:	4602      	mov	r2, r0
 8006ee2:	4b06      	ldr	r3, [pc, #24]	@ (8006efc <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8006ee4:	6a1b      	ldr	r3, [r3, #32]
 8006ee6:	091b      	lsrs	r3, r3, #4
 8006ee8:	f003 0307 	and.w	r3, r3, #7
 8006eec:	4904      	ldr	r1, [pc, #16]	@ (8006f00 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8006eee:	5ccb      	ldrb	r3, [r1, r3]
 8006ef0:	f003 031f 	and.w	r3, r3, #31
 8006ef4:	fa22 f303 	lsr.w	r3, r2, r3
 8006ef8:	4618      	mov	r0, r3
 8006efa:	bd80      	pop	{r7, pc}
 8006efc:	58024400 	.word	0x58024400
 8006f00:	0800b194 	.word	0x0800b194

08006f04 <HAL_RCCEx_GetPLL2ClockFreq>:
 8006f04:	b480      	push	{r7}
 8006f06:	b089      	sub	sp, #36	@ 0x24
 8006f08:	af00      	add	r7, sp, #0
 8006f0a:	6078      	str	r0, [r7, #4]
 8006f0c:	4ba1      	ldr	r3, [pc, #644]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f10:	f003 0303 	and.w	r3, r3, #3
 8006f14:	61bb      	str	r3, [r7, #24]
 8006f16:	4b9f      	ldr	r3, [pc, #636]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f18:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f1a:	0b1b      	lsrs	r3, r3, #12
 8006f1c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006f20:	617b      	str	r3, [r7, #20]
 8006f22:	4b9c      	ldr	r3, [pc, #624]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f26:	091b      	lsrs	r3, r3, #4
 8006f28:	f003 0301 	and.w	r3, r3, #1
 8006f2c:	613b      	str	r3, [r7, #16]
 8006f2e:	4b99      	ldr	r3, [pc, #612]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006f32:	08db      	lsrs	r3, r3, #3
 8006f34:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006f38:	693a      	ldr	r2, [r7, #16]
 8006f3a:	fb02 f303 	mul.w	r3, r2, r3
 8006f3e:	ee07 3a90 	vmov	s15, r3
 8006f42:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006f46:	edc7 7a03 	vstr	s15, [r7, #12]
 8006f4a:	697b      	ldr	r3, [r7, #20]
 8006f4c:	2b00      	cmp	r3, #0
 8006f4e:	f000 8111 	beq.w	8007174 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 8006f52:	69bb      	ldr	r3, [r7, #24]
 8006f54:	2b02      	cmp	r3, #2
 8006f56:	f000 8083 	beq.w	8007060 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8006f5a:	69bb      	ldr	r3, [r7, #24]
 8006f5c:	2b02      	cmp	r3, #2
 8006f5e:	f200 80a1 	bhi.w	80070a4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8006f62:	69bb      	ldr	r3, [r7, #24]
 8006f64:	2b00      	cmp	r3, #0
 8006f66:	d003      	beq.n	8006f70 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8006f68:	69bb      	ldr	r3, [r7, #24]
 8006f6a:	2b01      	cmp	r3, #1
 8006f6c:	d056      	beq.n	800701c <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8006f6e:	e099      	b.n	80070a4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8006f70:	4b88      	ldr	r3, [pc, #544]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	f003 0320 	and.w	r3, r3, #32
 8006f78:	2b00      	cmp	r3, #0
 8006f7a:	d02d      	beq.n	8006fd8 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8006f7c:	4b85      	ldr	r3, [pc, #532]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	08db      	lsrs	r3, r3, #3
 8006f82:	f003 0303 	and.w	r3, r3, #3
 8006f86:	4a84      	ldr	r2, [pc, #528]	@ (8007198 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8006f88:	fa22 f303 	lsr.w	r3, r2, r3
 8006f8c:	60bb      	str	r3, [r7, #8]
 8006f8e:	68bb      	ldr	r3, [r7, #8]
 8006f90:	ee07 3a90 	vmov	s15, r3
 8006f94:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006f98:	697b      	ldr	r3, [r7, #20]
 8006f9a:	ee07 3a90 	vmov	s15, r3
 8006f9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006fa2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006fa6:	4b7b      	ldr	r3, [pc, #492]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006fa8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006faa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006fae:	ee07 3a90 	vmov	s15, r3
 8006fb2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006fb6:	ed97 6a03 	vldr	s12, [r7, #12]
 8006fba:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800719c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006fbe:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006fc2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006fc6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006fca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006fce:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006fd2:	edc7 7a07 	vstr	s15, [r7, #28]
 8006fd6:	e087      	b.n	80070e8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8006fd8:	697b      	ldr	r3, [r7, #20]
 8006fda:	ee07 3a90 	vmov	s15, r3
 8006fde:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006fe2:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 80071a0 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8006fe6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006fea:	4b6a      	ldr	r3, [pc, #424]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006fec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006fee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006ff2:	ee07 3a90 	vmov	s15, r3
 8006ff6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006ffa:	ed97 6a03 	vldr	s12, [r7, #12]
 8006ffe:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800719c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8007002:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007006:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800700a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800700e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007012:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007016:	edc7 7a07 	vstr	s15, [r7, #28]
 800701a:	e065      	b.n	80070e8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800701c:	697b      	ldr	r3, [r7, #20]
 800701e:	ee07 3a90 	vmov	s15, r3
 8007022:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007026:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 80071a4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800702a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800702e:	4b59      	ldr	r3, [pc, #356]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8007030:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007032:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007036:	ee07 3a90 	vmov	s15, r3
 800703a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800703e:	ed97 6a03 	vldr	s12, [r7, #12]
 8007042:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800719c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8007046:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800704a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800704e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007052:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007056:	ee67 7a27 	vmul.f32	s15, s14, s15
 800705a:	edc7 7a07 	vstr	s15, [r7, #28]
 800705e:	e043      	b.n	80070e8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8007060:	697b      	ldr	r3, [r7, #20]
 8007062:	ee07 3a90 	vmov	s15, r3
 8007066:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800706a:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 80071a8 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800706e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007072:	4b48      	ldr	r3, [pc, #288]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8007074:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007076:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800707a:	ee07 3a90 	vmov	s15, r3
 800707e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007082:	ed97 6a03 	vldr	s12, [r7, #12]
 8007086:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800719c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800708a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800708e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007092:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007096:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800709a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800709e:	edc7 7a07 	vstr	s15, [r7, #28]
 80070a2:	e021      	b.n	80070e8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 80070a4:	697b      	ldr	r3, [r7, #20]
 80070a6:	ee07 3a90 	vmov	s15, r3
 80070aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80070ae:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80071a4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 80070b2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80070b6:	4b37      	ldr	r3, [pc, #220]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80070b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80070ba:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070be:	ee07 3a90 	vmov	s15, r3
 80070c2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80070c6:	ed97 6a03 	vldr	s12, [r7, #12]
 80070ca:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800719c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80070ce:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80070d2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80070d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80070da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070de:	ee67 7a27 	vmul.f32	s15, s14, s15
 80070e2:	edc7 7a07 	vstr	s15, [r7, #28]
 80070e6:	bf00      	nop
 80070e8:	4b2a      	ldr	r3, [pc, #168]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80070ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80070ec:	0a5b      	lsrs	r3, r3, #9
 80070ee:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80070f2:	ee07 3a90 	vmov	s15, r3
 80070f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80070fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80070fe:	ee37 7a87 	vadd.f32	s14, s15, s14
 8007102:	edd7 6a07 	vldr	s13, [r7, #28]
 8007106:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800710a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800710e:	ee17 2a90 	vmov	r2, s15
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	601a      	str	r2, [r3, #0]
 8007116:	4b1f      	ldr	r3, [pc, #124]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8007118:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800711a:	0c1b      	lsrs	r3, r3, #16
 800711c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007120:	ee07 3a90 	vmov	s15, r3
 8007124:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007128:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800712c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8007130:	edd7 6a07 	vldr	s13, [r7, #28]
 8007134:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007138:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800713c:	ee17 2a90 	vmov	r2, s15
 8007140:	687b      	ldr	r3, [r7, #4]
 8007142:	605a      	str	r2, [r3, #4]
 8007144:	4b13      	ldr	r3, [pc, #76]	@ (8007194 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8007146:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007148:	0e1b      	lsrs	r3, r3, #24
 800714a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800714e:	ee07 3a90 	vmov	s15, r3
 8007152:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007156:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800715a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800715e:	edd7 6a07 	vldr	s13, [r7, #28]
 8007162:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007166:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800716a:	ee17 2a90 	vmov	r2, s15
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	609a      	str	r2, [r3, #8]
 8007172:	e008      	b.n	8007186 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	2200      	movs	r2, #0
 8007178:	601a      	str	r2, [r3, #0]
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	2200      	movs	r2, #0
 800717e:	605a      	str	r2, [r3, #4]
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	2200      	movs	r2, #0
 8007184:	609a      	str	r2, [r3, #8]
 8007186:	bf00      	nop
 8007188:	3724      	adds	r7, #36	@ 0x24
 800718a:	46bd      	mov	sp, r7
 800718c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007190:	4770      	bx	lr
 8007192:	bf00      	nop
 8007194:	58024400 	.word	0x58024400
 8007198:	03d09000 	.word	0x03d09000
 800719c:	46000000 	.word	0x46000000
 80071a0:	4c742400 	.word	0x4c742400
 80071a4:	4a742400 	.word	0x4a742400
 80071a8:	4bbebc20 	.word	0x4bbebc20

080071ac <HAL_RCCEx_GetPLL3ClockFreq>:
 80071ac:	b480      	push	{r7}
 80071ae:	b089      	sub	sp, #36	@ 0x24
 80071b0:	af00      	add	r7, sp, #0
 80071b2:	6078      	str	r0, [r7, #4]
 80071b4:	4ba1      	ldr	r3, [pc, #644]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80071b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80071b8:	f003 0303 	and.w	r3, r3, #3
 80071bc:	61bb      	str	r3, [r7, #24]
 80071be:	4b9f      	ldr	r3, [pc, #636]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80071c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80071c2:	0d1b      	lsrs	r3, r3, #20
 80071c4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80071c8:	617b      	str	r3, [r7, #20]
 80071ca:	4b9c      	ldr	r3, [pc, #624]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80071cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80071ce:	0a1b      	lsrs	r3, r3, #8
 80071d0:	f003 0301 	and.w	r3, r3, #1
 80071d4:	613b      	str	r3, [r7, #16]
 80071d6:	4b99      	ldr	r3, [pc, #612]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80071d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80071da:	08db      	lsrs	r3, r3, #3
 80071dc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80071e0:	693a      	ldr	r2, [r7, #16]
 80071e2:	fb02 f303 	mul.w	r3, r2, r3
 80071e6:	ee07 3a90 	vmov	s15, r3
 80071ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80071ee:	edc7 7a03 	vstr	s15, [r7, #12]
 80071f2:	697b      	ldr	r3, [r7, #20]
 80071f4:	2b00      	cmp	r3, #0
 80071f6:	f000 8111 	beq.w	800741c <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 80071fa:	69bb      	ldr	r3, [r7, #24]
 80071fc:	2b02      	cmp	r3, #2
 80071fe:	f000 8083 	beq.w	8007308 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8007202:	69bb      	ldr	r3, [r7, #24]
 8007204:	2b02      	cmp	r3, #2
 8007206:	f200 80a1 	bhi.w	800734c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800720a:	69bb      	ldr	r3, [r7, #24]
 800720c:	2b00      	cmp	r3, #0
 800720e:	d003      	beq.n	8007218 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8007210:	69bb      	ldr	r3, [r7, #24]
 8007212:	2b01      	cmp	r3, #1
 8007214:	d056      	beq.n	80072c4 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8007216:	e099      	b.n	800734c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8007218:	4b88      	ldr	r3, [pc, #544]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	f003 0320 	and.w	r3, r3, #32
 8007220:	2b00      	cmp	r3, #0
 8007222:	d02d      	beq.n	8007280 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 8007224:	4b85      	ldr	r3, [pc, #532]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	08db      	lsrs	r3, r3, #3
 800722a:	f003 0303 	and.w	r3, r3, #3
 800722e:	4a84      	ldr	r2, [pc, #528]	@ (8007440 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8007230:	fa22 f303 	lsr.w	r3, r2, r3
 8007234:	60bb      	str	r3, [r7, #8]
 8007236:	68bb      	ldr	r3, [r7, #8]
 8007238:	ee07 3a90 	vmov	s15, r3
 800723c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007240:	697b      	ldr	r3, [r7, #20]
 8007242:	ee07 3a90 	vmov	s15, r3
 8007246:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800724a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800724e:	4b7b      	ldr	r3, [pc, #492]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007250:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007252:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007256:	ee07 3a90 	vmov	s15, r3
 800725a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800725e:	ed97 6a03 	vldr	s12, [r7, #12]
 8007262:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8007444 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8007266:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800726a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800726e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007272:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007276:	ee67 7a27 	vmul.f32	s15, s14, s15
 800727a:	edc7 7a07 	vstr	s15, [r7, #28]
 800727e:	e087      	b.n	8007390 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8007280:	697b      	ldr	r3, [r7, #20]
 8007282:	ee07 3a90 	vmov	s15, r3
 8007286:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800728a:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 8007448 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800728e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007292:	4b6a      	ldr	r3, [pc, #424]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007294:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007296:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800729a:	ee07 3a90 	vmov	s15, r3
 800729e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80072a2:	ed97 6a03 	vldr	s12, [r7, #12]
 80072a6:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8007444 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80072aa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80072ae:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80072b2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80072b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80072ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 80072be:	edc7 7a07 	vstr	s15, [r7, #28]
 80072c2:	e065      	b.n	8007390 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 80072c4:	697b      	ldr	r3, [r7, #20]
 80072c6:	ee07 3a90 	vmov	s15, r3
 80072ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80072ce:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800744c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 80072d2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80072d6:	4b59      	ldr	r3, [pc, #356]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80072d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80072da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80072de:	ee07 3a90 	vmov	s15, r3
 80072e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80072e6:	ed97 6a03 	vldr	s12, [r7, #12]
 80072ea:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8007444 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80072ee:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80072f2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80072f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80072fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80072fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007302:	edc7 7a07 	vstr	s15, [r7, #28]
 8007306:	e043      	b.n	8007390 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8007308:	697b      	ldr	r3, [r7, #20]
 800730a:	ee07 3a90 	vmov	s15, r3
 800730e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007312:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8007450 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8007316:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800731a:	4b48      	ldr	r3, [pc, #288]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800731c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800731e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007322:	ee07 3a90 	vmov	s15, r3
 8007326:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800732a:	ed97 6a03 	vldr	s12, [r7, #12]
 800732e:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8007444 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8007332:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007336:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800733a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800733e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007342:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007346:	edc7 7a07 	vstr	s15, [r7, #28]
 800734a:	e021      	b.n	8007390 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800734c:	697b      	ldr	r3, [r7, #20]
 800734e:	ee07 3a90 	vmov	s15, r3
 8007352:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007356:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800744c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800735a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800735e:	4b37      	ldr	r3, [pc, #220]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007360:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007362:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007366:	ee07 3a90 	vmov	s15, r3
 800736a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800736e:	ed97 6a03 	vldr	s12, [r7, #12]
 8007372:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8007444 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8007376:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800737a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800737e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007382:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007386:	ee67 7a27 	vmul.f32	s15, s14, s15
 800738a:	edc7 7a07 	vstr	s15, [r7, #28]
 800738e:	bf00      	nop
 8007390:	4b2a      	ldr	r3, [pc, #168]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007392:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007394:	0a5b      	lsrs	r3, r3, #9
 8007396:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800739a:	ee07 3a90 	vmov	s15, r3
 800739e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80073a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80073a6:	ee37 7a87 	vadd.f32	s14, s15, s14
 80073aa:	edd7 6a07 	vldr	s13, [r7, #28]
 80073ae:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80073b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80073b6:	ee17 2a90 	vmov	r2, s15
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	601a      	str	r2, [r3, #0]
 80073be:	4b1f      	ldr	r3, [pc, #124]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80073c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80073c2:	0c1b      	lsrs	r3, r3, #16
 80073c4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80073c8:	ee07 3a90 	vmov	s15, r3
 80073cc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80073d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80073d4:	ee37 7a87 	vadd.f32	s14, s15, s14
 80073d8:	edd7 6a07 	vldr	s13, [r7, #28]
 80073dc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80073e0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80073e4:	ee17 2a90 	vmov	r2, s15
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	605a      	str	r2, [r3, #4]
 80073ec:	4b13      	ldr	r3, [pc, #76]	@ (800743c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80073ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80073f0:	0e1b      	lsrs	r3, r3, #24
 80073f2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80073f6:	ee07 3a90 	vmov	s15, r3
 80073fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80073fe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007402:	ee37 7a87 	vadd.f32	s14, s15, s14
 8007406:	edd7 6a07 	vldr	s13, [r7, #28]
 800740a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800740e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007412:	ee17 2a90 	vmov	r2, s15
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	609a      	str	r2, [r3, #8]
 800741a:	e008      	b.n	800742e <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	2200      	movs	r2, #0
 8007420:	601a      	str	r2, [r3, #0]
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	2200      	movs	r2, #0
 8007426:	605a      	str	r2, [r3, #4]
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	2200      	movs	r2, #0
 800742c:	609a      	str	r2, [r3, #8]
 800742e:	bf00      	nop
 8007430:	3724      	adds	r7, #36	@ 0x24
 8007432:	46bd      	mov	sp, r7
 8007434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007438:	4770      	bx	lr
 800743a:	bf00      	nop
 800743c:	58024400 	.word	0x58024400
 8007440:	03d09000 	.word	0x03d09000
 8007444:	46000000 	.word	0x46000000
 8007448:	4c742400 	.word	0x4c742400
 800744c:	4a742400 	.word	0x4a742400
 8007450:	4bbebc20 	.word	0x4bbebc20

08007454 <HAL_RCCEx_GetPLL1ClockFreq>:
 8007454:	b480      	push	{r7}
 8007456:	b089      	sub	sp, #36	@ 0x24
 8007458:	af00      	add	r7, sp, #0
 800745a:	6078      	str	r0, [r7, #4]
 800745c:	4ba0      	ldr	r3, [pc, #640]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800745e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007460:	f003 0303 	and.w	r3, r3, #3
 8007464:	61bb      	str	r3, [r7, #24]
 8007466:	4b9e      	ldr	r3, [pc, #632]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007468:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800746a:	091b      	lsrs	r3, r3, #4
 800746c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007470:	617b      	str	r3, [r7, #20]
 8007472:	4b9b      	ldr	r3, [pc, #620]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007474:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007476:	f003 0301 	and.w	r3, r3, #1
 800747a:	613b      	str	r3, [r7, #16]
 800747c:	4b98      	ldr	r3, [pc, #608]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800747e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007480:	08db      	lsrs	r3, r3, #3
 8007482:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007486:	693a      	ldr	r2, [r7, #16]
 8007488:	fb02 f303 	mul.w	r3, r2, r3
 800748c:	ee07 3a90 	vmov	s15, r3
 8007490:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007494:	edc7 7a03 	vstr	s15, [r7, #12]
 8007498:	697b      	ldr	r3, [r7, #20]
 800749a:	2b00      	cmp	r3, #0
 800749c:	f000 8111 	beq.w	80076c2 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
 80074a0:	69bb      	ldr	r3, [r7, #24]
 80074a2:	2b02      	cmp	r3, #2
 80074a4:	f000 8083 	beq.w	80075ae <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 80074a8:	69bb      	ldr	r3, [r7, #24]
 80074aa:	2b02      	cmp	r3, #2
 80074ac:	f200 80a1 	bhi.w	80075f2 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 80074b0:	69bb      	ldr	r3, [r7, #24]
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d003      	beq.n	80074be <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 80074b6:	69bb      	ldr	r3, [r7, #24]
 80074b8:	2b01      	cmp	r3, #1
 80074ba:	d056      	beq.n	800756a <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 80074bc:	e099      	b.n	80075f2 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 80074be:	4b88      	ldr	r3, [pc, #544]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	f003 0320 	and.w	r3, r3, #32
 80074c6:	2b00      	cmp	r3, #0
 80074c8:	d02d      	beq.n	8007526 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
 80074ca:	4b85      	ldr	r3, [pc, #532]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	08db      	lsrs	r3, r3, #3
 80074d0:	f003 0303 	and.w	r3, r3, #3
 80074d4:	4a83      	ldr	r2, [pc, #524]	@ (80076e4 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 80074d6:	fa22 f303 	lsr.w	r3, r2, r3
 80074da:	60bb      	str	r3, [r7, #8]
 80074dc:	68bb      	ldr	r3, [r7, #8]
 80074de:	ee07 3a90 	vmov	s15, r3
 80074e2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80074e6:	697b      	ldr	r3, [r7, #20]
 80074e8:	ee07 3a90 	vmov	s15, r3
 80074ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80074f0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80074f4:	4b7a      	ldr	r3, [pc, #488]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80074f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80074f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80074fc:	ee07 3a90 	vmov	s15, r3
 8007500:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007504:	ed97 6a03 	vldr	s12, [r7, #12]
 8007508:	eddf 5a77 	vldr	s11, [pc, #476]	@ 80076e8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800750c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007510:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007514:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007518:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800751c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007520:	edc7 7a07 	vstr	s15, [r7, #28]
 8007524:	e087      	b.n	8007636 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 8007526:	697b      	ldr	r3, [r7, #20]
 8007528:	ee07 3a90 	vmov	s15, r3
 800752c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007530:	eddf 6a6e 	vldr	s13, [pc, #440]	@ 80076ec <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8007534:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007538:	4b69      	ldr	r3, [pc, #420]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800753a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800753c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007540:	ee07 3a90 	vmov	s15, r3
 8007544:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007548:	ed97 6a03 	vldr	s12, [r7, #12]
 800754c:	eddf 5a66 	vldr	s11, [pc, #408]	@ 80076e8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8007550:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007554:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007558:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800755c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007560:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007564:	edc7 7a07 	vstr	s15, [r7, #28]
 8007568:	e065      	b.n	8007636 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800756a:	697b      	ldr	r3, [r7, #20]
 800756c:	ee07 3a90 	vmov	s15, r3
 8007570:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007574:	eddf 6a5e 	vldr	s13, [pc, #376]	@ 80076f0 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 8007578:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800757c:	4b58      	ldr	r3, [pc, #352]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800757e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007580:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007584:	ee07 3a90 	vmov	s15, r3
 8007588:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800758c:	ed97 6a03 	vldr	s12, [r7, #12]
 8007590:	eddf 5a55 	vldr	s11, [pc, #340]	@ 80076e8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 8007594:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007598:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800759c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80075a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80075a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80075a8:	edc7 7a07 	vstr	s15, [r7, #28]
 80075ac:	e043      	b.n	8007636 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 80075ae:	697b      	ldr	r3, [r7, #20]
 80075b0:	ee07 3a90 	vmov	s15, r3
 80075b4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80075b8:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 80076f4 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 80075bc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80075c0:	4b47      	ldr	r3, [pc, #284]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 80075c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80075c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80075c8:	ee07 3a90 	vmov	s15, r3
 80075cc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80075d0:	ed97 6a03 	vldr	s12, [r7, #12]
 80075d4:	eddf 5a44 	vldr	s11, [pc, #272]	@ 80076e8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 80075d8:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80075dc:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80075e0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80075e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80075e8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80075ec:	edc7 7a07 	vstr	s15, [r7, #28]
 80075f0:	e021      	b.n	8007636 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 80075f2:	697b      	ldr	r3, [r7, #20]
 80075f4:	ee07 3a90 	vmov	s15, r3
 80075f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80075fc:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 80076ec <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 8007600:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007604:	4b36      	ldr	r3, [pc, #216]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007606:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007608:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800760c:	ee07 3a90 	vmov	s15, r3
 8007610:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007614:	ed97 6a03 	vldr	s12, [r7, #12]
 8007618:	eddf 5a33 	vldr	s11, [pc, #204]	@ 80076e8 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800761c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007620:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007624:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007628:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800762c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007630:	edc7 7a07 	vstr	s15, [r7, #28]
 8007634:	bf00      	nop
 8007636:	4b2a      	ldr	r3, [pc, #168]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007638:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800763a:	0a5b      	lsrs	r3, r3, #9
 800763c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007640:	ee07 3a90 	vmov	s15, r3
 8007644:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007648:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800764c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8007650:	edd7 6a07 	vldr	s13, [r7, #28]
 8007654:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007658:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800765c:	ee17 2a90 	vmov	r2, s15
 8007660:	687b      	ldr	r3, [r7, #4]
 8007662:	601a      	str	r2, [r3, #0]
 8007664:	4b1e      	ldr	r3, [pc, #120]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007666:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007668:	0c1b      	lsrs	r3, r3, #16
 800766a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800766e:	ee07 3a90 	vmov	s15, r3
 8007672:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007676:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800767a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800767e:	edd7 6a07 	vldr	s13, [r7, #28]
 8007682:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007686:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800768a:	ee17 2a90 	vmov	r2, s15
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	605a      	str	r2, [r3, #4]
 8007692:	4b13      	ldr	r3, [pc, #76]	@ (80076e0 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 8007694:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007696:	0e1b      	lsrs	r3, r3, #24
 8007698:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800769c:	ee07 3a90 	vmov	s15, r3
 80076a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80076a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80076a8:	ee37 7a87 	vadd.f32	s14, s15, s14
 80076ac:	edd7 6a07 	vldr	s13, [r7, #28]
 80076b0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80076b4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80076b8:	ee17 2a90 	vmov	r2, s15
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	609a      	str	r2, [r3, #8]
 80076c0:	e008      	b.n	80076d4 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	2200      	movs	r2, #0
 80076c6:	601a      	str	r2, [r3, #0]
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	2200      	movs	r2, #0
 80076cc:	605a      	str	r2, [r3, #4]
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	2200      	movs	r2, #0
 80076d2:	609a      	str	r2, [r3, #8]
 80076d4:	bf00      	nop
 80076d6:	3724      	adds	r7, #36	@ 0x24
 80076d8:	46bd      	mov	sp, r7
 80076da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076de:	4770      	bx	lr
 80076e0:	58024400 	.word	0x58024400
 80076e4:	03d09000 	.word	0x03d09000
 80076e8:	46000000 	.word	0x46000000
 80076ec:	4c742400 	.word	0x4c742400
 80076f0:	4a742400 	.word	0x4a742400
 80076f4:	4bbebc20 	.word	0x4bbebc20

080076f8 <RCCEx_PLL2_Config>:
 80076f8:	b580      	push	{r7, lr}
 80076fa:	b084      	sub	sp, #16
 80076fc:	af00      	add	r7, sp, #0
 80076fe:	6078      	str	r0, [r7, #4]
 8007700:	6039      	str	r1, [r7, #0]
 8007702:	2300      	movs	r3, #0
 8007704:	73fb      	strb	r3, [r7, #15]
 8007706:	4b53      	ldr	r3, [pc, #332]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007708:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800770a:	f003 0303 	and.w	r3, r3, #3
 800770e:	2b03      	cmp	r3, #3
 8007710:	d101      	bne.n	8007716 <RCCEx_PLL2_Config+0x1e>
 8007712:	2301      	movs	r3, #1
 8007714:	e099      	b.n	800784a <RCCEx_PLL2_Config+0x152>
 8007716:	4b4f      	ldr	r3, [pc, #316]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007718:	681b      	ldr	r3, [r3, #0]
 800771a:	4a4e      	ldr	r2, [pc, #312]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800771c:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007720:	6013      	str	r3, [r2, #0]
 8007722:	f7fa fc05 	bl	8001f30 <HAL_GetTick>
 8007726:	60b8      	str	r0, [r7, #8]
 8007728:	e008      	b.n	800773c <RCCEx_PLL2_Config+0x44>
 800772a:	f7fa fc01 	bl	8001f30 <HAL_GetTick>
 800772e:	4602      	mov	r2, r0
 8007730:	68bb      	ldr	r3, [r7, #8]
 8007732:	1ad3      	subs	r3, r2, r3
 8007734:	2b02      	cmp	r3, #2
 8007736:	d901      	bls.n	800773c <RCCEx_PLL2_Config+0x44>
 8007738:	2303      	movs	r3, #3
 800773a:	e086      	b.n	800784a <RCCEx_PLL2_Config+0x152>
 800773c:	4b45      	ldr	r3, [pc, #276]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007744:	2b00      	cmp	r3, #0
 8007746:	d1f0      	bne.n	800772a <RCCEx_PLL2_Config+0x32>
 8007748:	4b42      	ldr	r3, [pc, #264]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800774a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800774c:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	681b      	ldr	r3, [r3, #0]
 8007754:	031b      	lsls	r3, r3, #12
 8007756:	493f      	ldr	r1, [pc, #252]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007758:	4313      	orrs	r3, r2
 800775a:	628b      	str	r3, [r1, #40]	@ 0x28
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	685b      	ldr	r3, [r3, #4]
 8007760:	3b01      	subs	r3, #1
 8007762:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	689b      	ldr	r3, [r3, #8]
 800776a:	3b01      	subs	r3, #1
 800776c:	025b      	lsls	r3, r3, #9
 800776e:	b29b      	uxth	r3, r3
 8007770:	431a      	orrs	r2, r3
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	68db      	ldr	r3, [r3, #12]
 8007776:	3b01      	subs	r3, #1
 8007778:	041b      	lsls	r3, r3, #16
 800777a:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800777e:	431a      	orrs	r2, r3
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	691b      	ldr	r3, [r3, #16]
 8007784:	3b01      	subs	r3, #1
 8007786:	061b      	lsls	r3, r3, #24
 8007788:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800778c:	4931      	ldr	r1, [pc, #196]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800778e:	4313      	orrs	r3, r2
 8007790:	638b      	str	r3, [r1, #56]	@ 0x38
 8007792:	4b30      	ldr	r3, [pc, #192]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007794:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007796:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	695b      	ldr	r3, [r3, #20]
 800779e:	492d      	ldr	r1, [pc, #180]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077a0:	4313      	orrs	r3, r2
 80077a2:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80077a4:	4b2b      	ldr	r3, [pc, #172]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80077a8:	f023 0220 	bic.w	r2, r3, #32
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	699b      	ldr	r3, [r3, #24]
 80077b0:	4928      	ldr	r1, [pc, #160]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077b2:	4313      	orrs	r3, r2
 80077b4:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80077b6:	4b27      	ldr	r3, [pc, #156]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80077ba:	4a26      	ldr	r2, [pc, #152]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077bc:	f023 0310 	bic.w	r3, r3, #16
 80077c0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80077c2:	4b24      	ldr	r3, [pc, #144]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077c4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80077c6:	4b24      	ldr	r3, [pc, #144]	@ (8007858 <RCCEx_PLL2_Config+0x160>)
 80077c8:	4013      	ands	r3, r2
 80077ca:	687a      	ldr	r2, [r7, #4]
 80077cc:	69d2      	ldr	r2, [r2, #28]
 80077ce:	00d2      	lsls	r2, r2, #3
 80077d0:	4920      	ldr	r1, [pc, #128]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077d2:	4313      	orrs	r3, r2
 80077d4:	63cb      	str	r3, [r1, #60]	@ 0x3c
 80077d6:	4b1f      	ldr	r3, [pc, #124]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80077da:	4a1e      	ldr	r2, [pc, #120]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077dc:	f043 0310 	orr.w	r3, r3, #16
 80077e0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80077e2:	683b      	ldr	r3, [r7, #0]
 80077e4:	2b00      	cmp	r3, #0
 80077e6:	d106      	bne.n	80077f6 <RCCEx_PLL2_Config+0xfe>
 80077e8:	4b1a      	ldr	r3, [pc, #104]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80077ec:	4a19      	ldr	r2, [pc, #100]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077ee:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80077f2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80077f4:	e00f      	b.n	8007816 <RCCEx_PLL2_Config+0x11e>
 80077f6:	683b      	ldr	r3, [r7, #0]
 80077f8:	2b01      	cmp	r3, #1
 80077fa:	d106      	bne.n	800780a <RCCEx_PLL2_Config+0x112>
 80077fc:	4b15      	ldr	r3, [pc, #84]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 80077fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007800:	4a14      	ldr	r2, [pc, #80]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007802:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007806:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007808:	e005      	b.n	8007816 <RCCEx_PLL2_Config+0x11e>
 800780a:	4b12      	ldr	r3, [pc, #72]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800780c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800780e:	4a11      	ldr	r2, [pc, #68]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007810:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8007814:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007816:	4b0f      	ldr	r3, [pc, #60]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	4a0e      	ldr	r2, [pc, #56]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800781c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007820:	6013      	str	r3, [r2, #0]
 8007822:	f7fa fb85 	bl	8001f30 <HAL_GetTick>
 8007826:	60b8      	str	r0, [r7, #8]
 8007828:	e008      	b.n	800783c <RCCEx_PLL2_Config+0x144>
 800782a:	f7fa fb81 	bl	8001f30 <HAL_GetTick>
 800782e:	4602      	mov	r2, r0
 8007830:	68bb      	ldr	r3, [r7, #8]
 8007832:	1ad3      	subs	r3, r2, r3
 8007834:	2b02      	cmp	r3, #2
 8007836:	d901      	bls.n	800783c <RCCEx_PLL2_Config+0x144>
 8007838:	2303      	movs	r3, #3
 800783a:	e006      	b.n	800784a <RCCEx_PLL2_Config+0x152>
 800783c:	4b05      	ldr	r3, [pc, #20]	@ (8007854 <RCCEx_PLL2_Config+0x15c>)
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007844:	2b00      	cmp	r3, #0
 8007846:	d0f0      	beq.n	800782a <RCCEx_PLL2_Config+0x132>
 8007848:	7bfb      	ldrb	r3, [r7, #15]
 800784a:	4618      	mov	r0, r3
 800784c:	3710      	adds	r7, #16
 800784e:	46bd      	mov	sp, r7
 8007850:	bd80      	pop	{r7, pc}
 8007852:	bf00      	nop
 8007854:	58024400 	.word	0x58024400
 8007858:	ffff0007 	.word	0xffff0007

0800785c <RCCEx_PLL3_Config>:
 800785c:	b580      	push	{r7, lr}
 800785e:	b084      	sub	sp, #16
 8007860:	af00      	add	r7, sp, #0
 8007862:	6078      	str	r0, [r7, #4]
 8007864:	6039      	str	r1, [r7, #0]
 8007866:	2300      	movs	r3, #0
 8007868:	73fb      	strb	r3, [r7, #15]
 800786a:	4b53      	ldr	r3, [pc, #332]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800786c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800786e:	f003 0303 	and.w	r3, r3, #3
 8007872:	2b03      	cmp	r3, #3
 8007874:	d101      	bne.n	800787a <RCCEx_PLL3_Config+0x1e>
 8007876:	2301      	movs	r3, #1
 8007878:	e099      	b.n	80079ae <RCCEx_PLL3_Config+0x152>
 800787a:	4b4f      	ldr	r3, [pc, #316]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800787c:	681b      	ldr	r3, [r3, #0]
 800787e:	4a4e      	ldr	r2, [pc, #312]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007880:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007884:	6013      	str	r3, [r2, #0]
 8007886:	f7fa fb53 	bl	8001f30 <HAL_GetTick>
 800788a:	60b8      	str	r0, [r7, #8]
 800788c:	e008      	b.n	80078a0 <RCCEx_PLL3_Config+0x44>
 800788e:	f7fa fb4f 	bl	8001f30 <HAL_GetTick>
 8007892:	4602      	mov	r2, r0
 8007894:	68bb      	ldr	r3, [r7, #8]
 8007896:	1ad3      	subs	r3, r2, r3
 8007898:	2b02      	cmp	r3, #2
 800789a:	d901      	bls.n	80078a0 <RCCEx_PLL3_Config+0x44>
 800789c:	2303      	movs	r3, #3
 800789e:	e086      	b.n	80079ae <RCCEx_PLL3_Config+0x152>
 80078a0:	4b45      	ldr	r3, [pc, #276]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80078a2:	681b      	ldr	r3, [r3, #0]
 80078a4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80078a8:	2b00      	cmp	r3, #0
 80078aa:	d1f0      	bne.n	800788e <RCCEx_PLL3_Config+0x32>
 80078ac:	4b42      	ldr	r3, [pc, #264]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80078ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80078b0:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 80078b4:	687b      	ldr	r3, [r7, #4]
 80078b6:	681b      	ldr	r3, [r3, #0]
 80078b8:	051b      	lsls	r3, r3, #20
 80078ba:	493f      	ldr	r1, [pc, #252]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80078bc:	4313      	orrs	r3, r2
 80078be:	628b      	str	r3, [r1, #40]	@ 0x28
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	685b      	ldr	r3, [r3, #4]
 80078c4:	3b01      	subs	r3, #1
 80078c6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	689b      	ldr	r3, [r3, #8]
 80078ce:	3b01      	subs	r3, #1
 80078d0:	025b      	lsls	r3, r3, #9
 80078d2:	b29b      	uxth	r3, r3
 80078d4:	431a      	orrs	r2, r3
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	68db      	ldr	r3, [r3, #12]
 80078da:	3b01      	subs	r3, #1
 80078dc:	041b      	lsls	r3, r3, #16
 80078de:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 80078e2:	431a      	orrs	r2, r3
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	691b      	ldr	r3, [r3, #16]
 80078e8:	3b01      	subs	r3, #1
 80078ea:	061b      	lsls	r3, r3, #24
 80078ec:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 80078f0:	4931      	ldr	r1, [pc, #196]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80078f2:	4313      	orrs	r3, r2
 80078f4:	640b      	str	r3, [r1, #64]	@ 0x40
 80078f6:	4b30      	ldr	r3, [pc, #192]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80078f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80078fa:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	695b      	ldr	r3, [r3, #20]
 8007902:	492d      	ldr	r1, [pc, #180]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007904:	4313      	orrs	r3, r2
 8007906:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8007908:	4b2b      	ldr	r3, [pc, #172]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800790a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800790c:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	699b      	ldr	r3, [r3, #24]
 8007914:	4928      	ldr	r1, [pc, #160]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007916:	4313      	orrs	r3, r2
 8007918:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800791a:	4b27      	ldr	r3, [pc, #156]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800791c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800791e:	4a26      	ldr	r2, [pc, #152]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007920:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007924:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007926:	4b24      	ldr	r3, [pc, #144]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007928:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800792a:	4b24      	ldr	r3, [pc, #144]	@ (80079bc <RCCEx_PLL3_Config+0x160>)
 800792c:	4013      	ands	r3, r2
 800792e:	687a      	ldr	r2, [r7, #4]
 8007930:	69d2      	ldr	r2, [r2, #28]
 8007932:	00d2      	lsls	r2, r2, #3
 8007934:	4920      	ldr	r1, [pc, #128]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007936:	4313      	orrs	r3, r2
 8007938:	644b      	str	r3, [r1, #68]	@ 0x44
 800793a:	4b1f      	ldr	r3, [pc, #124]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800793c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800793e:	4a1e      	ldr	r2, [pc, #120]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007940:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007944:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007946:	683b      	ldr	r3, [r7, #0]
 8007948:	2b00      	cmp	r3, #0
 800794a:	d106      	bne.n	800795a <RCCEx_PLL3_Config+0xfe>
 800794c:	4b1a      	ldr	r3, [pc, #104]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800794e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007950:	4a19      	ldr	r2, [pc, #100]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007952:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8007956:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007958:	e00f      	b.n	800797a <RCCEx_PLL3_Config+0x11e>
 800795a:	683b      	ldr	r3, [r7, #0]
 800795c:	2b01      	cmp	r3, #1
 800795e:	d106      	bne.n	800796e <RCCEx_PLL3_Config+0x112>
 8007960:	4b15      	ldr	r3, [pc, #84]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007962:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007964:	4a14      	ldr	r2, [pc, #80]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007966:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800796a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800796c:	e005      	b.n	800797a <RCCEx_PLL3_Config+0x11e>
 800796e:	4b12      	ldr	r3, [pc, #72]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007970:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007972:	4a11      	ldr	r2, [pc, #68]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007974:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007978:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800797a:	4b0f      	ldr	r3, [pc, #60]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	4a0e      	ldr	r2, [pc, #56]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 8007980:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007984:	6013      	str	r3, [r2, #0]
 8007986:	f7fa fad3 	bl	8001f30 <HAL_GetTick>
 800798a:	60b8      	str	r0, [r7, #8]
 800798c:	e008      	b.n	80079a0 <RCCEx_PLL3_Config+0x144>
 800798e:	f7fa facf 	bl	8001f30 <HAL_GetTick>
 8007992:	4602      	mov	r2, r0
 8007994:	68bb      	ldr	r3, [r7, #8]
 8007996:	1ad3      	subs	r3, r2, r3
 8007998:	2b02      	cmp	r3, #2
 800799a:	d901      	bls.n	80079a0 <RCCEx_PLL3_Config+0x144>
 800799c:	2303      	movs	r3, #3
 800799e:	e006      	b.n	80079ae <RCCEx_PLL3_Config+0x152>
 80079a0:	4b05      	ldr	r3, [pc, #20]	@ (80079b8 <RCCEx_PLL3_Config+0x15c>)
 80079a2:	681b      	ldr	r3, [r3, #0]
 80079a4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d0f0      	beq.n	800798e <RCCEx_PLL3_Config+0x132>
 80079ac:	7bfb      	ldrb	r3, [r7, #15]
 80079ae:	4618      	mov	r0, r3
 80079b0:	3710      	adds	r7, #16
 80079b2:	46bd      	mov	sp, r7
 80079b4:	bd80      	pop	{r7, pc}
 80079b6:	bf00      	nop
 80079b8:	58024400 	.word	0x58024400
 80079bc:	ffff0007 	.word	0xffff0007

080079c0 <HAL_TIM_Base_Init>:
 80079c0:	b580      	push	{r7, lr}
 80079c2:	b082      	sub	sp, #8
 80079c4:	af00      	add	r7, sp, #0
 80079c6:	6078      	str	r0, [r7, #4]
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	2b00      	cmp	r3, #0
 80079cc:	d101      	bne.n	80079d2 <HAL_TIM_Base_Init+0x12>
 80079ce:	2301      	movs	r3, #1
 80079d0:	e049      	b.n	8007a66 <HAL_TIM_Base_Init+0xa6>
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80079d8:	b2db      	uxtb	r3, r3
 80079da:	2b00      	cmp	r3, #0
 80079dc:	d106      	bne.n	80079ec <HAL_TIM_Base_Init+0x2c>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	2200      	movs	r2, #0
 80079e2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80079e6:	6878      	ldr	r0, [r7, #4]
 80079e8:	f7fa f8c4 	bl	8001b74 <HAL_TIM_Base_MspInit>
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	2202      	movs	r2, #2
 80079f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	681a      	ldr	r2, [r3, #0]
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	3304      	adds	r3, #4
 80079fc:	4619      	mov	r1, r3
 80079fe:	4610      	mov	r0, r2
 8007a00:	f000 fb46 	bl	8008090 <TIM_Base_SetConfig>
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	2201      	movs	r2, #1
 8007a08:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	2201      	movs	r2, #1
 8007a10:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	2201      	movs	r2, #1
 8007a18:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007a1c:	687b      	ldr	r3, [r7, #4]
 8007a1e:	2201      	movs	r2, #1
 8007a20:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	2201      	movs	r2, #1
 8007a28:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007a2c:	687b      	ldr	r3, [r7, #4]
 8007a2e:	2201      	movs	r2, #1
 8007a30:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	2201      	movs	r2, #1
 8007a38:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	2201      	movs	r2, #1
 8007a40:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	2201      	movs	r2, #1
 8007a48:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	2201      	movs	r2, #1
 8007a50:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	2201      	movs	r2, #1
 8007a58:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	2201      	movs	r2, #1
 8007a60:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007a64:	2300      	movs	r3, #0
 8007a66:	4618      	mov	r0, r3
 8007a68:	3708      	adds	r7, #8
 8007a6a:	46bd      	mov	sp, r7
 8007a6c:	bd80      	pop	{r7, pc}
	...

08007a70 <HAL_TIM_Base_Start>:
 8007a70:	b480      	push	{r7}
 8007a72:	b085      	sub	sp, #20
 8007a74:	af00      	add	r7, sp, #0
 8007a76:	6078      	str	r0, [r7, #4]
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007a7e:	b2db      	uxtb	r3, r3
 8007a80:	2b01      	cmp	r3, #1
 8007a82:	d001      	beq.n	8007a88 <HAL_TIM_Base_Start+0x18>
 8007a84:	2301      	movs	r3, #1
 8007a86:	e04c      	b.n	8007b22 <HAL_TIM_Base_Start+0xb2>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	2202      	movs	r2, #2
 8007a8c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007a90:	687b      	ldr	r3, [r7, #4]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	4a26      	ldr	r2, [pc, #152]	@ (8007b30 <HAL_TIM_Base_Start+0xc0>)
 8007a96:	4293      	cmp	r3, r2
 8007a98:	d022      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007a9a:	687b      	ldr	r3, [r7, #4]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007aa2:	d01d      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	4a22      	ldr	r2, [pc, #136]	@ (8007b34 <HAL_TIM_Base_Start+0xc4>)
 8007aaa:	4293      	cmp	r3, r2
 8007aac:	d018      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	681b      	ldr	r3, [r3, #0]
 8007ab2:	4a21      	ldr	r2, [pc, #132]	@ (8007b38 <HAL_TIM_Base_Start+0xc8>)
 8007ab4:	4293      	cmp	r3, r2
 8007ab6:	d013      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	4a1f      	ldr	r2, [pc, #124]	@ (8007b3c <HAL_TIM_Base_Start+0xcc>)
 8007abe:	4293      	cmp	r3, r2
 8007ac0:	d00e      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	4a1e      	ldr	r2, [pc, #120]	@ (8007b40 <HAL_TIM_Base_Start+0xd0>)
 8007ac8:	4293      	cmp	r3, r2
 8007aca:	d009      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	4a1c      	ldr	r2, [pc, #112]	@ (8007b44 <HAL_TIM_Base_Start+0xd4>)
 8007ad2:	4293      	cmp	r3, r2
 8007ad4:	d004      	beq.n	8007ae0 <HAL_TIM_Base_Start+0x70>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	4a1b      	ldr	r2, [pc, #108]	@ (8007b48 <HAL_TIM_Base_Start+0xd8>)
 8007adc:	4293      	cmp	r3, r2
 8007ade:	d115      	bne.n	8007b0c <HAL_TIM_Base_Start+0x9c>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	681b      	ldr	r3, [r3, #0]
 8007ae4:	689a      	ldr	r2, [r3, #8]
 8007ae6:	4b19      	ldr	r3, [pc, #100]	@ (8007b4c <HAL_TIM_Base_Start+0xdc>)
 8007ae8:	4013      	ands	r3, r2
 8007aea:	60fb      	str	r3, [r7, #12]
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	2b06      	cmp	r3, #6
 8007af0:	d015      	beq.n	8007b1e <HAL_TIM_Base_Start+0xae>
 8007af2:	68fb      	ldr	r3, [r7, #12]
 8007af4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007af8:	d011      	beq.n	8007b1e <HAL_TIM_Base_Start+0xae>
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	681a      	ldr	r2, [r3, #0]
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	f042 0201 	orr.w	r2, r2, #1
 8007b08:	601a      	str	r2, [r3, #0]
 8007b0a:	e008      	b.n	8007b1e <HAL_TIM_Base_Start+0xae>
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	681a      	ldr	r2, [r3, #0]
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	681b      	ldr	r3, [r3, #0]
 8007b16:	f042 0201 	orr.w	r2, r2, #1
 8007b1a:	601a      	str	r2, [r3, #0]
 8007b1c:	e000      	b.n	8007b20 <HAL_TIM_Base_Start+0xb0>
 8007b1e:	bf00      	nop
 8007b20:	2300      	movs	r3, #0
 8007b22:	4618      	mov	r0, r3
 8007b24:	3714      	adds	r7, #20
 8007b26:	46bd      	mov	sp, r7
 8007b28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b2c:	4770      	bx	lr
 8007b2e:	bf00      	nop
 8007b30:	40010000 	.word	0x40010000
 8007b34:	40000400 	.word	0x40000400
 8007b38:	40000800 	.word	0x40000800
 8007b3c:	40000c00 	.word	0x40000c00
 8007b40:	40010400 	.word	0x40010400
 8007b44:	40001800 	.word	0x40001800
 8007b48:	40014000 	.word	0x40014000
 8007b4c:	00010007 	.word	0x00010007

08007b50 <HAL_TIM_Base_Start_IT>:
 8007b50:	b480      	push	{r7}
 8007b52:	b085      	sub	sp, #20
 8007b54:	af00      	add	r7, sp, #0
 8007b56:	6078      	str	r0, [r7, #4]
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007b5e:	b2db      	uxtb	r3, r3
 8007b60:	2b01      	cmp	r3, #1
 8007b62:	d001      	beq.n	8007b68 <HAL_TIM_Base_Start_IT+0x18>
 8007b64:	2301      	movs	r3, #1
 8007b66:	e054      	b.n	8007c12 <HAL_TIM_Base_Start_IT+0xc2>
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	2202      	movs	r2, #2
 8007b6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	681b      	ldr	r3, [r3, #0]
 8007b74:	68da      	ldr	r2, [r3, #12]
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	f042 0201 	orr.w	r2, r2, #1
 8007b7e:	60da      	str	r2, [r3, #12]
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	4a26      	ldr	r2, [pc, #152]	@ (8007c20 <HAL_TIM_Base_Start_IT+0xd0>)
 8007b86:	4293      	cmp	r3, r2
 8007b88:	d022      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	681b      	ldr	r3, [r3, #0]
 8007b8e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007b92:	d01d      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	4a22      	ldr	r2, [pc, #136]	@ (8007c24 <HAL_TIM_Base_Start_IT+0xd4>)
 8007b9a:	4293      	cmp	r3, r2
 8007b9c:	d018      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	4a21      	ldr	r2, [pc, #132]	@ (8007c28 <HAL_TIM_Base_Start_IT+0xd8>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	d013      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	4a1f      	ldr	r2, [pc, #124]	@ (8007c2c <HAL_TIM_Base_Start_IT+0xdc>)
 8007bae:	4293      	cmp	r3, r2
 8007bb0:	d00e      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	4a1e      	ldr	r2, [pc, #120]	@ (8007c30 <HAL_TIM_Base_Start_IT+0xe0>)
 8007bb8:	4293      	cmp	r3, r2
 8007bba:	d009      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	681b      	ldr	r3, [r3, #0]
 8007bc0:	4a1c      	ldr	r2, [pc, #112]	@ (8007c34 <HAL_TIM_Base_Start_IT+0xe4>)
 8007bc2:	4293      	cmp	r3, r2
 8007bc4:	d004      	beq.n	8007bd0 <HAL_TIM_Base_Start_IT+0x80>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	4a1b      	ldr	r2, [pc, #108]	@ (8007c38 <HAL_TIM_Base_Start_IT+0xe8>)
 8007bcc:	4293      	cmp	r3, r2
 8007bce:	d115      	bne.n	8007bfc <HAL_TIM_Base_Start_IT+0xac>
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	689a      	ldr	r2, [r3, #8]
 8007bd6:	4b19      	ldr	r3, [pc, #100]	@ (8007c3c <HAL_TIM_Base_Start_IT+0xec>)
 8007bd8:	4013      	ands	r3, r2
 8007bda:	60fb      	str	r3, [r7, #12]
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	2b06      	cmp	r3, #6
 8007be0:	d015      	beq.n	8007c0e <HAL_TIM_Base_Start_IT+0xbe>
 8007be2:	68fb      	ldr	r3, [r7, #12]
 8007be4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007be8:	d011      	beq.n	8007c0e <HAL_TIM_Base_Start_IT+0xbe>
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	681b      	ldr	r3, [r3, #0]
 8007bee:	681a      	ldr	r2, [r3, #0]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	f042 0201 	orr.w	r2, r2, #1
 8007bf8:	601a      	str	r2, [r3, #0]
 8007bfa:	e008      	b.n	8007c0e <HAL_TIM_Base_Start_IT+0xbe>
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	681b      	ldr	r3, [r3, #0]
 8007c00:	681a      	ldr	r2, [r3, #0]
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	681b      	ldr	r3, [r3, #0]
 8007c06:	f042 0201 	orr.w	r2, r2, #1
 8007c0a:	601a      	str	r2, [r3, #0]
 8007c0c:	e000      	b.n	8007c10 <HAL_TIM_Base_Start_IT+0xc0>
 8007c0e:	bf00      	nop
 8007c10:	2300      	movs	r3, #0
 8007c12:	4618      	mov	r0, r3
 8007c14:	3714      	adds	r7, #20
 8007c16:	46bd      	mov	sp, r7
 8007c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c1c:	4770      	bx	lr
 8007c1e:	bf00      	nop
 8007c20:	40010000 	.word	0x40010000
 8007c24:	40000400 	.word	0x40000400
 8007c28:	40000800 	.word	0x40000800
 8007c2c:	40000c00 	.word	0x40000c00
 8007c30:	40010400 	.word	0x40010400
 8007c34:	40001800 	.word	0x40001800
 8007c38:	40014000 	.word	0x40014000
 8007c3c:	00010007 	.word	0x00010007

08007c40 <HAL_TIM_IRQHandler>:
 8007c40:	b580      	push	{r7, lr}
 8007c42:	b084      	sub	sp, #16
 8007c44:	af00      	add	r7, sp, #0
 8007c46:	6078      	str	r0, [r7, #4]
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	68db      	ldr	r3, [r3, #12]
 8007c4e:	60fb      	str	r3, [r7, #12]
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	691b      	ldr	r3, [r3, #16]
 8007c56:	60bb      	str	r3, [r7, #8]
 8007c58:	68bb      	ldr	r3, [r7, #8]
 8007c5a:	f003 0302 	and.w	r3, r3, #2
 8007c5e:	2b00      	cmp	r3, #0
 8007c60:	d020      	beq.n	8007ca4 <HAL_TIM_IRQHandler+0x64>
 8007c62:	68fb      	ldr	r3, [r7, #12]
 8007c64:	f003 0302 	and.w	r3, r3, #2
 8007c68:	2b00      	cmp	r3, #0
 8007c6a:	d01b      	beq.n	8007ca4 <HAL_TIM_IRQHandler+0x64>
 8007c6c:	687b      	ldr	r3, [r7, #4]
 8007c6e:	681b      	ldr	r3, [r3, #0]
 8007c70:	f06f 0202 	mvn.w	r2, #2
 8007c74:	611a      	str	r2, [r3, #16]
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	2201      	movs	r2, #1
 8007c7a:	771a      	strb	r2, [r3, #28]
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	681b      	ldr	r3, [r3, #0]
 8007c80:	699b      	ldr	r3, [r3, #24]
 8007c82:	f003 0303 	and.w	r3, r3, #3
 8007c86:	2b00      	cmp	r3, #0
 8007c88:	d003      	beq.n	8007c92 <HAL_TIM_IRQHandler+0x52>
 8007c8a:	6878      	ldr	r0, [r7, #4]
 8007c8c:	f000 f9e2 	bl	8008054 <HAL_TIM_IC_CaptureCallback>
 8007c90:	e005      	b.n	8007c9e <HAL_TIM_IRQHandler+0x5e>
 8007c92:	6878      	ldr	r0, [r7, #4]
 8007c94:	f000 f9d4 	bl	8008040 <HAL_TIM_OC_DelayElapsedCallback>
 8007c98:	6878      	ldr	r0, [r7, #4]
 8007c9a:	f000 f9e5 	bl	8008068 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	2200      	movs	r2, #0
 8007ca2:	771a      	strb	r2, [r3, #28]
 8007ca4:	68bb      	ldr	r3, [r7, #8]
 8007ca6:	f003 0304 	and.w	r3, r3, #4
 8007caa:	2b00      	cmp	r3, #0
 8007cac:	d020      	beq.n	8007cf0 <HAL_TIM_IRQHandler+0xb0>
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	f003 0304 	and.w	r3, r3, #4
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d01b      	beq.n	8007cf0 <HAL_TIM_IRQHandler+0xb0>
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	f06f 0204 	mvn.w	r2, #4
 8007cc0:	611a      	str	r2, [r3, #16]
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	2202      	movs	r2, #2
 8007cc6:	771a      	strb	r2, [r3, #28]
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	699b      	ldr	r3, [r3, #24]
 8007cce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d003      	beq.n	8007cde <HAL_TIM_IRQHandler+0x9e>
 8007cd6:	6878      	ldr	r0, [r7, #4]
 8007cd8:	f000 f9bc 	bl	8008054 <HAL_TIM_IC_CaptureCallback>
 8007cdc:	e005      	b.n	8007cea <HAL_TIM_IRQHandler+0xaa>
 8007cde:	6878      	ldr	r0, [r7, #4]
 8007ce0:	f000 f9ae 	bl	8008040 <HAL_TIM_OC_DelayElapsedCallback>
 8007ce4:	6878      	ldr	r0, [r7, #4]
 8007ce6:	f000 f9bf 	bl	8008068 <HAL_TIM_PWM_PulseFinishedCallback>
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	2200      	movs	r2, #0
 8007cee:	771a      	strb	r2, [r3, #28]
 8007cf0:	68bb      	ldr	r3, [r7, #8]
 8007cf2:	f003 0308 	and.w	r3, r3, #8
 8007cf6:	2b00      	cmp	r3, #0
 8007cf8:	d020      	beq.n	8007d3c <HAL_TIM_IRQHandler+0xfc>
 8007cfa:	68fb      	ldr	r3, [r7, #12]
 8007cfc:	f003 0308 	and.w	r3, r3, #8
 8007d00:	2b00      	cmp	r3, #0
 8007d02:	d01b      	beq.n	8007d3c <HAL_TIM_IRQHandler+0xfc>
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	681b      	ldr	r3, [r3, #0]
 8007d08:	f06f 0208 	mvn.w	r2, #8
 8007d0c:	611a      	str	r2, [r3, #16]
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	2204      	movs	r2, #4
 8007d12:	771a      	strb	r2, [r3, #28]
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	69db      	ldr	r3, [r3, #28]
 8007d1a:	f003 0303 	and.w	r3, r3, #3
 8007d1e:	2b00      	cmp	r3, #0
 8007d20:	d003      	beq.n	8007d2a <HAL_TIM_IRQHandler+0xea>
 8007d22:	6878      	ldr	r0, [r7, #4]
 8007d24:	f000 f996 	bl	8008054 <HAL_TIM_IC_CaptureCallback>
 8007d28:	e005      	b.n	8007d36 <HAL_TIM_IRQHandler+0xf6>
 8007d2a:	6878      	ldr	r0, [r7, #4]
 8007d2c:	f000 f988 	bl	8008040 <HAL_TIM_OC_DelayElapsedCallback>
 8007d30:	6878      	ldr	r0, [r7, #4]
 8007d32:	f000 f999 	bl	8008068 <HAL_TIM_PWM_PulseFinishedCallback>
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	2200      	movs	r2, #0
 8007d3a:	771a      	strb	r2, [r3, #28]
 8007d3c:	68bb      	ldr	r3, [r7, #8]
 8007d3e:	f003 0310 	and.w	r3, r3, #16
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	d020      	beq.n	8007d88 <HAL_TIM_IRQHandler+0x148>
 8007d46:	68fb      	ldr	r3, [r7, #12]
 8007d48:	f003 0310 	and.w	r3, r3, #16
 8007d4c:	2b00      	cmp	r3, #0
 8007d4e:	d01b      	beq.n	8007d88 <HAL_TIM_IRQHandler+0x148>
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	f06f 0210 	mvn.w	r2, #16
 8007d58:	611a      	str	r2, [r3, #16]
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	2208      	movs	r2, #8
 8007d5e:	771a      	strb	r2, [r3, #28]
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	681b      	ldr	r3, [r3, #0]
 8007d64:	69db      	ldr	r3, [r3, #28]
 8007d66:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007d6a:	2b00      	cmp	r3, #0
 8007d6c:	d003      	beq.n	8007d76 <HAL_TIM_IRQHandler+0x136>
 8007d6e:	6878      	ldr	r0, [r7, #4]
 8007d70:	f000 f970 	bl	8008054 <HAL_TIM_IC_CaptureCallback>
 8007d74:	e005      	b.n	8007d82 <HAL_TIM_IRQHandler+0x142>
 8007d76:	6878      	ldr	r0, [r7, #4]
 8007d78:	f000 f962 	bl	8008040 <HAL_TIM_OC_DelayElapsedCallback>
 8007d7c:	6878      	ldr	r0, [r7, #4]
 8007d7e:	f000 f973 	bl	8008068 <HAL_TIM_PWM_PulseFinishedCallback>
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	2200      	movs	r2, #0
 8007d86:	771a      	strb	r2, [r3, #28]
 8007d88:	68bb      	ldr	r3, [r7, #8]
 8007d8a:	f003 0301 	and.w	r3, r3, #1
 8007d8e:	2b00      	cmp	r3, #0
 8007d90:	d00c      	beq.n	8007dac <HAL_TIM_IRQHandler+0x16c>
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	f003 0301 	and.w	r3, r3, #1
 8007d98:	2b00      	cmp	r3, #0
 8007d9a:	d007      	beq.n	8007dac <HAL_TIM_IRQHandler+0x16c>
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	681b      	ldr	r3, [r3, #0]
 8007da0:	f06f 0201 	mvn.w	r2, #1
 8007da4:	611a      	str	r2, [r3, #16]
 8007da6:	6878      	ldr	r0, [r7, #4]
 8007da8:	f7f9 fe3c 	bl	8001a24 <HAL_TIM_PeriodElapsedCallback>
 8007dac:	68bb      	ldr	r3, [r7, #8]
 8007dae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	d104      	bne.n	8007dc0 <HAL_TIM_IRQHandler+0x180>
 8007db6:	68bb      	ldr	r3, [r7, #8]
 8007db8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d00c      	beq.n	8007dda <HAL_TIM_IRQHandler+0x19a>
 8007dc0:	68fb      	ldr	r3, [r7, #12]
 8007dc2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	d007      	beq.n	8007dda <HAL_TIM_IRQHandler+0x19a>
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007dd2:	611a      	str	r2, [r3, #16]
 8007dd4:	6878      	ldr	r0, [r7, #4]
 8007dd6:	f000 fb31 	bl	800843c <HAL_TIMEx_BreakCallback>
 8007dda:	68bb      	ldr	r3, [r7, #8]
 8007ddc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007de0:	2b00      	cmp	r3, #0
 8007de2:	d00c      	beq.n	8007dfe <HAL_TIM_IRQHandler+0x1be>
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007dea:	2b00      	cmp	r3, #0
 8007dec:	d007      	beq.n	8007dfe <HAL_TIM_IRQHandler+0x1be>
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	681b      	ldr	r3, [r3, #0]
 8007df2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007df6:	611a      	str	r2, [r3, #16]
 8007df8:	6878      	ldr	r0, [r7, #4]
 8007dfa:	f000 fb29 	bl	8008450 <HAL_TIMEx_Break2Callback>
 8007dfe:	68bb      	ldr	r3, [r7, #8]
 8007e00:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007e04:	2b00      	cmp	r3, #0
 8007e06:	d00c      	beq.n	8007e22 <HAL_TIM_IRQHandler+0x1e2>
 8007e08:	68fb      	ldr	r3, [r7, #12]
 8007e0a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007e0e:	2b00      	cmp	r3, #0
 8007e10:	d007      	beq.n	8007e22 <HAL_TIM_IRQHandler+0x1e2>
 8007e12:	687b      	ldr	r3, [r7, #4]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007e1a:	611a      	str	r2, [r3, #16]
 8007e1c:	6878      	ldr	r0, [r7, #4]
 8007e1e:	f000 f92d 	bl	800807c <HAL_TIM_TriggerCallback>
 8007e22:	68bb      	ldr	r3, [r7, #8]
 8007e24:	f003 0320 	and.w	r3, r3, #32
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	d00c      	beq.n	8007e46 <HAL_TIM_IRQHandler+0x206>
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	f003 0320 	and.w	r3, r3, #32
 8007e32:	2b00      	cmp	r3, #0
 8007e34:	d007      	beq.n	8007e46 <HAL_TIM_IRQHandler+0x206>
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	f06f 0220 	mvn.w	r2, #32
 8007e3e:	611a      	str	r2, [r3, #16]
 8007e40:	6878      	ldr	r0, [r7, #4]
 8007e42:	f000 faf1 	bl	8008428 <HAL_TIMEx_CommutCallback>
 8007e46:	bf00      	nop
 8007e48:	3710      	adds	r7, #16
 8007e4a:	46bd      	mov	sp, r7
 8007e4c:	bd80      	pop	{r7, pc}
	...

08007e50 <HAL_TIM_ConfigClockSource>:
 8007e50:	b580      	push	{r7, lr}
 8007e52:	b084      	sub	sp, #16
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
 8007e58:	6039      	str	r1, [r7, #0]
 8007e5a:	2300      	movs	r3, #0
 8007e5c:	73fb      	strb	r3, [r7, #15]
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007e64:	2b01      	cmp	r3, #1
 8007e66:	d101      	bne.n	8007e6c <HAL_TIM_ConfigClockSource+0x1c>
 8007e68:	2302      	movs	r3, #2
 8007e6a:	e0dc      	b.n	8008026 <HAL_TIM_ConfigClockSource+0x1d6>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	2201      	movs	r2, #1
 8007e70:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	2202      	movs	r2, #2
 8007e78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	689b      	ldr	r3, [r3, #8]
 8007e82:	60bb      	str	r3, [r7, #8]
 8007e84:	68ba      	ldr	r2, [r7, #8]
 8007e86:	4b6a      	ldr	r3, [pc, #424]	@ (8008030 <HAL_TIM_ConfigClockSource+0x1e0>)
 8007e88:	4013      	ands	r3, r2
 8007e8a:	60bb      	str	r3, [r7, #8]
 8007e8c:	68bb      	ldr	r3, [r7, #8]
 8007e8e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007e92:	60bb      	str	r3, [r7, #8]
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	68ba      	ldr	r2, [r7, #8]
 8007e9a:	609a      	str	r2, [r3, #8]
 8007e9c:	683b      	ldr	r3, [r7, #0]
 8007e9e:	681b      	ldr	r3, [r3, #0]
 8007ea0:	4a64      	ldr	r2, [pc, #400]	@ (8008034 <HAL_TIM_ConfigClockSource+0x1e4>)
 8007ea2:	4293      	cmp	r3, r2
 8007ea4:	f000 80a9 	beq.w	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007ea8:	4a62      	ldr	r2, [pc, #392]	@ (8008034 <HAL_TIM_ConfigClockSource+0x1e4>)
 8007eaa:	4293      	cmp	r3, r2
 8007eac:	f200 80ae 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007eb0:	4a61      	ldr	r2, [pc, #388]	@ (8008038 <HAL_TIM_ConfigClockSource+0x1e8>)
 8007eb2:	4293      	cmp	r3, r2
 8007eb4:	f000 80a1 	beq.w	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007eb8:	4a5f      	ldr	r2, [pc, #380]	@ (8008038 <HAL_TIM_ConfigClockSource+0x1e8>)
 8007eba:	4293      	cmp	r3, r2
 8007ebc:	f200 80a6 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007ec0:	4a5e      	ldr	r2, [pc, #376]	@ (800803c <HAL_TIM_ConfigClockSource+0x1ec>)
 8007ec2:	4293      	cmp	r3, r2
 8007ec4:	f000 8099 	beq.w	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007ec8:	4a5c      	ldr	r2, [pc, #368]	@ (800803c <HAL_TIM_ConfigClockSource+0x1ec>)
 8007eca:	4293      	cmp	r3, r2
 8007ecc:	f200 809e 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007ed0:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8007ed4:	f000 8091 	beq.w	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007ed8:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8007edc:	f200 8096 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007ee0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007ee4:	f000 8089 	beq.w	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007ee8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007eec:	f200 808e 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007ef0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007ef4:	d03e      	beq.n	8007f74 <HAL_TIM_ConfigClockSource+0x124>
 8007ef6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007efa:	f200 8087 	bhi.w	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007efe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007f02:	f000 8086 	beq.w	8008012 <HAL_TIM_ConfigClockSource+0x1c2>
 8007f06:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007f0a:	d87f      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f0c:	2b70      	cmp	r3, #112	@ 0x70
 8007f0e:	d01a      	beq.n	8007f46 <HAL_TIM_ConfigClockSource+0xf6>
 8007f10:	2b70      	cmp	r3, #112	@ 0x70
 8007f12:	d87b      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f14:	2b60      	cmp	r3, #96	@ 0x60
 8007f16:	d050      	beq.n	8007fba <HAL_TIM_ConfigClockSource+0x16a>
 8007f18:	2b60      	cmp	r3, #96	@ 0x60
 8007f1a:	d877      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f1c:	2b50      	cmp	r3, #80	@ 0x50
 8007f1e:	d03c      	beq.n	8007f9a <HAL_TIM_ConfigClockSource+0x14a>
 8007f20:	2b50      	cmp	r3, #80	@ 0x50
 8007f22:	d873      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f24:	2b40      	cmp	r3, #64	@ 0x40
 8007f26:	d058      	beq.n	8007fda <HAL_TIM_ConfigClockSource+0x18a>
 8007f28:	2b40      	cmp	r3, #64	@ 0x40
 8007f2a:	d86f      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f2c:	2b30      	cmp	r3, #48	@ 0x30
 8007f2e:	d064      	beq.n	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007f30:	2b30      	cmp	r3, #48	@ 0x30
 8007f32:	d86b      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f34:	2b20      	cmp	r3, #32
 8007f36:	d060      	beq.n	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007f38:	2b20      	cmp	r3, #32
 8007f3a:	d867      	bhi.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f3c:	2b00      	cmp	r3, #0
 8007f3e:	d05c      	beq.n	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007f40:	2b10      	cmp	r3, #16
 8007f42:	d05a      	beq.n	8007ffa <HAL_TIM_ConfigClockSource+0x1aa>
 8007f44:	e062      	b.n	800800c <HAL_TIM_ConfigClockSource+0x1bc>
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	6818      	ldr	r0, [r3, #0]
 8007f4a:	683b      	ldr	r3, [r7, #0]
 8007f4c:	6899      	ldr	r1, [r3, #8]
 8007f4e:	683b      	ldr	r3, [r7, #0]
 8007f50:	685a      	ldr	r2, [r3, #4]
 8007f52:	683b      	ldr	r3, [r7, #0]
 8007f54:	68db      	ldr	r3, [r3, #12]
 8007f56:	f000 f9b9 	bl	80082cc <TIM_ETR_SetConfig>
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	689b      	ldr	r3, [r3, #8]
 8007f60:	60bb      	str	r3, [r7, #8]
 8007f62:	68bb      	ldr	r3, [r7, #8]
 8007f64:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8007f68:	60bb      	str	r3, [r7, #8]
 8007f6a:	687b      	ldr	r3, [r7, #4]
 8007f6c:	681b      	ldr	r3, [r3, #0]
 8007f6e:	68ba      	ldr	r2, [r7, #8]
 8007f70:	609a      	str	r2, [r3, #8]
 8007f72:	e04f      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	6818      	ldr	r0, [r3, #0]
 8007f78:	683b      	ldr	r3, [r7, #0]
 8007f7a:	6899      	ldr	r1, [r3, #8]
 8007f7c:	683b      	ldr	r3, [r7, #0]
 8007f7e:	685a      	ldr	r2, [r3, #4]
 8007f80:	683b      	ldr	r3, [r7, #0]
 8007f82:	68db      	ldr	r3, [r3, #12]
 8007f84:	f000 f9a2 	bl	80082cc <TIM_ETR_SetConfig>
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	681b      	ldr	r3, [r3, #0]
 8007f8c:	689a      	ldr	r2, [r3, #8]
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007f96:	609a      	str	r2, [r3, #8]
 8007f98:	e03c      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	6818      	ldr	r0, [r3, #0]
 8007f9e:	683b      	ldr	r3, [r7, #0]
 8007fa0:	6859      	ldr	r1, [r3, #4]
 8007fa2:	683b      	ldr	r3, [r7, #0]
 8007fa4:	68db      	ldr	r3, [r3, #12]
 8007fa6:	461a      	mov	r2, r3
 8007fa8:	f000 f912 	bl	80081d0 <TIM_TI1_ConfigInputStage>
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	2150      	movs	r1, #80	@ 0x50
 8007fb2:	4618      	mov	r0, r3
 8007fb4:	f000 f96c 	bl	8008290 <TIM_ITRx_SetConfig>
 8007fb8:	e02c      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	6818      	ldr	r0, [r3, #0]
 8007fbe:	683b      	ldr	r3, [r7, #0]
 8007fc0:	6859      	ldr	r1, [r3, #4]
 8007fc2:	683b      	ldr	r3, [r7, #0]
 8007fc4:	68db      	ldr	r3, [r3, #12]
 8007fc6:	461a      	mov	r2, r3
 8007fc8:	f000 f931 	bl	800822e <TIM_TI2_ConfigInputStage>
 8007fcc:	687b      	ldr	r3, [r7, #4]
 8007fce:	681b      	ldr	r3, [r3, #0]
 8007fd0:	2160      	movs	r1, #96	@ 0x60
 8007fd2:	4618      	mov	r0, r3
 8007fd4:	f000 f95c 	bl	8008290 <TIM_ITRx_SetConfig>
 8007fd8:	e01c      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	6818      	ldr	r0, [r3, #0]
 8007fde:	683b      	ldr	r3, [r7, #0]
 8007fe0:	6859      	ldr	r1, [r3, #4]
 8007fe2:	683b      	ldr	r3, [r7, #0]
 8007fe4:	68db      	ldr	r3, [r3, #12]
 8007fe6:	461a      	mov	r2, r3
 8007fe8:	f000 f8f2 	bl	80081d0 <TIM_TI1_ConfigInputStage>
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	2140      	movs	r1, #64	@ 0x40
 8007ff2:	4618      	mov	r0, r3
 8007ff4:	f000 f94c 	bl	8008290 <TIM_ITRx_SetConfig>
 8007ff8:	e00c      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	681a      	ldr	r2, [r3, #0]
 8007ffe:	683b      	ldr	r3, [r7, #0]
 8008000:	681b      	ldr	r3, [r3, #0]
 8008002:	4619      	mov	r1, r3
 8008004:	4610      	mov	r0, r2
 8008006:	f000 f943 	bl	8008290 <TIM_ITRx_SetConfig>
 800800a:	e003      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 800800c:	2301      	movs	r3, #1
 800800e:	73fb      	strb	r3, [r7, #15]
 8008010:	e000      	b.n	8008014 <HAL_TIM_ConfigClockSource+0x1c4>
 8008012:	bf00      	nop
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	2201      	movs	r2, #1
 8008018:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	2200      	movs	r2, #0
 8008020:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008024:	7bfb      	ldrb	r3, [r7, #15]
 8008026:	4618      	mov	r0, r3
 8008028:	3710      	adds	r7, #16
 800802a:	46bd      	mov	sp, r7
 800802c:	bd80      	pop	{r7, pc}
 800802e:	bf00      	nop
 8008030:	ffceff88 	.word	0xffceff88
 8008034:	00100040 	.word	0x00100040
 8008038:	00100030 	.word	0x00100030
 800803c:	00100020 	.word	0x00100020

08008040 <HAL_TIM_OC_DelayElapsedCallback>:
 8008040:	b480      	push	{r7}
 8008042:	b083      	sub	sp, #12
 8008044:	af00      	add	r7, sp, #0
 8008046:	6078      	str	r0, [r7, #4]
 8008048:	bf00      	nop
 800804a:	370c      	adds	r7, #12
 800804c:	46bd      	mov	sp, r7
 800804e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008052:	4770      	bx	lr

08008054 <HAL_TIM_IC_CaptureCallback>:
 8008054:	b480      	push	{r7}
 8008056:	b083      	sub	sp, #12
 8008058:	af00      	add	r7, sp, #0
 800805a:	6078      	str	r0, [r7, #4]
 800805c:	bf00      	nop
 800805e:	370c      	adds	r7, #12
 8008060:	46bd      	mov	sp, r7
 8008062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008066:	4770      	bx	lr

08008068 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008068:	b480      	push	{r7}
 800806a:	b083      	sub	sp, #12
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
 8008070:	bf00      	nop
 8008072:	370c      	adds	r7, #12
 8008074:	46bd      	mov	sp, r7
 8008076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800807a:	4770      	bx	lr

0800807c <HAL_TIM_TriggerCallback>:
 800807c:	b480      	push	{r7}
 800807e:	b083      	sub	sp, #12
 8008080:	af00      	add	r7, sp, #0
 8008082:	6078      	str	r0, [r7, #4]
 8008084:	bf00      	nop
 8008086:	370c      	adds	r7, #12
 8008088:	46bd      	mov	sp, r7
 800808a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808e:	4770      	bx	lr

08008090 <TIM_Base_SetConfig>:
 8008090:	b480      	push	{r7}
 8008092:	b085      	sub	sp, #20
 8008094:	af00      	add	r7, sp, #0
 8008096:	6078      	str	r0, [r7, #4]
 8008098:	6039      	str	r1, [r7, #0]
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	681b      	ldr	r3, [r3, #0]
 800809e:	60fb      	str	r3, [r7, #12]
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	4a43      	ldr	r2, [pc, #268]	@ (80081b0 <TIM_Base_SetConfig+0x120>)
 80080a4:	4293      	cmp	r3, r2
 80080a6:	d013      	beq.n	80080d0 <TIM_Base_SetConfig+0x40>
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80080ae:	d00f      	beq.n	80080d0 <TIM_Base_SetConfig+0x40>
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	4a40      	ldr	r2, [pc, #256]	@ (80081b4 <TIM_Base_SetConfig+0x124>)
 80080b4:	4293      	cmp	r3, r2
 80080b6:	d00b      	beq.n	80080d0 <TIM_Base_SetConfig+0x40>
 80080b8:	687b      	ldr	r3, [r7, #4]
 80080ba:	4a3f      	ldr	r2, [pc, #252]	@ (80081b8 <TIM_Base_SetConfig+0x128>)
 80080bc:	4293      	cmp	r3, r2
 80080be:	d007      	beq.n	80080d0 <TIM_Base_SetConfig+0x40>
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	4a3e      	ldr	r2, [pc, #248]	@ (80081bc <TIM_Base_SetConfig+0x12c>)
 80080c4:	4293      	cmp	r3, r2
 80080c6:	d003      	beq.n	80080d0 <TIM_Base_SetConfig+0x40>
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	4a3d      	ldr	r2, [pc, #244]	@ (80081c0 <TIM_Base_SetConfig+0x130>)
 80080cc:	4293      	cmp	r3, r2
 80080ce:	d108      	bne.n	80080e2 <TIM_Base_SetConfig+0x52>
 80080d0:	68fb      	ldr	r3, [r7, #12]
 80080d2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80080d6:	60fb      	str	r3, [r7, #12]
 80080d8:	683b      	ldr	r3, [r7, #0]
 80080da:	685b      	ldr	r3, [r3, #4]
 80080dc:	68fa      	ldr	r2, [r7, #12]
 80080de:	4313      	orrs	r3, r2
 80080e0:	60fb      	str	r3, [r7, #12]
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	4a32      	ldr	r2, [pc, #200]	@ (80081b0 <TIM_Base_SetConfig+0x120>)
 80080e6:	4293      	cmp	r3, r2
 80080e8:	d01f      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80080f0:	d01b      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	4a2f      	ldr	r2, [pc, #188]	@ (80081b4 <TIM_Base_SetConfig+0x124>)
 80080f6:	4293      	cmp	r3, r2
 80080f8:	d017      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	4a2e      	ldr	r2, [pc, #184]	@ (80081b8 <TIM_Base_SetConfig+0x128>)
 80080fe:	4293      	cmp	r3, r2
 8008100:	d013      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	4a2d      	ldr	r2, [pc, #180]	@ (80081bc <TIM_Base_SetConfig+0x12c>)
 8008106:	4293      	cmp	r3, r2
 8008108:	d00f      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 800810a:	687b      	ldr	r3, [r7, #4]
 800810c:	4a2c      	ldr	r2, [pc, #176]	@ (80081c0 <TIM_Base_SetConfig+0x130>)
 800810e:	4293      	cmp	r3, r2
 8008110:	d00b      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	4a2b      	ldr	r2, [pc, #172]	@ (80081c4 <TIM_Base_SetConfig+0x134>)
 8008116:	4293      	cmp	r3, r2
 8008118:	d007      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	4a2a      	ldr	r2, [pc, #168]	@ (80081c8 <TIM_Base_SetConfig+0x138>)
 800811e:	4293      	cmp	r3, r2
 8008120:	d003      	beq.n	800812a <TIM_Base_SetConfig+0x9a>
 8008122:	687b      	ldr	r3, [r7, #4]
 8008124:	4a29      	ldr	r2, [pc, #164]	@ (80081cc <TIM_Base_SetConfig+0x13c>)
 8008126:	4293      	cmp	r3, r2
 8008128:	d108      	bne.n	800813c <TIM_Base_SetConfig+0xac>
 800812a:	68fb      	ldr	r3, [r7, #12]
 800812c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008130:	60fb      	str	r3, [r7, #12]
 8008132:	683b      	ldr	r3, [r7, #0]
 8008134:	68db      	ldr	r3, [r3, #12]
 8008136:	68fa      	ldr	r2, [r7, #12]
 8008138:	4313      	orrs	r3, r2
 800813a:	60fb      	str	r3, [r7, #12]
 800813c:	68fb      	ldr	r3, [r7, #12]
 800813e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8008142:	683b      	ldr	r3, [r7, #0]
 8008144:	695b      	ldr	r3, [r3, #20]
 8008146:	4313      	orrs	r3, r2
 8008148:	60fb      	str	r3, [r7, #12]
 800814a:	683b      	ldr	r3, [r7, #0]
 800814c:	689a      	ldr	r2, [r3, #8]
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008152:	683b      	ldr	r3, [r7, #0]
 8008154:	681a      	ldr	r2, [r3, #0]
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	629a      	str	r2, [r3, #40]	@ 0x28
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	4a14      	ldr	r2, [pc, #80]	@ (80081b0 <TIM_Base_SetConfig+0x120>)
 800815e:	4293      	cmp	r3, r2
 8008160:	d00f      	beq.n	8008182 <TIM_Base_SetConfig+0xf2>
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	4a16      	ldr	r2, [pc, #88]	@ (80081c0 <TIM_Base_SetConfig+0x130>)
 8008166:	4293      	cmp	r3, r2
 8008168:	d00b      	beq.n	8008182 <TIM_Base_SetConfig+0xf2>
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	4a15      	ldr	r2, [pc, #84]	@ (80081c4 <TIM_Base_SetConfig+0x134>)
 800816e:	4293      	cmp	r3, r2
 8008170:	d007      	beq.n	8008182 <TIM_Base_SetConfig+0xf2>
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	4a14      	ldr	r2, [pc, #80]	@ (80081c8 <TIM_Base_SetConfig+0x138>)
 8008176:	4293      	cmp	r3, r2
 8008178:	d003      	beq.n	8008182 <TIM_Base_SetConfig+0xf2>
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	4a13      	ldr	r2, [pc, #76]	@ (80081cc <TIM_Base_SetConfig+0x13c>)
 800817e:	4293      	cmp	r3, r2
 8008180:	d103      	bne.n	800818a <TIM_Base_SetConfig+0xfa>
 8008182:	683b      	ldr	r3, [r7, #0]
 8008184:	691a      	ldr	r2, [r3, #16]
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	631a      	str	r2, [r3, #48]	@ 0x30
 800818a:	687b      	ldr	r3, [r7, #4]
 800818c:	681b      	ldr	r3, [r3, #0]
 800818e:	f043 0204 	orr.w	r2, r3, #4
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	601a      	str	r2, [r3, #0]
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	2201      	movs	r2, #1
 800819a:	615a      	str	r2, [r3, #20]
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	68fa      	ldr	r2, [r7, #12]
 80081a0:	601a      	str	r2, [r3, #0]
 80081a2:	bf00      	nop
 80081a4:	3714      	adds	r7, #20
 80081a6:	46bd      	mov	sp, r7
 80081a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ac:	4770      	bx	lr
 80081ae:	bf00      	nop
 80081b0:	40010000 	.word	0x40010000
 80081b4:	40000400 	.word	0x40000400
 80081b8:	40000800 	.word	0x40000800
 80081bc:	40000c00 	.word	0x40000c00
 80081c0:	40010400 	.word	0x40010400
 80081c4:	40014000 	.word	0x40014000
 80081c8:	40014400 	.word	0x40014400
 80081cc:	40014800 	.word	0x40014800

080081d0 <TIM_TI1_ConfigInputStage>:
 80081d0:	b480      	push	{r7}
 80081d2:	b087      	sub	sp, #28
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	60f8      	str	r0, [r7, #12]
 80081d8:	60b9      	str	r1, [r7, #8]
 80081da:	607a      	str	r2, [r7, #4]
 80081dc:	68fb      	ldr	r3, [r7, #12]
 80081de:	6a1b      	ldr	r3, [r3, #32]
 80081e0:	617b      	str	r3, [r7, #20]
 80081e2:	68fb      	ldr	r3, [r7, #12]
 80081e4:	6a1b      	ldr	r3, [r3, #32]
 80081e6:	f023 0201 	bic.w	r2, r3, #1
 80081ea:	68fb      	ldr	r3, [r7, #12]
 80081ec:	621a      	str	r2, [r3, #32]
 80081ee:	68fb      	ldr	r3, [r7, #12]
 80081f0:	699b      	ldr	r3, [r3, #24]
 80081f2:	613b      	str	r3, [r7, #16]
 80081f4:	693b      	ldr	r3, [r7, #16]
 80081f6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80081fa:	613b      	str	r3, [r7, #16]
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	011b      	lsls	r3, r3, #4
 8008200:	693a      	ldr	r2, [r7, #16]
 8008202:	4313      	orrs	r3, r2
 8008204:	613b      	str	r3, [r7, #16]
 8008206:	697b      	ldr	r3, [r7, #20]
 8008208:	f023 030a 	bic.w	r3, r3, #10
 800820c:	617b      	str	r3, [r7, #20]
 800820e:	697a      	ldr	r2, [r7, #20]
 8008210:	68bb      	ldr	r3, [r7, #8]
 8008212:	4313      	orrs	r3, r2
 8008214:	617b      	str	r3, [r7, #20]
 8008216:	68fb      	ldr	r3, [r7, #12]
 8008218:	693a      	ldr	r2, [r7, #16]
 800821a:	619a      	str	r2, [r3, #24]
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	697a      	ldr	r2, [r7, #20]
 8008220:	621a      	str	r2, [r3, #32]
 8008222:	bf00      	nop
 8008224:	371c      	adds	r7, #28
 8008226:	46bd      	mov	sp, r7
 8008228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800822c:	4770      	bx	lr

0800822e <TIM_TI2_ConfigInputStage>:
 800822e:	b480      	push	{r7}
 8008230:	b087      	sub	sp, #28
 8008232:	af00      	add	r7, sp, #0
 8008234:	60f8      	str	r0, [r7, #12]
 8008236:	60b9      	str	r1, [r7, #8]
 8008238:	607a      	str	r2, [r7, #4]
 800823a:	68fb      	ldr	r3, [r7, #12]
 800823c:	6a1b      	ldr	r3, [r3, #32]
 800823e:	617b      	str	r3, [r7, #20]
 8008240:	68fb      	ldr	r3, [r7, #12]
 8008242:	6a1b      	ldr	r3, [r3, #32]
 8008244:	f023 0210 	bic.w	r2, r3, #16
 8008248:	68fb      	ldr	r3, [r7, #12]
 800824a:	621a      	str	r2, [r3, #32]
 800824c:	68fb      	ldr	r3, [r7, #12]
 800824e:	699b      	ldr	r3, [r3, #24]
 8008250:	613b      	str	r3, [r7, #16]
 8008252:	693b      	ldr	r3, [r7, #16]
 8008254:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8008258:	613b      	str	r3, [r7, #16]
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	031b      	lsls	r3, r3, #12
 800825e:	693a      	ldr	r2, [r7, #16]
 8008260:	4313      	orrs	r3, r2
 8008262:	613b      	str	r3, [r7, #16]
 8008264:	697b      	ldr	r3, [r7, #20]
 8008266:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800826a:	617b      	str	r3, [r7, #20]
 800826c:	68bb      	ldr	r3, [r7, #8]
 800826e:	011b      	lsls	r3, r3, #4
 8008270:	697a      	ldr	r2, [r7, #20]
 8008272:	4313      	orrs	r3, r2
 8008274:	617b      	str	r3, [r7, #20]
 8008276:	68fb      	ldr	r3, [r7, #12]
 8008278:	693a      	ldr	r2, [r7, #16]
 800827a:	619a      	str	r2, [r3, #24]
 800827c:	68fb      	ldr	r3, [r7, #12]
 800827e:	697a      	ldr	r2, [r7, #20]
 8008280:	621a      	str	r2, [r3, #32]
 8008282:	bf00      	nop
 8008284:	371c      	adds	r7, #28
 8008286:	46bd      	mov	sp, r7
 8008288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800828c:	4770      	bx	lr
	...

08008290 <TIM_ITRx_SetConfig>:
 8008290:	b480      	push	{r7}
 8008292:	b085      	sub	sp, #20
 8008294:	af00      	add	r7, sp, #0
 8008296:	6078      	str	r0, [r7, #4]
 8008298:	6039      	str	r1, [r7, #0]
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	689b      	ldr	r3, [r3, #8]
 800829e:	60fb      	str	r3, [r7, #12]
 80082a0:	68fa      	ldr	r2, [r7, #12]
 80082a2:	4b09      	ldr	r3, [pc, #36]	@ (80082c8 <TIM_ITRx_SetConfig+0x38>)
 80082a4:	4013      	ands	r3, r2
 80082a6:	60fb      	str	r3, [r7, #12]
 80082a8:	683a      	ldr	r2, [r7, #0]
 80082aa:	68fb      	ldr	r3, [r7, #12]
 80082ac:	4313      	orrs	r3, r2
 80082ae:	f043 0307 	orr.w	r3, r3, #7
 80082b2:	60fb      	str	r3, [r7, #12]
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	68fa      	ldr	r2, [r7, #12]
 80082b8:	609a      	str	r2, [r3, #8]
 80082ba:	bf00      	nop
 80082bc:	3714      	adds	r7, #20
 80082be:	46bd      	mov	sp, r7
 80082c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082c4:	4770      	bx	lr
 80082c6:	bf00      	nop
 80082c8:	ffcfff8f 	.word	0xffcfff8f

080082cc <TIM_ETR_SetConfig>:
 80082cc:	b480      	push	{r7}
 80082ce:	b087      	sub	sp, #28
 80082d0:	af00      	add	r7, sp, #0
 80082d2:	60f8      	str	r0, [r7, #12]
 80082d4:	60b9      	str	r1, [r7, #8]
 80082d6:	607a      	str	r2, [r7, #4]
 80082d8:	603b      	str	r3, [r7, #0]
 80082da:	68fb      	ldr	r3, [r7, #12]
 80082dc:	689b      	ldr	r3, [r3, #8]
 80082de:	617b      	str	r3, [r7, #20]
 80082e0:	697b      	ldr	r3, [r7, #20]
 80082e2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80082e6:	617b      	str	r3, [r7, #20]
 80082e8:	683b      	ldr	r3, [r7, #0]
 80082ea:	021a      	lsls	r2, r3, #8
 80082ec:	687b      	ldr	r3, [r7, #4]
 80082ee:	431a      	orrs	r2, r3
 80082f0:	68bb      	ldr	r3, [r7, #8]
 80082f2:	4313      	orrs	r3, r2
 80082f4:	697a      	ldr	r2, [r7, #20]
 80082f6:	4313      	orrs	r3, r2
 80082f8:	617b      	str	r3, [r7, #20]
 80082fa:	68fb      	ldr	r3, [r7, #12]
 80082fc:	697a      	ldr	r2, [r7, #20]
 80082fe:	609a      	str	r2, [r3, #8]
 8008300:	bf00      	nop
 8008302:	371c      	adds	r7, #28
 8008304:	46bd      	mov	sp, r7
 8008306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800830a:	4770      	bx	lr

0800830c <HAL_TIMEx_MasterConfigSynchronization>:
 800830c:	b480      	push	{r7}
 800830e:	b085      	sub	sp, #20
 8008310:	af00      	add	r7, sp, #0
 8008312:	6078      	str	r0, [r7, #4]
 8008314:	6039      	str	r1, [r7, #0]
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800831c:	2b01      	cmp	r3, #1
 800831e:	d101      	bne.n	8008324 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008320:	2302      	movs	r3, #2
 8008322:	e06d      	b.n	8008400 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	2201      	movs	r2, #1
 8008328:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	2202      	movs	r2, #2
 8008330:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	681b      	ldr	r3, [r3, #0]
 8008338:	685b      	ldr	r3, [r3, #4]
 800833a:	60fb      	str	r3, [r7, #12]
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	681b      	ldr	r3, [r3, #0]
 8008340:	689b      	ldr	r3, [r3, #8]
 8008342:	60bb      	str	r3, [r7, #8]
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	4a30      	ldr	r2, [pc, #192]	@ (800840c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800834a:	4293      	cmp	r3, r2
 800834c:	d004      	beq.n	8008358 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800834e:	687b      	ldr	r3, [r7, #4]
 8008350:	681b      	ldr	r3, [r3, #0]
 8008352:	4a2f      	ldr	r2, [pc, #188]	@ (8008410 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008354:	4293      	cmp	r3, r2
 8008356:	d108      	bne.n	800836a <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008358:	68fb      	ldr	r3, [r7, #12]
 800835a:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800835e:	60fb      	str	r3, [r7, #12]
 8008360:	683b      	ldr	r3, [r7, #0]
 8008362:	685b      	ldr	r3, [r3, #4]
 8008364:	68fa      	ldr	r2, [r7, #12]
 8008366:	4313      	orrs	r3, r2
 8008368:	60fb      	str	r3, [r7, #12]
 800836a:	68fb      	ldr	r3, [r7, #12]
 800836c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008370:	60fb      	str	r3, [r7, #12]
 8008372:	683b      	ldr	r3, [r7, #0]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	68fa      	ldr	r2, [r7, #12]
 8008378:	4313      	orrs	r3, r2
 800837a:	60fb      	str	r3, [r7, #12]
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	68fa      	ldr	r2, [r7, #12]
 8008382:	605a      	str	r2, [r3, #4]
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	681b      	ldr	r3, [r3, #0]
 8008388:	4a20      	ldr	r2, [pc, #128]	@ (800840c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800838a:	4293      	cmp	r3, r2
 800838c:	d022      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	681b      	ldr	r3, [r3, #0]
 8008392:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008396:	d01d      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	4a1d      	ldr	r2, [pc, #116]	@ (8008414 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800839e:	4293      	cmp	r3, r2
 80083a0:	d018      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	4a1c      	ldr	r2, [pc, #112]	@ (8008418 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 80083a8:	4293      	cmp	r3, r2
 80083aa:	d013      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	681b      	ldr	r3, [r3, #0]
 80083b0:	4a1a      	ldr	r2, [pc, #104]	@ (800841c <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 80083b2:	4293      	cmp	r3, r2
 80083b4:	d00e      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	681b      	ldr	r3, [r3, #0]
 80083ba:	4a15      	ldr	r2, [pc, #84]	@ (8008410 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80083bc:	4293      	cmp	r3, r2
 80083be:	d009      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	4a16      	ldr	r2, [pc, #88]	@ (8008420 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80083c6:	4293      	cmp	r3, r2
 80083c8:	d004      	beq.n	80083d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	4a15      	ldr	r2, [pc, #84]	@ (8008424 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80083d0:	4293      	cmp	r3, r2
 80083d2:	d10c      	bne.n	80083ee <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 80083d4:	68bb      	ldr	r3, [r7, #8]
 80083d6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80083da:	60bb      	str	r3, [r7, #8]
 80083dc:	683b      	ldr	r3, [r7, #0]
 80083de:	689b      	ldr	r3, [r3, #8]
 80083e0:	68ba      	ldr	r2, [r7, #8]
 80083e2:	4313      	orrs	r3, r2
 80083e4:	60bb      	str	r3, [r7, #8]
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	681b      	ldr	r3, [r3, #0]
 80083ea:	68ba      	ldr	r2, [r7, #8]
 80083ec:	609a      	str	r2, [r3, #8]
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	2201      	movs	r2, #1
 80083f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	2200      	movs	r2, #0
 80083fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80083fe:	2300      	movs	r3, #0
 8008400:	4618      	mov	r0, r3
 8008402:	3714      	adds	r7, #20
 8008404:	46bd      	mov	sp, r7
 8008406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800840a:	4770      	bx	lr
 800840c:	40010000 	.word	0x40010000
 8008410:	40010400 	.word	0x40010400
 8008414:	40000400 	.word	0x40000400
 8008418:	40000800 	.word	0x40000800
 800841c:	40000c00 	.word	0x40000c00
 8008420:	40001800 	.word	0x40001800
 8008424:	40014000 	.word	0x40014000

08008428 <HAL_TIMEx_CommutCallback>:
 8008428:	b480      	push	{r7}
 800842a:	b083      	sub	sp, #12
 800842c:	af00      	add	r7, sp, #0
 800842e:	6078      	str	r0, [r7, #4]
 8008430:	bf00      	nop
 8008432:	370c      	adds	r7, #12
 8008434:	46bd      	mov	sp, r7
 8008436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800843a:	4770      	bx	lr

0800843c <HAL_TIMEx_BreakCallback>:
 800843c:	b480      	push	{r7}
 800843e:	b083      	sub	sp, #12
 8008440:	af00      	add	r7, sp, #0
 8008442:	6078      	str	r0, [r7, #4]
 8008444:	bf00      	nop
 8008446:	370c      	adds	r7, #12
 8008448:	46bd      	mov	sp, r7
 800844a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800844e:	4770      	bx	lr

08008450 <HAL_TIMEx_Break2Callback>:
 8008450:	b480      	push	{r7}
 8008452:	b083      	sub	sp, #12
 8008454:	af00      	add	r7, sp, #0
 8008456:	6078      	str	r0, [r7, #4]
 8008458:	bf00      	nop
 800845a:	370c      	adds	r7, #12
 800845c:	46bd      	mov	sp, r7
 800845e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008462:	4770      	bx	lr

08008464 <__NVIC_SetPriority>:
 8008464:	b480      	push	{r7}
 8008466:	b083      	sub	sp, #12
 8008468:	af00      	add	r7, sp, #0
 800846a:	4603      	mov	r3, r0
 800846c:	6039      	str	r1, [r7, #0]
 800846e:	80fb      	strh	r3, [r7, #6]
 8008470:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8008474:	2b00      	cmp	r3, #0
 8008476:	db0a      	blt.n	800848e <__NVIC_SetPriority+0x2a>
 8008478:	683b      	ldr	r3, [r7, #0]
 800847a:	b2da      	uxtb	r2, r3
 800847c:	490c      	ldr	r1, [pc, #48]	@ (80084b0 <__NVIC_SetPriority+0x4c>)
 800847e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8008482:	0112      	lsls	r2, r2, #4
 8008484:	b2d2      	uxtb	r2, r2
 8008486:	440b      	add	r3, r1
 8008488:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800848c:	e00a      	b.n	80084a4 <__NVIC_SetPriority+0x40>
 800848e:	683b      	ldr	r3, [r7, #0]
 8008490:	b2da      	uxtb	r2, r3
 8008492:	4908      	ldr	r1, [pc, #32]	@ (80084b4 <__NVIC_SetPriority+0x50>)
 8008494:	88fb      	ldrh	r3, [r7, #6]
 8008496:	f003 030f 	and.w	r3, r3, #15
 800849a:	3b04      	subs	r3, #4
 800849c:	0112      	lsls	r2, r2, #4
 800849e:	b2d2      	uxtb	r2, r2
 80084a0:	440b      	add	r3, r1
 80084a2:	761a      	strb	r2, [r3, #24]
 80084a4:	bf00      	nop
 80084a6:	370c      	adds	r7, #12
 80084a8:	46bd      	mov	sp, r7
 80084aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ae:	4770      	bx	lr
 80084b0:	e000e100 	.word	0xe000e100
 80084b4:	e000ed00 	.word	0xe000ed00

080084b8 <SysTick_Handler>:
 80084b8:	b580      	push	{r7, lr}
 80084ba:	af00      	add	r7, sp, #0
 80084bc:	4b05      	ldr	r3, [pc, #20]	@ (80084d4 <SysTick_Handler+0x1c>)
 80084be:	681b      	ldr	r3, [r3, #0]
 80084c0:	f001 fd18 	bl	8009ef4 <xTaskGetSchedulerState>
 80084c4:	4603      	mov	r3, r0
 80084c6:	2b01      	cmp	r3, #1
 80084c8:	d001      	beq.n	80084ce <SysTick_Handler+0x16>
 80084ca:	f002 fb0d 	bl	800aae8 <xPortSysTickHandler>
 80084ce:	bf00      	nop
 80084d0:	bd80      	pop	{r7, pc}
 80084d2:	bf00      	nop
 80084d4:	e000e010 	.word	0xe000e010

080084d8 <SVC_Setup>:
 80084d8:	b580      	push	{r7, lr}
 80084da:	af00      	add	r7, sp, #0
 80084dc:	2100      	movs	r1, #0
 80084de:	f06f 0004 	mvn.w	r0, #4
 80084e2:	f7ff ffbf 	bl	8008464 <__NVIC_SetPriority>
 80084e6:	bf00      	nop
 80084e8:	bd80      	pop	{r7, pc}
	...

080084ec <osKernelInitialize>:
 80084ec:	b480      	push	{r7}
 80084ee:	b083      	sub	sp, #12
 80084f0:	af00      	add	r7, sp, #0
 80084f2:	f3ef 8305 	mrs	r3, IPSR
 80084f6:	603b      	str	r3, [r7, #0]
 80084f8:	683b      	ldr	r3, [r7, #0]
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d003      	beq.n	8008506 <osKernelInitialize+0x1a>
 80084fe:	f06f 0305 	mvn.w	r3, #5
 8008502:	607b      	str	r3, [r7, #4]
 8008504:	e00c      	b.n	8008520 <osKernelInitialize+0x34>
 8008506:	4b0a      	ldr	r3, [pc, #40]	@ (8008530 <osKernelInitialize+0x44>)
 8008508:	681b      	ldr	r3, [r3, #0]
 800850a:	2b00      	cmp	r3, #0
 800850c:	d105      	bne.n	800851a <osKernelInitialize+0x2e>
 800850e:	4b08      	ldr	r3, [pc, #32]	@ (8008530 <osKernelInitialize+0x44>)
 8008510:	2201      	movs	r2, #1
 8008512:	601a      	str	r2, [r3, #0]
 8008514:	2300      	movs	r3, #0
 8008516:	607b      	str	r3, [r7, #4]
 8008518:	e002      	b.n	8008520 <osKernelInitialize+0x34>
 800851a:	f04f 33ff 	mov.w	r3, #4294967295
 800851e:	607b      	str	r3, [r7, #4]
 8008520:	687b      	ldr	r3, [r7, #4]
 8008522:	4618      	mov	r0, r3
 8008524:	370c      	adds	r7, #12
 8008526:	46bd      	mov	sp, r7
 8008528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800852c:	4770      	bx	lr
 800852e:	bf00      	nop
 8008530:	24000404 	.word	0x24000404

08008534 <osKernelStart>:
 8008534:	b580      	push	{r7, lr}
 8008536:	b082      	sub	sp, #8
 8008538:	af00      	add	r7, sp, #0
 800853a:	f3ef 8305 	mrs	r3, IPSR
 800853e:	603b      	str	r3, [r7, #0]
 8008540:	683b      	ldr	r3, [r7, #0]
 8008542:	2b00      	cmp	r3, #0
 8008544:	d003      	beq.n	800854e <osKernelStart+0x1a>
 8008546:	f06f 0305 	mvn.w	r3, #5
 800854a:	607b      	str	r3, [r7, #4]
 800854c:	e010      	b.n	8008570 <osKernelStart+0x3c>
 800854e:	4b0b      	ldr	r3, [pc, #44]	@ (800857c <osKernelStart+0x48>)
 8008550:	681b      	ldr	r3, [r3, #0]
 8008552:	2b01      	cmp	r3, #1
 8008554:	d109      	bne.n	800856a <osKernelStart+0x36>
 8008556:	f7ff ffbf 	bl	80084d8 <SVC_Setup>
 800855a:	4b08      	ldr	r3, [pc, #32]	@ (800857c <osKernelStart+0x48>)
 800855c:	2202      	movs	r2, #2
 800855e:	601a      	str	r2, [r3, #0]
 8008560:	f001 f87a 	bl	8009658 <vTaskStartScheduler>
 8008564:	2300      	movs	r3, #0
 8008566:	607b      	str	r3, [r7, #4]
 8008568:	e002      	b.n	8008570 <osKernelStart+0x3c>
 800856a:	f04f 33ff 	mov.w	r3, #4294967295
 800856e:	607b      	str	r3, [r7, #4]
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	4618      	mov	r0, r3
 8008574:	3708      	adds	r7, #8
 8008576:	46bd      	mov	sp, r7
 8008578:	bd80      	pop	{r7, pc}
 800857a:	bf00      	nop
 800857c:	24000404 	.word	0x24000404

08008580 <osThreadNew>:
 8008580:	b580      	push	{r7, lr}
 8008582:	b08e      	sub	sp, #56	@ 0x38
 8008584:	af04      	add	r7, sp, #16
 8008586:	60f8      	str	r0, [r7, #12]
 8008588:	60b9      	str	r1, [r7, #8]
 800858a:	607a      	str	r2, [r7, #4]
 800858c:	2300      	movs	r3, #0
 800858e:	613b      	str	r3, [r7, #16]
 8008590:	f3ef 8305 	mrs	r3, IPSR
 8008594:	617b      	str	r3, [r7, #20]
 8008596:	697b      	ldr	r3, [r7, #20]
 8008598:	2b00      	cmp	r3, #0
 800859a:	d17e      	bne.n	800869a <osThreadNew+0x11a>
 800859c:	68fb      	ldr	r3, [r7, #12]
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d07b      	beq.n	800869a <osThreadNew+0x11a>
 80085a2:	2380      	movs	r3, #128	@ 0x80
 80085a4:	623b      	str	r3, [r7, #32]
 80085a6:	2318      	movs	r3, #24
 80085a8:	61fb      	str	r3, [r7, #28]
 80085aa:	2300      	movs	r3, #0
 80085ac:	627b      	str	r3, [r7, #36]	@ 0x24
 80085ae:	f04f 33ff 	mov.w	r3, #4294967295
 80085b2:	61bb      	str	r3, [r7, #24]
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	2b00      	cmp	r3, #0
 80085b8:	d045      	beq.n	8008646 <osThreadNew+0xc6>
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d002      	beq.n	80085c8 <osThreadNew+0x48>
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80085c8:	687b      	ldr	r3, [r7, #4]
 80085ca:	699b      	ldr	r3, [r3, #24]
 80085cc:	2b00      	cmp	r3, #0
 80085ce:	d002      	beq.n	80085d6 <osThreadNew+0x56>
 80085d0:	687b      	ldr	r3, [r7, #4]
 80085d2:	699b      	ldr	r3, [r3, #24]
 80085d4:	61fb      	str	r3, [r7, #28]
 80085d6:	69fb      	ldr	r3, [r7, #28]
 80085d8:	2b00      	cmp	r3, #0
 80085da:	d008      	beq.n	80085ee <osThreadNew+0x6e>
 80085dc:	69fb      	ldr	r3, [r7, #28]
 80085de:	2b38      	cmp	r3, #56	@ 0x38
 80085e0:	d805      	bhi.n	80085ee <osThreadNew+0x6e>
 80085e2:	687b      	ldr	r3, [r7, #4]
 80085e4:	685b      	ldr	r3, [r3, #4]
 80085e6:	f003 0301 	and.w	r3, r3, #1
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d001      	beq.n	80085f2 <osThreadNew+0x72>
 80085ee:	2300      	movs	r3, #0
 80085f0:	e054      	b.n	800869c <osThreadNew+0x11c>
 80085f2:	687b      	ldr	r3, [r7, #4]
 80085f4:	695b      	ldr	r3, [r3, #20]
 80085f6:	2b00      	cmp	r3, #0
 80085f8:	d003      	beq.n	8008602 <osThreadNew+0x82>
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	695b      	ldr	r3, [r3, #20]
 80085fe:	089b      	lsrs	r3, r3, #2
 8008600:	623b      	str	r3, [r7, #32]
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	689b      	ldr	r3, [r3, #8]
 8008606:	2b00      	cmp	r3, #0
 8008608:	d00e      	beq.n	8008628 <osThreadNew+0xa8>
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	68db      	ldr	r3, [r3, #12]
 800860e:	2b5b      	cmp	r3, #91	@ 0x5b
 8008610:	d90a      	bls.n	8008628 <osThreadNew+0xa8>
 8008612:	687b      	ldr	r3, [r7, #4]
 8008614:	691b      	ldr	r3, [r3, #16]
 8008616:	2b00      	cmp	r3, #0
 8008618:	d006      	beq.n	8008628 <osThreadNew+0xa8>
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	695b      	ldr	r3, [r3, #20]
 800861e:	2b00      	cmp	r3, #0
 8008620:	d002      	beq.n	8008628 <osThreadNew+0xa8>
 8008622:	2301      	movs	r3, #1
 8008624:	61bb      	str	r3, [r7, #24]
 8008626:	e010      	b.n	800864a <osThreadNew+0xca>
 8008628:	687b      	ldr	r3, [r7, #4]
 800862a:	689b      	ldr	r3, [r3, #8]
 800862c:	2b00      	cmp	r3, #0
 800862e:	d10c      	bne.n	800864a <osThreadNew+0xca>
 8008630:	687b      	ldr	r3, [r7, #4]
 8008632:	68db      	ldr	r3, [r3, #12]
 8008634:	2b00      	cmp	r3, #0
 8008636:	d108      	bne.n	800864a <osThreadNew+0xca>
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	691b      	ldr	r3, [r3, #16]
 800863c:	2b00      	cmp	r3, #0
 800863e:	d104      	bne.n	800864a <osThreadNew+0xca>
 8008640:	2300      	movs	r3, #0
 8008642:	61bb      	str	r3, [r7, #24]
 8008644:	e001      	b.n	800864a <osThreadNew+0xca>
 8008646:	2300      	movs	r3, #0
 8008648:	61bb      	str	r3, [r7, #24]
 800864a:	69bb      	ldr	r3, [r7, #24]
 800864c:	2b01      	cmp	r3, #1
 800864e:	d110      	bne.n	8008672 <osThreadNew+0xf2>
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	691b      	ldr	r3, [r3, #16]
 8008654:	687a      	ldr	r2, [r7, #4]
 8008656:	6892      	ldr	r2, [r2, #8]
 8008658:	9202      	str	r2, [sp, #8]
 800865a:	9301      	str	r3, [sp, #4]
 800865c:	69fb      	ldr	r3, [r7, #28]
 800865e:	9300      	str	r3, [sp, #0]
 8008660:	68bb      	ldr	r3, [r7, #8]
 8008662:	6a3a      	ldr	r2, [r7, #32]
 8008664:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8008666:	68f8      	ldr	r0, [r7, #12]
 8008668:	f000 fe1a 	bl	80092a0 <xTaskCreateStatic>
 800866c:	4603      	mov	r3, r0
 800866e:	613b      	str	r3, [r7, #16]
 8008670:	e013      	b.n	800869a <osThreadNew+0x11a>
 8008672:	69bb      	ldr	r3, [r7, #24]
 8008674:	2b00      	cmp	r3, #0
 8008676:	d110      	bne.n	800869a <osThreadNew+0x11a>
 8008678:	6a3b      	ldr	r3, [r7, #32]
 800867a:	b29a      	uxth	r2, r3
 800867c:	f107 0310 	add.w	r3, r7, #16
 8008680:	9301      	str	r3, [sp, #4]
 8008682:	69fb      	ldr	r3, [r7, #28]
 8008684:	9300      	str	r3, [sp, #0]
 8008686:	68bb      	ldr	r3, [r7, #8]
 8008688:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800868a:	68f8      	ldr	r0, [r7, #12]
 800868c:	f000 fe68 	bl	8009360 <xTaskCreate>
 8008690:	4603      	mov	r3, r0
 8008692:	2b01      	cmp	r3, #1
 8008694:	d001      	beq.n	800869a <osThreadNew+0x11a>
 8008696:	2300      	movs	r3, #0
 8008698:	613b      	str	r3, [r7, #16]
 800869a:	693b      	ldr	r3, [r7, #16]
 800869c:	4618      	mov	r0, r3
 800869e:	3728      	adds	r7, #40	@ 0x28
 80086a0:	46bd      	mov	sp, r7
 80086a2:	bd80      	pop	{r7, pc}

080086a4 <osDelay>:
 80086a4:	b580      	push	{r7, lr}
 80086a6:	b084      	sub	sp, #16
 80086a8:	af00      	add	r7, sp, #0
 80086aa:	6078      	str	r0, [r7, #4]
 80086ac:	f3ef 8305 	mrs	r3, IPSR
 80086b0:	60bb      	str	r3, [r7, #8]
 80086b2:	68bb      	ldr	r3, [r7, #8]
 80086b4:	2b00      	cmp	r3, #0
 80086b6:	d003      	beq.n	80086c0 <osDelay+0x1c>
 80086b8:	f06f 0305 	mvn.w	r3, #5
 80086bc:	60fb      	str	r3, [r7, #12]
 80086be:	e007      	b.n	80086d0 <osDelay+0x2c>
 80086c0:	2300      	movs	r3, #0
 80086c2:	60fb      	str	r3, [r7, #12]
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d002      	beq.n	80086d0 <osDelay+0x2c>
 80086ca:	6878      	ldr	r0, [r7, #4]
 80086cc:	f000 ff8e 	bl	80095ec <vTaskDelay>
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	4618      	mov	r0, r3
 80086d4:	3710      	adds	r7, #16
 80086d6:	46bd      	mov	sp, r7
 80086d8:	bd80      	pop	{r7, pc}
	...

080086dc <vApplicationGetIdleTaskMemory>:
 80086dc:	b480      	push	{r7}
 80086de:	b085      	sub	sp, #20
 80086e0:	af00      	add	r7, sp, #0
 80086e2:	60f8      	str	r0, [r7, #12]
 80086e4:	60b9      	str	r1, [r7, #8]
 80086e6:	607a      	str	r2, [r7, #4]
 80086e8:	68fb      	ldr	r3, [r7, #12]
 80086ea:	4a07      	ldr	r2, [pc, #28]	@ (8008708 <vApplicationGetIdleTaskMemory+0x2c>)
 80086ec:	601a      	str	r2, [r3, #0]
 80086ee:	68bb      	ldr	r3, [r7, #8]
 80086f0:	4a06      	ldr	r2, [pc, #24]	@ (800870c <vApplicationGetIdleTaskMemory+0x30>)
 80086f2:	601a      	str	r2, [r3, #0]
 80086f4:	687b      	ldr	r3, [r7, #4]
 80086f6:	2280      	movs	r2, #128	@ 0x80
 80086f8:	601a      	str	r2, [r3, #0]
 80086fa:	bf00      	nop
 80086fc:	3714      	adds	r7, #20
 80086fe:	46bd      	mov	sp, r7
 8008700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008704:	4770      	bx	lr
 8008706:	bf00      	nop
 8008708:	24000408 	.word	0x24000408
 800870c:	24000464 	.word	0x24000464

08008710 <vApplicationGetTimerTaskMemory>:
 8008710:	b480      	push	{r7}
 8008712:	b085      	sub	sp, #20
 8008714:	af00      	add	r7, sp, #0
 8008716:	60f8      	str	r0, [r7, #12]
 8008718:	60b9      	str	r1, [r7, #8]
 800871a:	607a      	str	r2, [r7, #4]
 800871c:	68fb      	ldr	r3, [r7, #12]
 800871e:	4a07      	ldr	r2, [pc, #28]	@ (800873c <vApplicationGetTimerTaskMemory+0x2c>)
 8008720:	601a      	str	r2, [r3, #0]
 8008722:	68bb      	ldr	r3, [r7, #8]
 8008724:	4a06      	ldr	r2, [pc, #24]	@ (8008740 <vApplicationGetTimerTaskMemory+0x30>)
 8008726:	601a      	str	r2, [r3, #0]
 8008728:	687b      	ldr	r3, [r7, #4]
 800872a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800872e:	601a      	str	r2, [r3, #0]
 8008730:	bf00      	nop
 8008732:	3714      	adds	r7, #20
 8008734:	46bd      	mov	sp, r7
 8008736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800873a:	4770      	bx	lr
 800873c:	24000664 	.word	0x24000664
 8008740:	240006c0 	.word	0x240006c0

08008744 <vListInitialise>:
 8008744:	b480      	push	{r7}
 8008746:	b083      	sub	sp, #12
 8008748:	af00      	add	r7, sp, #0
 800874a:	6078      	str	r0, [r7, #4]
 800874c:	687b      	ldr	r3, [r7, #4]
 800874e:	f103 0208 	add.w	r2, r3, #8
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	605a      	str	r2, [r3, #4]
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	f04f 32ff 	mov.w	r2, #4294967295
 800875c:	609a      	str	r2, [r3, #8]
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	f103 0208 	add.w	r2, r3, #8
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	60da      	str	r2, [r3, #12]
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	f103 0208 	add.w	r2, r3, #8
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	611a      	str	r2, [r3, #16]
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	2200      	movs	r2, #0
 8008776:	601a      	str	r2, [r3, #0]
 8008778:	bf00      	nop
 800877a:	370c      	adds	r7, #12
 800877c:	46bd      	mov	sp, r7
 800877e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008782:	4770      	bx	lr

08008784 <vListInitialiseItem>:
 8008784:	b480      	push	{r7}
 8008786:	b083      	sub	sp, #12
 8008788:	af00      	add	r7, sp, #0
 800878a:	6078      	str	r0, [r7, #4]
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	2200      	movs	r2, #0
 8008790:	611a      	str	r2, [r3, #16]
 8008792:	bf00      	nop
 8008794:	370c      	adds	r7, #12
 8008796:	46bd      	mov	sp, r7
 8008798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800879c:	4770      	bx	lr

0800879e <vListInsertEnd>:
 800879e:	b480      	push	{r7}
 80087a0:	b085      	sub	sp, #20
 80087a2:	af00      	add	r7, sp, #0
 80087a4:	6078      	str	r0, [r7, #4]
 80087a6:	6039      	str	r1, [r7, #0]
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	685b      	ldr	r3, [r3, #4]
 80087ac:	60fb      	str	r3, [r7, #12]
 80087ae:	683b      	ldr	r3, [r7, #0]
 80087b0:	68fa      	ldr	r2, [r7, #12]
 80087b2:	605a      	str	r2, [r3, #4]
 80087b4:	68fb      	ldr	r3, [r7, #12]
 80087b6:	689a      	ldr	r2, [r3, #8]
 80087b8:	683b      	ldr	r3, [r7, #0]
 80087ba:	609a      	str	r2, [r3, #8]
 80087bc:	68fb      	ldr	r3, [r7, #12]
 80087be:	689b      	ldr	r3, [r3, #8]
 80087c0:	683a      	ldr	r2, [r7, #0]
 80087c2:	605a      	str	r2, [r3, #4]
 80087c4:	68fb      	ldr	r3, [r7, #12]
 80087c6:	683a      	ldr	r2, [r7, #0]
 80087c8:	609a      	str	r2, [r3, #8]
 80087ca:	683b      	ldr	r3, [r7, #0]
 80087cc:	687a      	ldr	r2, [r7, #4]
 80087ce:	611a      	str	r2, [r3, #16]
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	681b      	ldr	r3, [r3, #0]
 80087d4:	1c5a      	adds	r2, r3, #1
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	601a      	str	r2, [r3, #0]
 80087da:	bf00      	nop
 80087dc:	3714      	adds	r7, #20
 80087de:	46bd      	mov	sp, r7
 80087e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087e4:	4770      	bx	lr

080087e6 <vListInsert>:
 80087e6:	b480      	push	{r7}
 80087e8:	b085      	sub	sp, #20
 80087ea:	af00      	add	r7, sp, #0
 80087ec:	6078      	str	r0, [r7, #4]
 80087ee:	6039      	str	r1, [r7, #0]
 80087f0:	683b      	ldr	r3, [r7, #0]
 80087f2:	681b      	ldr	r3, [r3, #0]
 80087f4:	60bb      	str	r3, [r7, #8]
 80087f6:	68bb      	ldr	r3, [r7, #8]
 80087f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80087fc:	d103      	bne.n	8008806 <vListInsert+0x20>
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	691b      	ldr	r3, [r3, #16]
 8008802:	60fb      	str	r3, [r7, #12]
 8008804:	e00c      	b.n	8008820 <vListInsert+0x3a>
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	3308      	adds	r3, #8
 800880a:	60fb      	str	r3, [r7, #12]
 800880c:	e002      	b.n	8008814 <vListInsert+0x2e>
 800880e:	68fb      	ldr	r3, [r7, #12]
 8008810:	685b      	ldr	r3, [r3, #4]
 8008812:	60fb      	str	r3, [r7, #12]
 8008814:	68fb      	ldr	r3, [r7, #12]
 8008816:	685b      	ldr	r3, [r3, #4]
 8008818:	681b      	ldr	r3, [r3, #0]
 800881a:	68ba      	ldr	r2, [r7, #8]
 800881c:	429a      	cmp	r2, r3
 800881e:	d2f6      	bcs.n	800880e <vListInsert+0x28>
 8008820:	68fb      	ldr	r3, [r7, #12]
 8008822:	685a      	ldr	r2, [r3, #4]
 8008824:	683b      	ldr	r3, [r7, #0]
 8008826:	605a      	str	r2, [r3, #4]
 8008828:	683b      	ldr	r3, [r7, #0]
 800882a:	685b      	ldr	r3, [r3, #4]
 800882c:	683a      	ldr	r2, [r7, #0]
 800882e:	609a      	str	r2, [r3, #8]
 8008830:	683b      	ldr	r3, [r7, #0]
 8008832:	68fa      	ldr	r2, [r7, #12]
 8008834:	609a      	str	r2, [r3, #8]
 8008836:	68fb      	ldr	r3, [r7, #12]
 8008838:	683a      	ldr	r2, [r7, #0]
 800883a:	605a      	str	r2, [r3, #4]
 800883c:	683b      	ldr	r3, [r7, #0]
 800883e:	687a      	ldr	r2, [r7, #4]
 8008840:	611a      	str	r2, [r3, #16]
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	681b      	ldr	r3, [r3, #0]
 8008846:	1c5a      	adds	r2, r3, #1
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	601a      	str	r2, [r3, #0]
 800884c:	bf00      	nop
 800884e:	3714      	adds	r7, #20
 8008850:	46bd      	mov	sp, r7
 8008852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008856:	4770      	bx	lr

08008858 <uxListRemove>:
 8008858:	b480      	push	{r7}
 800885a:	b085      	sub	sp, #20
 800885c:	af00      	add	r7, sp, #0
 800885e:	6078      	str	r0, [r7, #4]
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	691b      	ldr	r3, [r3, #16]
 8008864:	60fb      	str	r3, [r7, #12]
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	685b      	ldr	r3, [r3, #4]
 800886a:	687a      	ldr	r2, [r7, #4]
 800886c:	6892      	ldr	r2, [r2, #8]
 800886e:	609a      	str	r2, [r3, #8]
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	689b      	ldr	r3, [r3, #8]
 8008874:	687a      	ldr	r2, [r7, #4]
 8008876:	6852      	ldr	r2, [r2, #4]
 8008878:	605a      	str	r2, [r3, #4]
 800887a:	68fb      	ldr	r3, [r7, #12]
 800887c:	685b      	ldr	r3, [r3, #4]
 800887e:	687a      	ldr	r2, [r7, #4]
 8008880:	429a      	cmp	r2, r3
 8008882:	d103      	bne.n	800888c <uxListRemove+0x34>
 8008884:	687b      	ldr	r3, [r7, #4]
 8008886:	689a      	ldr	r2, [r3, #8]
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	605a      	str	r2, [r3, #4]
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	2200      	movs	r2, #0
 8008890:	611a      	str	r2, [r3, #16]
 8008892:	68fb      	ldr	r3, [r7, #12]
 8008894:	681b      	ldr	r3, [r3, #0]
 8008896:	1e5a      	subs	r2, r3, #1
 8008898:	68fb      	ldr	r3, [r7, #12]
 800889a:	601a      	str	r2, [r3, #0]
 800889c:	68fb      	ldr	r3, [r7, #12]
 800889e:	681b      	ldr	r3, [r3, #0]
 80088a0:	4618      	mov	r0, r3
 80088a2:	3714      	adds	r7, #20
 80088a4:	46bd      	mov	sp, r7
 80088a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088aa:	4770      	bx	lr

080088ac <xQueueGenericReset>:
 80088ac:	b580      	push	{r7, lr}
 80088ae:	b084      	sub	sp, #16
 80088b0:	af00      	add	r7, sp, #0
 80088b2:	6078      	str	r0, [r7, #4]
 80088b4:	6039      	str	r1, [r7, #0]
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	60fb      	str	r3, [r7, #12]
 80088ba:	68fb      	ldr	r3, [r7, #12]
 80088bc:	2b00      	cmp	r3, #0
 80088be:	d10b      	bne.n	80088d8 <xQueueGenericReset+0x2c>
 80088c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80088c4:	f383 8811 	msr	BASEPRI, r3
 80088c8:	f3bf 8f6f 	isb	sy
 80088cc:	f3bf 8f4f 	dsb	sy
 80088d0:	60bb      	str	r3, [r7, #8]
 80088d2:	bf00      	nop
 80088d4:	bf00      	nop
 80088d6:	e7fd      	b.n	80088d4 <xQueueGenericReset+0x28>
 80088d8:	f002 f876 	bl	800a9c8 <vPortEnterCritical>
 80088dc:	68fb      	ldr	r3, [r7, #12]
 80088de:	681a      	ldr	r2, [r3, #0]
 80088e0:	68fb      	ldr	r3, [r7, #12]
 80088e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80088e4:	68f9      	ldr	r1, [r7, #12]
 80088e6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80088e8:	fb01 f303 	mul.w	r3, r1, r3
 80088ec:	441a      	add	r2, r3
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	609a      	str	r2, [r3, #8]
 80088f2:	68fb      	ldr	r3, [r7, #12]
 80088f4:	2200      	movs	r2, #0
 80088f6:	639a      	str	r2, [r3, #56]	@ 0x38
 80088f8:	68fb      	ldr	r3, [r7, #12]
 80088fa:	681a      	ldr	r2, [r3, #0]
 80088fc:	68fb      	ldr	r3, [r7, #12]
 80088fe:	605a      	str	r2, [r3, #4]
 8008900:	68fb      	ldr	r3, [r7, #12]
 8008902:	681a      	ldr	r2, [r3, #0]
 8008904:	68fb      	ldr	r3, [r7, #12]
 8008906:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008908:	3b01      	subs	r3, #1
 800890a:	68f9      	ldr	r1, [r7, #12]
 800890c:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800890e:	fb01 f303 	mul.w	r3, r1, r3
 8008912:	441a      	add	r2, r3
 8008914:	68fb      	ldr	r3, [r7, #12]
 8008916:	60da      	str	r2, [r3, #12]
 8008918:	68fb      	ldr	r3, [r7, #12]
 800891a:	22ff      	movs	r2, #255	@ 0xff
 800891c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008920:	68fb      	ldr	r3, [r7, #12]
 8008922:	22ff      	movs	r2, #255	@ 0xff
 8008924:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008928:	683b      	ldr	r3, [r7, #0]
 800892a:	2b00      	cmp	r3, #0
 800892c:	d114      	bne.n	8008958 <xQueueGenericReset+0xac>
 800892e:	68fb      	ldr	r3, [r7, #12]
 8008930:	691b      	ldr	r3, [r3, #16]
 8008932:	2b00      	cmp	r3, #0
 8008934:	d01a      	beq.n	800896c <xQueueGenericReset+0xc0>
 8008936:	68fb      	ldr	r3, [r7, #12]
 8008938:	3310      	adds	r3, #16
 800893a:	4618      	mov	r0, r3
 800893c:	f001 f91a 	bl	8009b74 <xTaskRemoveFromEventList>
 8008940:	4603      	mov	r3, r0
 8008942:	2b00      	cmp	r3, #0
 8008944:	d012      	beq.n	800896c <xQueueGenericReset+0xc0>
 8008946:	4b0d      	ldr	r3, [pc, #52]	@ (800897c <xQueueGenericReset+0xd0>)
 8008948:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800894c:	601a      	str	r2, [r3, #0]
 800894e:	f3bf 8f4f 	dsb	sy
 8008952:	f3bf 8f6f 	isb	sy
 8008956:	e009      	b.n	800896c <xQueueGenericReset+0xc0>
 8008958:	68fb      	ldr	r3, [r7, #12]
 800895a:	3310      	adds	r3, #16
 800895c:	4618      	mov	r0, r3
 800895e:	f7ff fef1 	bl	8008744 <vListInitialise>
 8008962:	68fb      	ldr	r3, [r7, #12]
 8008964:	3324      	adds	r3, #36	@ 0x24
 8008966:	4618      	mov	r0, r3
 8008968:	f7ff feec 	bl	8008744 <vListInitialise>
 800896c:	f002 f85e 	bl	800aa2c <vPortExitCritical>
 8008970:	2301      	movs	r3, #1
 8008972:	4618      	mov	r0, r3
 8008974:	3710      	adds	r7, #16
 8008976:	46bd      	mov	sp, r7
 8008978:	bd80      	pop	{r7, pc}
 800897a:	bf00      	nop
 800897c:	e000ed04 	.word	0xe000ed04

08008980 <xQueueGenericCreateStatic>:
 8008980:	b580      	push	{r7, lr}
 8008982:	b08e      	sub	sp, #56	@ 0x38
 8008984:	af02      	add	r7, sp, #8
 8008986:	60f8      	str	r0, [r7, #12]
 8008988:	60b9      	str	r1, [r7, #8]
 800898a:	607a      	str	r2, [r7, #4]
 800898c:	603b      	str	r3, [r7, #0]
 800898e:	68fb      	ldr	r3, [r7, #12]
 8008990:	2b00      	cmp	r3, #0
 8008992:	d10b      	bne.n	80089ac <xQueueGenericCreateStatic+0x2c>
 8008994:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008998:	f383 8811 	msr	BASEPRI, r3
 800899c:	f3bf 8f6f 	isb	sy
 80089a0:	f3bf 8f4f 	dsb	sy
 80089a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80089a6:	bf00      	nop
 80089a8:	bf00      	nop
 80089aa:	e7fd      	b.n	80089a8 <xQueueGenericCreateStatic+0x28>
 80089ac:	683b      	ldr	r3, [r7, #0]
 80089ae:	2b00      	cmp	r3, #0
 80089b0:	d10b      	bne.n	80089ca <xQueueGenericCreateStatic+0x4a>
 80089b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089b6:	f383 8811 	msr	BASEPRI, r3
 80089ba:	f3bf 8f6f 	isb	sy
 80089be:	f3bf 8f4f 	dsb	sy
 80089c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80089c4:	bf00      	nop
 80089c6:	bf00      	nop
 80089c8:	e7fd      	b.n	80089c6 <xQueueGenericCreateStatic+0x46>
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	2b00      	cmp	r3, #0
 80089ce:	d002      	beq.n	80089d6 <xQueueGenericCreateStatic+0x56>
 80089d0:	68bb      	ldr	r3, [r7, #8]
 80089d2:	2b00      	cmp	r3, #0
 80089d4:	d001      	beq.n	80089da <xQueueGenericCreateStatic+0x5a>
 80089d6:	2301      	movs	r3, #1
 80089d8:	e000      	b.n	80089dc <xQueueGenericCreateStatic+0x5c>
 80089da:	2300      	movs	r3, #0
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d10b      	bne.n	80089f8 <xQueueGenericCreateStatic+0x78>
 80089e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089e4:	f383 8811 	msr	BASEPRI, r3
 80089e8:	f3bf 8f6f 	isb	sy
 80089ec:	f3bf 8f4f 	dsb	sy
 80089f0:	623b      	str	r3, [r7, #32]
 80089f2:	bf00      	nop
 80089f4:	bf00      	nop
 80089f6:	e7fd      	b.n	80089f4 <xQueueGenericCreateStatic+0x74>
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	2b00      	cmp	r3, #0
 80089fc:	d102      	bne.n	8008a04 <xQueueGenericCreateStatic+0x84>
 80089fe:	68bb      	ldr	r3, [r7, #8]
 8008a00:	2b00      	cmp	r3, #0
 8008a02:	d101      	bne.n	8008a08 <xQueueGenericCreateStatic+0x88>
 8008a04:	2301      	movs	r3, #1
 8008a06:	e000      	b.n	8008a0a <xQueueGenericCreateStatic+0x8a>
 8008a08:	2300      	movs	r3, #0
 8008a0a:	2b00      	cmp	r3, #0
 8008a0c:	d10b      	bne.n	8008a26 <xQueueGenericCreateStatic+0xa6>
 8008a0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a12:	f383 8811 	msr	BASEPRI, r3
 8008a16:	f3bf 8f6f 	isb	sy
 8008a1a:	f3bf 8f4f 	dsb	sy
 8008a1e:	61fb      	str	r3, [r7, #28]
 8008a20:	bf00      	nop
 8008a22:	bf00      	nop
 8008a24:	e7fd      	b.n	8008a22 <xQueueGenericCreateStatic+0xa2>
 8008a26:	2350      	movs	r3, #80	@ 0x50
 8008a28:	617b      	str	r3, [r7, #20]
 8008a2a:	697b      	ldr	r3, [r7, #20]
 8008a2c:	2b50      	cmp	r3, #80	@ 0x50
 8008a2e:	d00b      	beq.n	8008a48 <xQueueGenericCreateStatic+0xc8>
 8008a30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a34:	f383 8811 	msr	BASEPRI, r3
 8008a38:	f3bf 8f6f 	isb	sy
 8008a3c:	f3bf 8f4f 	dsb	sy
 8008a40:	61bb      	str	r3, [r7, #24]
 8008a42:	bf00      	nop
 8008a44:	bf00      	nop
 8008a46:	e7fd      	b.n	8008a44 <xQueueGenericCreateStatic+0xc4>
 8008a48:	697b      	ldr	r3, [r7, #20]
 8008a4a:	683b      	ldr	r3, [r7, #0]
 8008a4c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008a4e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a50:	2b00      	cmp	r3, #0
 8008a52:	d00d      	beq.n	8008a70 <xQueueGenericCreateStatic+0xf0>
 8008a54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a56:	2201      	movs	r2, #1
 8008a58:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008a5c:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8008a60:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a62:	9300      	str	r3, [sp, #0]
 8008a64:	4613      	mov	r3, r2
 8008a66:	687a      	ldr	r2, [r7, #4]
 8008a68:	68b9      	ldr	r1, [r7, #8]
 8008a6a:	68f8      	ldr	r0, [r7, #12]
 8008a6c:	f000 f805 	bl	8008a7a <prvInitialiseNewQueue>
 8008a70:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a72:	4618      	mov	r0, r3
 8008a74:	3730      	adds	r7, #48	@ 0x30
 8008a76:	46bd      	mov	sp, r7
 8008a78:	bd80      	pop	{r7, pc}

08008a7a <prvInitialiseNewQueue>:
 8008a7a:	b580      	push	{r7, lr}
 8008a7c:	b084      	sub	sp, #16
 8008a7e:	af00      	add	r7, sp, #0
 8008a80:	60f8      	str	r0, [r7, #12]
 8008a82:	60b9      	str	r1, [r7, #8]
 8008a84:	607a      	str	r2, [r7, #4]
 8008a86:	70fb      	strb	r3, [r7, #3]
 8008a88:	68bb      	ldr	r3, [r7, #8]
 8008a8a:	2b00      	cmp	r3, #0
 8008a8c:	d103      	bne.n	8008a96 <prvInitialiseNewQueue+0x1c>
 8008a8e:	69bb      	ldr	r3, [r7, #24]
 8008a90:	69ba      	ldr	r2, [r7, #24]
 8008a92:	601a      	str	r2, [r3, #0]
 8008a94:	e002      	b.n	8008a9c <prvInitialiseNewQueue+0x22>
 8008a96:	69bb      	ldr	r3, [r7, #24]
 8008a98:	687a      	ldr	r2, [r7, #4]
 8008a9a:	601a      	str	r2, [r3, #0]
 8008a9c:	69bb      	ldr	r3, [r7, #24]
 8008a9e:	68fa      	ldr	r2, [r7, #12]
 8008aa0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8008aa2:	69bb      	ldr	r3, [r7, #24]
 8008aa4:	68ba      	ldr	r2, [r7, #8]
 8008aa6:	641a      	str	r2, [r3, #64]	@ 0x40
 8008aa8:	2101      	movs	r1, #1
 8008aaa:	69b8      	ldr	r0, [r7, #24]
 8008aac:	f7ff fefe 	bl	80088ac <xQueueGenericReset>
 8008ab0:	69bb      	ldr	r3, [r7, #24]
 8008ab2:	78fa      	ldrb	r2, [r7, #3]
 8008ab4:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8008ab8:	bf00      	nop
 8008aba:	3710      	adds	r7, #16
 8008abc:	46bd      	mov	sp, r7
 8008abe:	bd80      	pop	{r7, pc}

08008ac0 <xQueueGenericSend>:
 8008ac0:	b580      	push	{r7, lr}
 8008ac2:	b08e      	sub	sp, #56	@ 0x38
 8008ac4:	af00      	add	r7, sp, #0
 8008ac6:	60f8      	str	r0, [r7, #12]
 8008ac8:	60b9      	str	r1, [r7, #8]
 8008aca:	607a      	str	r2, [r7, #4]
 8008acc:	603b      	str	r3, [r7, #0]
 8008ace:	2300      	movs	r3, #0
 8008ad0:	637b      	str	r3, [r7, #52]	@ 0x34
 8008ad2:	68fb      	ldr	r3, [r7, #12]
 8008ad4:	633b      	str	r3, [r7, #48]	@ 0x30
 8008ad6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008ad8:	2b00      	cmp	r3, #0
 8008ada:	d10b      	bne.n	8008af4 <xQueueGenericSend+0x34>
 8008adc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ae0:	f383 8811 	msr	BASEPRI, r3
 8008ae4:	f3bf 8f6f 	isb	sy
 8008ae8:	f3bf 8f4f 	dsb	sy
 8008aec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008aee:	bf00      	nop
 8008af0:	bf00      	nop
 8008af2:	e7fd      	b.n	8008af0 <xQueueGenericSend+0x30>
 8008af4:	68bb      	ldr	r3, [r7, #8]
 8008af6:	2b00      	cmp	r3, #0
 8008af8:	d103      	bne.n	8008b02 <xQueueGenericSend+0x42>
 8008afa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008afc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008afe:	2b00      	cmp	r3, #0
 8008b00:	d101      	bne.n	8008b06 <xQueueGenericSend+0x46>
 8008b02:	2301      	movs	r3, #1
 8008b04:	e000      	b.n	8008b08 <xQueueGenericSend+0x48>
 8008b06:	2300      	movs	r3, #0
 8008b08:	2b00      	cmp	r3, #0
 8008b0a:	d10b      	bne.n	8008b24 <xQueueGenericSend+0x64>
 8008b0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b10:	f383 8811 	msr	BASEPRI, r3
 8008b14:	f3bf 8f6f 	isb	sy
 8008b18:	f3bf 8f4f 	dsb	sy
 8008b1c:	627b      	str	r3, [r7, #36]	@ 0x24
 8008b1e:	bf00      	nop
 8008b20:	bf00      	nop
 8008b22:	e7fd      	b.n	8008b20 <xQueueGenericSend+0x60>
 8008b24:	683b      	ldr	r3, [r7, #0]
 8008b26:	2b02      	cmp	r3, #2
 8008b28:	d103      	bne.n	8008b32 <xQueueGenericSend+0x72>
 8008b2a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008b2c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b2e:	2b01      	cmp	r3, #1
 8008b30:	d101      	bne.n	8008b36 <xQueueGenericSend+0x76>
 8008b32:	2301      	movs	r3, #1
 8008b34:	e000      	b.n	8008b38 <xQueueGenericSend+0x78>
 8008b36:	2300      	movs	r3, #0
 8008b38:	2b00      	cmp	r3, #0
 8008b3a:	d10b      	bne.n	8008b54 <xQueueGenericSend+0x94>
 8008b3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b40:	f383 8811 	msr	BASEPRI, r3
 8008b44:	f3bf 8f6f 	isb	sy
 8008b48:	f3bf 8f4f 	dsb	sy
 8008b4c:	623b      	str	r3, [r7, #32]
 8008b4e:	bf00      	nop
 8008b50:	bf00      	nop
 8008b52:	e7fd      	b.n	8008b50 <xQueueGenericSend+0x90>
 8008b54:	f001 f9ce 	bl	8009ef4 <xTaskGetSchedulerState>
 8008b58:	4603      	mov	r3, r0
 8008b5a:	2b00      	cmp	r3, #0
 8008b5c:	d102      	bne.n	8008b64 <xQueueGenericSend+0xa4>
 8008b5e:	687b      	ldr	r3, [r7, #4]
 8008b60:	2b00      	cmp	r3, #0
 8008b62:	d101      	bne.n	8008b68 <xQueueGenericSend+0xa8>
 8008b64:	2301      	movs	r3, #1
 8008b66:	e000      	b.n	8008b6a <xQueueGenericSend+0xaa>
 8008b68:	2300      	movs	r3, #0
 8008b6a:	2b00      	cmp	r3, #0
 8008b6c:	d10b      	bne.n	8008b86 <xQueueGenericSend+0xc6>
 8008b6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b72:	f383 8811 	msr	BASEPRI, r3
 8008b76:	f3bf 8f6f 	isb	sy
 8008b7a:	f3bf 8f4f 	dsb	sy
 8008b7e:	61fb      	str	r3, [r7, #28]
 8008b80:	bf00      	nop
 8008b82:	bf00      	nop
 8008b84:	e7fd      	b.n	8008b82 <xQueueGenericSend+0xc2>
 8008b86:	f001 ff1f 	bl	800a9c8 <vPortEnterCritical>
 8008b8a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008b8c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008b8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008b90:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008b92:	429a      	cmp	r2, r3
 8008b94:	d302      	bcc.n	8008b9c <xQueueGenericSend+0xdc>
 8008b96:	683b      	ldr	r3, [r7, #0]
 8008b98:	2b02      	cmp	r3, #2
 8008b9a:	d129      	bne.n	8008bf0 <xQueueGenericSend+0x130>
 8008b9c:	683a      	ldr	r2, [r7, #0]
 8008b9e:	68b9      	ldr	r1, [r7, #8]
 8008ba0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008ba2:	f000 fa0f 	bl	8008fc4 <prvCopyDataToQueue>
 8008ba6:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8008ba8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008baa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008bac:	2b00      	cmp	r3, #0
 8008bae:	d010      	beq.n	8008bd2 <xQueueGenericSend+0x112>
 8008bb0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008bb2:	3324      	adds	r3, #36	@ 0x24
 8008bb4:	4618      	mov	r0, r3
 8008bb6:	f000 ffdd 	bl	8009b74 <xTaskRemoveFromEventList>
 8008bba:	4603      	mov	r3, r0
 8008bbc:	2b00      	cmp	r3, #0
 8008bbe:	d013      	beq.n	8008be8 <xQueueGenericSend+0x128>
 8008bc0:	4b3f      	ldr	r3, [pc, #252]	@ (8008cc0 <xQueueGenericSend+0x200>)
 8008bc2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bc6:	601a      	str	r2, [r3, #0]
 8008bc8:	f3bf 8f4f 	dsb	sy
 8008bcc:	f3bf 8f6f 	isb	sy
 8008bd0:	e00a      	b.n	8008be8 <xQueueGenericSend+0x128>
 8008bd2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008bd4:	2b00      	cmp	r3, #0
 8008bd6:	d007      	beq.n	8008be8 <xQueueGenericSend+0x128>
 8008bd8:	4b39      	ldr	r3, [pc, #228]	@ (8008cc0 <xQueueGenericSend+0x200>)
 8008bda:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bde:	601a      	str	r2, [r3, #0]
 8008be0:	f3bf 8f4f 	dsb	sy
 8008be4:	f3bf 8f6f 	isb	sy
 8008be8:	f001 ff20 	bl	800aa2c <vPortExitCritical>
 8008bec:	2301      	movs	r3, #1
 8008bee:	e063      	b.n	8008cb8 <xQueueGenericSend+0x1f8>
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	2b00      	cmp	r3, #0
 8008bf4:	d103      	bne.n	8008bfe <xQueueGenericSend+0x13e>
 8008bf6:	f001 ff19 	bl	800aa2c <vPortExitCritical>
 8008bfa:	2300      	movs	r3, #0
 8008bfc:	e05c      	b.n	8008cb8 <xQueueGenericSend+0x1f8>
 8008bfe:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008c00:	2b00      	cmp	r3, #0
 8008c02:	d106      	bne.n	8008c12 <xQueueGenericSend+0x152>
 8008c04:	f107 0314 	add.w	r3, r7, #20
 8008c08:	4618      	mov	r0, r3
 8008c0a:	f001 f817 	bl	8009c3c <vTaskInternalSetTimeOutState>
 8008c0e:	2301      	movs	r3, #1
 8008c10:	637b      	str	r3, [r7, #52]	@ 0x34
 8008c12:	f001 ff0b 	bl	800aa2c <vPortExitCritical>
 8008c16:	f000 fd87 	bl	8009728 <vTaskSuspendAll>
 8008c1a:	f001 fed5 	bl	800a9c8 <vPortEnterCritical>
 8008c1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c20:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008c24:	b25b      	sxtb	r3, r3
 8008c26:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008c2a:	d103      	bne.n	8008c34 <xQueueGenericSend+0x174>
 8008c2c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c2e:	2200      	movs	r2, #0
 8008c30:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008c34:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c36:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008c3a:	b25b      	sxtb	r3, r3
 8008c3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008c40:	d103      	bne.n	8008c4a <xQueueGenericSend+0x18a>
 8008c42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c44:	2200      	movs	r2, #0
 8008c46:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008c4a:	f001 feef 	bl	800aa2c <vPortExitCritical>
 8008c4e:	1d3a      	adds	r2, r7, #4
 8008c50:	f107 0314 	add.w	r3, r7, #20
 8008c54:	4611      	mov	r1, r2
 8008c56:	4618      	mov	r0, r3
 8008c58:	f001 f806 	bl	8009c68 <xTaskCheckForTimeOut>
 8008c5c:	4603      	mov	r3, r0
 8008c5e:	2b00      	cmp	r3, #0
 8008c60:	d124      	bne.n	8008cac <xQueueGenericSend+0x1ec>
 8008c62:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008c64:	f000 faa6 	bl	80091b4 <prvIsQueueFull>
 8008c68:	4603      	mov	r3, r0
 8008c6a:	2b00      	cmp	r3, #0
 8008c6c:	d018      	beq.n	8008ca0 <xQueueGenericSend+0x1e0>
 8008c6e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008c70:	3310      	adds	r3, #16
 8008c72:	687a      	ldr	r2, [r7, #4]
 8008c74:	4611      	mov	r1, r2
 8008c76:	4618      	mov	r0, r3
 8008c78:	f000 ff2a 	bl	8009ad0 <vTaskPlaceOnEventList>
 8008c7c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008c7e:	f000 fa31 	bl	80090e4 <prvUnlockQueue>
 8008c82:	f000 fd5f 	bl	8009744 <xTaskResumeAll>
 8008c86:	4603      	mov	r3, r0
 8008c88:	2b00      	cmp	r3, #0
 8008c8a:	f47f af7c 	bne.w	8008b86 <xQueueGenericSend+0xc6>
 8008c8e:	4b0c      	ldr	r3, [pc, #48]	@ (8008cc0 <xQueueGenericSend+0x200>)
 8008c90:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008c94:	601a      	str	r2, [r3, #0]
 8008c96:	f3bf 8f4f 	dsb	sy
 8008c9a:	f3bf 8f6f 	isb	sy
 8008c9e:	e772      	b.n	8008b86 <xQueueGenericSend+0xc6>
 8008ca0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008ca2:	f000 fa1f 	bl	80090e4 <prvUnlockQueue>
 8008ca6:	f000 fd4d 	bl	8009744 <xTaskResumeAll>
 8008caa:	e76c      	b.n	8008b86 <xQueueGenericSend+0xc6>
 8008cac:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8008cae:	f000 fa19 	bl	80090e4 <prvUnlockQueue>
 8008cb2:	f000 fd47 	bl	8009744 <xTaskResumeAll>
 8008cb6:	2300      	movs	r3, #0
 8008cb8:	4618      	mov	r0, r3
 8008cba:	3738      	adds	r7, #56	@ 0x38
 8008cbc:	46bd      	mov	sp, r7
 8008cbe:	bd80      	pop	{r7, pc}
 8008cc0:	e000ed04 	.word	0xe000ed04

08008cc4 <xQueueGenericSendFromISR>:
 8008cc4:	b580      	push	{r7, lr}
 8008cc6:	b090      	sub	sp, #64	@ 0x40
 8008cc8:	af00      	add	r7, sp, #0
 8008cca:	60f8      	str	r0, [r7, #12]
 8008ccc:	60b9      	str	r1, [r7, #8]
 8008cce:	607a      	str	r2, [r7, #4]
 8008cd0:	603b      	str	r3, [r7, #0]
 8008cd2:	68fb      	ldr	r3, [r7, #12]
 8008cd4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008cd6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008cd8:	2b00      	cmp	r3, #0
 8008cda:	d10b      	bne.n	8008cf4 <xQueueGenericSendFromISR+0x30>
 8008cdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ce0:	f383 8811 	msr	BASEPRI, r3
 8008ce4:	f3bf 8f6f 	isb	sy
 8008ce8:	f3bf 8f4f 	dsb	sy
 8008cec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008cee:	bf00      	nop
 8008cf0:	bf00      	nop
 8008cf2:	e7fd      	b.n	8008cf0 <xQueueGenericSendFromISR+0x2c>
 8008cf4:	68bb      	ldr	r3, [r7, #8]
 8008cf6:	2b00      	cmp	r3, #0
 8008cf8:	d103      	bne.n	8008d02 <xQueueGenericSendFromISR+0x3e>
 8008cfa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008cfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008cfe:	2b00      	cmp	r3, #0
 8008d00:	d101      	bne.n	8008d06 <xQueueGenericSendFromISR+0x42>
 8008d02:	2301      	movs	r3, #1
 8008d04:	e000      	b.n	8008d08 <xQueueGenericSendFromISR+0x44>
 8008d06:	2300      	movs	r3, #0
 8008d08:	2b00      	cmp	r3, #0
 8008d0a:	d10b      	bne.n	8008d24 <xQueueGenericSendFromISR+0x60>
 8008d0c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d10:	f383 8811 	msr	BASEPRI, r3
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	f3bf 8f4f 	dsb	sy
 8008d1c:	627b      	str	r3, [r7, #36]	@ 0x24
 8008d1e:	bf00      	nop
 8008d20:	bf00      	nop
 8008d22:	e7fd      	b.n	8008d20 <xQueueGenericSendFromISR+0x5c>
 8008d24:	683b      	ldr	r3, [r7, #0]
 8008d26:	2b02      	cmp	r3, #2
 8008d28:	d103      	bne.n	8008d32 <xQueueGenericSendFromISR+0x6e>
 8008d2a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d2c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008d2e:	2b01      	cmp	r3, #1
 8008d30:	d101      	bne.n	8008d36 <xQueueGenericSendFromISR+0x72>
 8008d32:	2301      	movs	r3, #1
 8008d34:	e000      	b.n	8008d38 <xQueueGenericSendFromISR+0x74>
 8008d36:	2300      	movs	r3, #0
 8008d38:	2b00      	cmp	r3, #0
 8008d3a:	d10b      	bne.n	8008d54 <xQueueGenericSendFromISR+0x90>
 8008d3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d40:	f383 8811 	msr	BASEPRI, r3
 8008d44:	f3bf 8f6f 	isb	sy
 8008d48:	f3bf 8f4f 	dsb	sy
 8008d4c:	623b      	str	r3, [r7, #32]
 8008d4e:	bf00      	nop
 8008d50:	bf00      	nop
 8008d52:	e7fd      	b.n	8008d50 <xQueueGenericSendFromISR+0x8c>
 8008d54:	f001 ff18 	bl	800ab88 <vPortValidateInterruptPriority>
 8008d58:	f3ef 8211 	mrs	r2, BASEPRI
 8008d5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d60:	f383 8811 	msr	BASEPRI, r3
 8008d64:	f3bf 8f6f 	isb	sy
 8008d68:	f3bf 8f4f 	dsb	sy
 8008d6c:	61fa      	str	r2, [r7, #28]
 8008d6e:	61bb      	str	r3, [r7, #24]
 8008d70:	69fb      	ldr	r3, [r7, #28]
 8008d72:	637b      	str	r3, [r7, #52]	@ 0x34
 8008d74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d76:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8008d78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008d7c:	429a      	cmp	r2, r3
 8008d7e:	d302      	bcc.n	8008d86 <xQueueGenericSendFromISR+0xc2>
 8008d80:	683b      	ldr	r3, [r7, #0]
 8008d82:	2b02      	cmp	r3, #2
 8008d84:	d12f      	bne.n	8008de6 <xQueueGenericSendFromISR+0x122>
 8008d86:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d88:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008d8c:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8008d90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008d92:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008d94:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008d96:	683a      	ldr	r2, [r7, #0]
 8008d98:	68b9      	ldr	r1, [r7, #8]
 8008d9a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8008d9c:	f000 f912 	bl	8008fc4 <prvCopyDataToQueue>
 8008da0:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 8008da4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008da8:	d112      	bne.n	8008dd0 <xQueueGenericSendFromISR+0x10c>
 8008daa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008dac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d016      	beq.n	8008de0 <xQueueGenericSendFromISR+0x11c>
 8008db2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008db4:	3324      	adds	r3, #36	@ 0x24
 8008db6:	4618      	mov	r0, r3
 8008db8:	f000 fedc 	bl	8009b74 <xTaskRemoveFromEventList>
 8008dbc:	4603      	mov	r3, r0
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d00e      	beq.n	8008de0 <xQueueGenericSendFromISR+0x11c>
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	2b00      	cmp	r3, #0
 8008dc6:	d00b      	beq.n	8008de0 <xQueueGenericSendFromISR+0x11c>
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	2201      	movs	r2, #1
 8008dcc:	601a      	str	r2, [r3, #0]
 8008dce:	e007      	b.n	8008de0 <xQueueGenericSendFromISR+0x11c>
 8008dd0:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8008dd4:	3301      	adds	r3, #1
 8008dd6:	b2db      	uxtb	r3, r3
 8008dd8:	b25a      	sxtb	r2, r3
 8008dda:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008ddc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008de0:	2301      	movs	r3, #1
 8008de2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008de4:	e001      	b.n	8008dea <xQueueGenericSendFromISR+0x126>
 8008de6:	2300      	movs	r3, #0
 8008de8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008dea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008dec:	617b      	str	r3, [r7, #20]
 8008dee:	697b      	ldr	r3, [r7, #20]
 8008df0:	f383 8811 	msr	BASEPRI, r3
 8008df4:	bf00      	nop
 8008df6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008df8:	4618      	mov	r0, r3
 8008dfa:	3740      	adds	r7, #64	@ 0x40
 8008dfc:	46bd      	mov	sp, r7
 8008dfe:	bd80      	pop	{r7, pc}

08008e00 <xQueueReceive>:
 8008e00:	b580      	push	{r7, lr}
 8008e02:	b08c      	sub	sp, #48	@ 0x30
 8008e04:	af00      	add	r7, sp, #0
 8008e06:	60f8      	str	r0, [r7, #12]
 8008e08:	60b9      	str	r1, [r7, #8]
 8008e0a:	607a      	str	r2, [r7, #4]
 8008e0c:	2300      	movs	r3, #0
 8008e0e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008e10:	68fb      	ldr	r3, [r7, #12]
 8008e12:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008e14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e16:	2b00      	cmp	r3, #0
 8008e18:	d10b      	bne.n	8008e32 <xQueueReceive+0x32>
 8008e1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e1e:	f383 8811 	msr	BASEPRI, r3
 8008e22:	f3bf 8f6f 	isb	sy
 8008e26:	f3bf 8f4f 	dsb	sy
 8008e2a:	623b      	str	r3, [r7, #32]
 8008e2c:	bf00      	nop
 8008e2e:	bf00      	nop
 8008e30:	e7fd      	b.n	8008e2e <xQueueReceive+0x2e>
 8008e32:	68bb      	ldr	r3, [r7, #8]
 8008e34:	2b00      	cmp	r3, #0
 8008e36:	d103      	bne.n	8008e40 <xQueueReceive+0x40>
 8008e38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008e3c:	2b00      	cmp	r3, #0
 8008e3e:	d101      	bne.n	8008e44 <xQueueReceive+0x44>
 8008e40:	2301      	movs	r3, #1
 8008e42:	e000      	b.n	8008e46 <xQueueReceive+0x46>
 8008e44:	2300      	movs	r3, #0
 8008e46:	2b00      	cmp	r3, #0
 8008e48:	d10b      	bne.n	8008e62 <xQueueReceive+0x62>
 8008e4a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e4e:	f383 8811 	msr	BASEPRI, r3
 8008e52:	f3bf 8f6f 	isb	sy
 8008e56:	f3bf 8f4f 	dsb	sy
 8008e5a:	61fb      	str	r3, [r7, #28]
 8008e5c:	bf00      	nop
 8008e5e:	bf00      	nop
 8008e60:	e7fd      	b.n	8008e5e <xQueueReceive+0x5e>
 8008e62:	f001 f847 	bl	8009ef4 <xTaskGetSchedulerState>
 8008e66:	4603      	mov	r3, r0
 8008e68:	2b00      	cmp	r3, #0
 8008e6a:	d102      	bne.n	8008e72 <xQueueReceive+0x72>
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d101      	bne.n	8008e76 <xQueueReceive+0x76>
 8008e72:	2301      	movs	r3, #1
 8008e74:	e000      	b.n	8008e78 <xQueueReceive+0x78>
 8008e76:	2300      	movs	r3, #0
 8008e78:	2b00      	cmp	r3, #0
 8008e7a:	d10b      	bne.n	8008e94 <xQueueReceive+0x94>
 8008e7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e80:	f383 8811 	msr	BASEPRI, r3
 8008e84:	f3bf 8f6f 	isb	sy
 8008e88:	f3bf 8f4f 	dsb	sy
 8008e8c:	61bb      	str	r3, [r7, #24]
 8008e8e:	bf00      	nop
 8008e90:	bf00      	nop
 8008e92:	e7fd      	b.n	8008e90 <xQueueReceive+0x90>
 8008e94:	f001 fd98 	bl	800a9c8 <vPortEnterCritical>
 8008e98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e9a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008e9c:	627b      	str	r3, [r7, #36]	@ 0x24
 8008e9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ea0:	2b00      	cmp	r3, #0
 8008ea2:	d01f      	beq.n	8008ee4 <xQueueReceive+0xe4>
 8008ea4:	68b9      	ldr	r1, [r7, #8]
 8008ea6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008ea8:	f000 f8f6 	bl	8009098 <prvCopyDataFromQueue>
 8008eac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008eae:	1e5a      	subs	r2, r3, #1
 8008eb0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008eb2:	639a      	str	r2, [r3, #56]	@ 0x38
 8008eb4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008eb6:	691b      	ldr	r3, [r3, #16]
 8008eb8:	2b00      	cmp	r3, #0
 8008eba:	d00f      	beq.n	8008edc <xQueueReceive+0xdc>
 8008ebc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ebe:	3310      	adds	r3, #16
 8008ec0:	4618      	mov	r0, r3
 8008ec2:	f000 fe57 	bl	8009b74 <xTaskRemoveFromEventList>
 8008ec6:	4603      	mov	r3, r0
 8008ec8:	2b00      	cmp	r3, #0
 8008eca:	d007      	beq.n	8008edc <xQueueReceive+0xdc>
 8008ecc:	4b3c      	ldr	r3, [pc, #240]	@ (8008fc0 <xQueueReceive+0x1c0>)
 8008ece:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008ed2:	601a      	str	r2, [r3, #0]
 8008ed4:	f3bf 8f4f 	dsb	sy
 8008ed8:	f3bf 8f6f 	isb	sy
 8008edc:	f001 fda6 	bl	800aa2c <vPortExitCritical>
 8008ee0:	2301      	movs	r3, #1
 8008ee2:	e069      	b.n	8008fb8 <xQueueReceive+0x1b8>
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d103      	bne.n	8008ef2 <xQueueReceive+0xf2>
 8008eea:	f001 fd9f 	bl	800aa2c <vPortExitCritical>
 8008eee:	2300      	movs	r3, #0
 8008ef0:	e062      	b.n	8008fb8 <xQueueReceive+0x1b8>
 8008ef2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008ef4:	2b00      	cmp	r3, #0
 8008ef6:	d106      	bne.n	8008f06 <xQueueReceive+0x106>
 8008ef8:	f107 0310 	add.w	r3, r7, #16
 8008efc:	4618      	mov	r0, r3
 8008efe:	f000 fe9d 	bl	8009c3c <vTaskInternalSetTimeOutState>
 8008f02:	2301      	movs	r3, #1
 8008f04:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008f06:	f001 fd91 	bl	800aa2c <vPortExitCritical>
 8008f0a:	f000 fc0d 	bl	8009728 <vTaskSuspendAll>
 8008f0e:	f001 fd5b 	bl	800a9c8 <vPortEnterCritical>
 8008f12:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f14:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8008f18:	b25b      	sxtb	r3, r3
 8008f1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008f1e:	d103      	bne.n	8008f28 <xQueueReceive+0x128>
 8008f20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f22:	2200      	movs	r2, #0
 8008f24:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008f28:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f2a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8008f2e:	b25b      	sxtb	r3, r3
 8008f30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008f34:	d103      	bne.n	8008f3e <xQueueReceive+0x13e>
 8008f36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f38:	2200      	movs	r2, #0
 8008f3a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008f3e:	f001 fd75 	bl	800aa2c <vPortExitCritical>
 8008f42:	1d3a      	adds	r2, r7, #4
 8008f44:	f107 0310 	add.w	r3, r7, #16
 8008f48:	4611      	mov	r1, r2
 8008f4a:	4618      	mov	r0, r3
 8008f4c:	f000 fe8c 	bl	8009c68 <xTaskCheckForTimeOut>
 8008f50:	4603      	mov	r3, r0
 8008f52:	2b00      	cmp	r3, #0
 8008f54:	d123      	bne.n	8008f9e <xQueueReceive+0x19e>
 8008f56:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008f58:	f000 f916 	bl	8009188 <prvIsQueueEmpty>
 8008f5c:	4603      	mov	r3, r0
 8008f5e:	2b00      	cmp	r3, #0
 8008f60:	d017      	beq.n	8008f92 <xQueueReceive+0x192>
 8008f62:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f64:	3324      	adds	r3, #36	@ 0x24
 8008f66:	687a      	ldr	r2, [r7, #4]
 8008f68:	4611      	mov	r1, r2
 8008f6a:	4618      	mov	r0, r3
 8008f6c:	f000 fdb0 	bl	8009ad0 <vTaskPlaceOnEventList>
 8008f70:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008f72:	f000 f8b7 	bl	80090e4 <prvUnlockQueue>
 8008f76:	f000 fbe5 	bl	8009744 <xTaskResumeAll>
 8008f7a:	4603      	mov	r3, r0
 8008f7c:	2b00      	cmp	r3, #0
 8008f7e:	d189      	bne.n	8008e94 <xQueueReceive+0x94>
 8008f80:	4b0f      	ldr	r3, [pc, #60]	@ (8008fc0 <xQueueReceive+0x1c0>)
 8008f82:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008f86:	601a      	str	r2, [r3, #0]
 8008f88:	f3bf 8f4f 	dsb	sy
 8008f8c:	f3bf 8f6f 	isb	sy
 8008f90:	e780      	b.n	8008e94 <xQueueReceive+0x94>
 8008f92:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008f94:	f000 f8a6 	bl	80090e4 <prvUnlockQueue>
 8008f98:	f000 fbd4 	bl	8009744 <xTaskResumeAll>
 8008f9c:	e77a      	b.n	8008e94 <xQueueReceive+0x94>
 8008f9e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008fa0:	f000 f8a0 	bl	80090e4 <prvUnlockQueue>
 8008fa4:	f000 fbce 	bl	8009744 <xTaskResumeAll>
 8008fa8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8008faa:	f000 f8ed 	bl	8009188 <prvIsQueueEmpty>
 8008fae:	4603      	mov	r3, r0
 8008fb0:	2b00      	cmp	r3, #0
 8008fb2:	f43f af6f 	beq.w	8008e94 <xQueueReceive+0x94>
 8008fb6:	2300      	movs	r3, #0
 8008fb8:	4618      	mov	r0, r3
 8008fba:	3730      	adds	r7, #48	@ 0x30
 8008fbc:	46bd      	mov	sp, r7
 8008fbe:	bd80      	pop	{r7, pc}
 8008fc0:	e000ed04 	.word	0xe000ed04

08008fc4 <prvCopyDataToQueue>:
 8008fc4:	b580      	push	{r7, lr}
 8008fc6:	b086      	sub	sp, #24
 8008fc8:	af00      	add	r7, sp, #0
 8008fca:	60f8      	str	r0, [r7, #12]
 8008fcc:	60b9      	str	r1, [r7, #8]
 8008fce:	607a      	str	r2, [r7, #4]
 8008fd0:	2300      	movs	r3, #0
 8008fd2:	617b      	str	r3, [r7, #20]
 8008fd4:	68fb      	ldr	r3, [r7, #12]
 8008fd6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008fd8:	613b      	str	r3, [r7, #16]
 8008fda:	68fb      	ldr	r3, [r7, #12]
 8008fdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008fde:	2b00      	cmp	r3, #0
 8008fe0:	d10d      	bne.n	8008ffe <prvCopyDataToQueue+0x3a>
 8008fe2:	68fb      	ldr	r3, [r7, #12]
 8008fe4:	681b      	ldr	r3, [r3, #0]
 8008fe6:	2b00      	cmp	r3, #0
 8008fe8:	d14d      	bne.n	8009086 <prvCopyDataToQueue+0xc2>
 8008fea:	68fb      	ldr	r3, [r7, #12]
 8008fec:	689b      	ldr	r3, [r3, #8]
 8008fee:	4618      	mov	r0, r3
 8008ff0:	f000 ff9e 	bl	8009f30 <xTaskPriorityDisinherit>
 8008ff4:	6178      	str	r0, [r7, #20]
 8008ff6:	68fb      	ldr	r3, [r7, #12]
 8008ff8:	2200      	movs	r2, #0
 8008ffa:	609a      	str	r2, [r3, #8]
 8008ffc:	e043      	b.n	8009086 <prvCopyDataToQueue+0xc2>
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	2b00      	cmp	r3, #0
 8009002:	d119      	bne.n	8009038 <prvCopyDataToQueue+0x74>
 8009004:	68fb      	ldr	r3, [r7, #12]
 8009006:	6858      	ldr	r0, [r3, #4]
 8009008:	68fb      	ldr	r3, [r7, #12]
 800900a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800900c:	461a      	mov	r2, r3
 800900e:	68b9      	ldr	r1, [r7, #8]
 8009010:	f002 f816 	bl	800b040 <memcpy>
 8009014:	68fb      	ldr	r3, [r7, #12]
 8009016:	685a      	ldr	r2, [r3, #4]
 8009018:	68fb      	ldr	r3, [r7, #12]
 800901a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800901c:	441a      	add	r2, r3
 800901e:	68fb      	ldr	r3, [r7, #12]
 8009020:	605a      	str	r2, [r3, #4]
 8009022:	68fb      	ldr	r3, [r7, #12]
 8009024:	685a      	ldr	r2, [r3, #4]
 8009026:	68fb      	ldr	r3, [r7, #12]
 8009028:	689b      	ldr	r3, [r3, #8]
 800902a:	429a      	cmp	r2, r3
 800902c:	d32b      	bcc.n	8009086 <prvCopyDataToQueue+0xc2>
 800902e:	68fb      	ldr	r3, [r7, #12]
 8009030:	681a      	ldr	r2, [r3, #0]
 8009032:	68fb      	ldr	r3, [r7, #12]
 8009034:	605a      	str	r2, [r3, #4]
 8009036:	e026      	b.n	8009086 <prvCopyDataToQueue+0xc2>
 8009038:	68fb      	ldr	r3, [r7, #12]
 800903a:	68d8      	ldr	r0, [r3, #12]
 800903c:	68fb      	ldr	r3, [r7, #12]
 800903e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009040:	461a      	mov	r2, r3
 8009042:	68b9      	ldr	r1, [r7, #8]
 8009044:	f001 fffc 	bl	800b040 <memcpy>
 8009048:	68fb      	ldr	r3, [r7, #12]
 800904a:	68da      	ldr	r2, [r3, #12]
 800904c:	68fb      	ldr	r3, [r7, #12]
 800904e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009050:	425b      	negs	r3, r3
 8009052:	441a      	add	r2, r3
 8009054:	68fb      	ldr	r3, [r7, #12]
 8009056:	60da      	str	r2, [r3, #12]
 8009058:	68fb      	ldr	r3, [r7, #12]
 800905a:	68da      	ldr	r2, [r3, #12]
 800905c:	68fb      	ldr	r3, [r7, #12]
 800905e:	681b      	ldr	r3, [r3, #0]
 8009060:	429a      	cmp	r2, r3
 8009062:	d207      	bcs.n	8009074 <prvCopyDataToQueue+0xb0>
 8009064:	68fb      	ldr	r3, [r7, #12]
 8009066:	689a      	ldr	r2, [r3, #8]
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800906c:	425b      	negs	r3, r3
 800906e:	441a      	add	r2, r3
 8009070:	68fb      	ldr	r3, [r7, #12]
 8009072:	60da      	str	r2, [r3, #12]
 8009074:	687b      	ldr	r3, [r7, #4]
 8009076:	2b02      	cmp	r3, #2
 8009078:	d105      	bne.n	8009086 <prvCopyDataToQueue+0xc2>
 800907a:	693b      	ldr	r3, [r7, #16]
 800907c:	2b00      	cmp	r3, #0
 800907e:	d002      	beq.n	8009086 <prvCopyDataToQueue+0xc2>
 8009080:	693b      	ldr	r3, [r7, #16]
 8009082:	3b01      	subs	r3, #1
 8009084:	613b      	str	r3, [r7, #16]
 8009086:	693b      	ldr	r3, [r7, #16]
 8009088:	1c5a      	adds	r2, r3, #1
 800908a:	68fb      	ldr	r3, [r7, #12]
 800908c:	639a      	str	r2, [r3, #56]	@ 0x38
 800908e:	697b      	ldr	r3, [r7, #20]
 8009090:	4618      	mov	r0, r3
 8009092:	3718      	adds	r7, #24
 8009094:	46bd      	mov	sp, r7
 8009096:	bd80      	pop	{r7, pc}

08009098 <prvCopyDataFromQueue>:
 8009098:	b580      	push	{r7, lr}
 800909a:	b082      	sub	sp, #8
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	6039      	str	r1, [r7, #0]
 80090a2:	687b      	ldr	r3, [r7, #4]
 80090a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80090a6:	2b00      	cmp	r3, #0
 80090a8:	d018      	beq.n	80090dc <prvCopyDataFromQueue+0x44>
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	68da      	ldr	r2, [r3, #12]
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80090b2:	441a      	add	r2, r3
 80090b4:	687b      	ldr	r3, [r7, #4]
 80090b6:	60da      	str	r2, [r3, #12]
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	68da      	ldr	r2, [r3, #12]
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	689b      	ldr	r3, [r3, #8]
 80090c0:	429a      	cmp	r2, r3
 80090c2:	d303      	bcc.n	80090cc <prvCopyDataFromQueue+0x34>
 80090c4:	687b      	ldr	r3, [r7, #4]
 80090c6:	681a      	ldr	r2, [r3, #0]
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	60da      	str	r2, [r3, #12]
 80090cc:	687b      	ldr	r3, [r7, #4]
 80090ce:	68d9      	ldr	r1, [r3, #12]
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80090d4:	461a      	mov	r2, r3
 80090d6:	6838      	ldr	r0, [r7, #0]
 80090d8:	f001 ffb2 	bl	800b040 <memcpy>
 80090dc:	bf00      	nop
 80090de:	3708      	adds	r7, #8
 80090e0:	46bd      	mov	sp, r7
 80090e2:	bd80      	pop	{r7, pc}

080090e4 <prvUnlockQueue>:
 80090e4:	b580      	push	{r7, lr}
 80090e6:	b084      	sub	sp, #16
 80090e8:	af00      	add	r7, sp, #0
 80090ea:	6078      	str	r0, [r7, #4]
 80090ec:	f001 fc6c 	bl	800a9c8 <vPortEnterCritical>
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80090f6:	73fb      	strb	r3, [r7, #15]
 80090f8:	e011      	b.n	800911e <prvUnlockQueue+0x3a>
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80090fe:	2b00      	cmp	r3, #0
 8009100:	d012      	beq.n	8009128 <prvUnlockQueue+0x44>
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	3324      	adds	r3, #36	@ 0x24
 8009106:	4618      	mov	r0, r3
 8009108:	f000 fd34 	bl	8009b74 <xTaskRemoveFromEventList>
 800910c:	4603      	mov	r3, r0
 800910e:	2b00      	cmp	r3, #0
 8009110:	d001      	beq.n	8009116 <prvUnlockQueue+0x32>
 8009112:	f000 fe0d 	bl	8009d30 <vTaskMissedYield>
 8009116:	7bfb      	ldrb	r3, [r7, #15]
 8009118:	3b01      	subs	r3, #1
 800911a:	b2db      	uxtb	r3, r3
 800911c:	73fb      	strb	r3, [r7, #15]
 800911e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8009122:	2b00      	cmp	r3, #0
 8009124:	dce9      	bgt.n	80090fa <prvUnlockQueue+0x16>
 8009126:	e000      	b.n	800912a <prvUnlockQueue+0x46>
 8009128:	bf00      	nop
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	22ff      	movs	r2, #255	@ 0xff
 800912e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009132:	f001 fc7b 	bl	800aa2c <vPortExitCritical>
 8009136:	f001 fc47 	bl	800a9c8 <vPortEnterCritical>
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8009140:	73bb      	strb	r3, [r7, #14]
 8009142:	e011      	b.n	8009168 <prvUnlockQueue+0x84>
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	691b      	ldr	r3, [r3, #16]
 8009148:	2b00      	cmp	r3, #0
 800914a:	d012      	beq.n	8009172 <prvUnlockQueue+0x8e>
 800914c:	687b      	ldr	r3, [r7, #4]
 800914e:	3310      	adds	r3, #16
 8009150:	4618      	mov	r0, r3
 8009152:	f000 fd0f 	bl	8009b74 <xTaskRemoveFromEventList>
 8009156:	4603      	mov	r3, r0
 8009158:	2b00      	cmp	r3, #0
 800915a:	d001      	beq.n	8009160 <prvUnlockQueue+0x7c>
 800915c:	f000 fde8 	bl	8009d30 <vTaskMissedYield>
 8009160:	7bbb      	ldrb	r3, [r7, #14]
 8009162:	3b01      	subs	r3, #1
 8009164:	b2db      	uxtb	r3, r3
 8009166:	73bb      	strb	r3, [r7, #14]
 8009168:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800916c:	2b00      	cmp	r3, #0
 800916e:	dce9      	bgt.n	8009144 <prvUnlockQueue+0x60>
 8009170:	e000      	b.n	8009174 <prvUnlockQueue+0x90>
 8009172:	bf00      	nop
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	22ff      	movs	r2, #255	@ 0xff
 8009178:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800917c:	f001 fc56 	bl	800aa2c <vPortExitCritical>
 8009180:	bf00      	nop
 8009182:	3710      	adds	r7, #16
 8009184:	46bd      	mov	sp, r7
 8009186:	bd80      	pop	{r7, pc}

08009188 <prvIsQueueEmpty>:
 8009188:	b580      	push	{r7, lr}
 800918a:	b084      	sub	sp, #16
 800918c:	af00      	add	r7, sp, #0
 800918e:	6078      	str	r0, [r7, #4]
 8009190:	f001 fc1a 	bl	800a9c8 <vPortEnterCritical>
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009198:	2b00      	cmp	r3, #0
 800919a:	d102      	bne.n	80091a2 <prvIsQueueEmpty+0x1a>
 800919c:	2301      	movs	r3, #1
 800919e:	60fb      	str	r3, [r7, #12]
 80091a0:	e001      	b.n	80091a6 <prvIsQueueEmpty+0x1e>
 80091a2:	2300      	movs	r3, #0
 80091a4:	60fb      	str	r3, [r7, #12]
 80091a6:	f001 fc41 	bl	800aa2c <vPortExitCritical>
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	4618      	mov	r0, r3
 80091ae:	3710      	adds	r7, #16
 80091b0:	46bd      	mov	sp, r7
 80091b2:	bd80      	pop	{r7, pc}

080091b4 <prvIsQueueFull>:
 80091b4:	b580      	push	{r7, lr}
 80091b6:	b084      	sub	sp, #16
 80091b8:	af00      	add	r7, sp, #0
 80091ba:	6078      	str	r0, [r7, #4]
 80091bc:	f001 fc04 	bl	800a9c8 <vPortEnterCritical>
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80091c8:	429a      	cmp	r2, r3
 80091ca:	d102      	bne.n	80091d2 <prvIsQueueFull+0x1e>
 80091cc:	2301      	movs	r3, #1
 80091ce:	60fb      	str	r3, [r7, #12]
 80091d0:	e001      	b.n	80091d6 <prvIsQueueFull+0x22>
 80091d2:	2300      	movs	r3, #0
 80091d4:	60fb      	str	r3, [r7, #12]
 80091d6:	f001 fc29 	bl	800aa2c <vPortExitCritical>
 80091da:	68fb      	ldr	r3, [r7, #12]
 80091dc:	4618      	mov	r0, r3
 80091de:	3710      	adds	r7, #16
 80091e0:	46bd      	mov	sp, r7
 80091e2:	bd80      	pop	{r7, pc}

080091e4 <vQueueAddToRegistry>:
 80091e4:	b480      	push	{r7}
 80091e6:	b085      	sub	sp, #20
 80091e8:	af00      	add	r7, sp, #0
 80091ea:	6078      	str	r0, [r7, #4]
 80091ec:	6039      	str	r1, [r7, #0]
 80091ee:	2300      	movs	r3, #0
 80091f0:	60fb      	str	r3, [r7, #12]
 80091f2:	e014      	b.n	800921e <vQueueAddToRegistry+0x3a>
 80091f4:	4a0f      	ldr	r2, [pc, #60]	@ (8009234 <vQueueAddToRegistry+0x50>)
 80091f6:	68fb      	ldr	r3, [r7, #12]
 80091f8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80091fc:	2b00      	cmp	r3, #0
 80091fe:	d10b      	bne.n	8009218 <vQueueAddToRegistry+0x34>
 8009200:	490c      	ldr	r1, [pc, #48]	@ (8009234 <vQueueAddToRegistry+0x50>)
 8009202:	68fb      	ldr	r3, [r7, #12]
 8009204:	683a      	ldr	r2, [r7, #0]
 8009206:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800920a:	4a0a      	ldr	r2, [pc, #40]	@ (8009234 <vQueueAddToRegistry+0x50>)
 800920c:	68fb      	ldr	r3, [r7, #12]
 800920e:	00db      	lsls	r3, r3, #3
 8009210:	4413      	add	r3, r2
 8009212:	687a      	ldr	r2, [r7, #4]
 8009214:	605a      	str	r2, [r3, #4]
 8009216:	e006      	b.n	8009226 <vQueueAddToRegistry+0x42>
 8009218:	68fb      	ldr	r3, [r7, #12]
 800921a:	3301      	adds	r3, #1
 800921c:	60fb      	str	r3, [r7, #12]
 800921e:	68fb      	ldr	r3, [r7, #12]
 8009220:	2b07      	cmp	r3, #7
 8009222:	d9e7      	bls.n	80091f4 <vQueueAddToRegistry+0x10>
 8009224:	bf00      	nop
 8009226:	bf00      	nop
 8009228:	3714      	adds	r7, #20
 800922a:	46bd      	mov	sp, r7
 800922c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009230:	4770      	bx	lr
 8009232:	bf00      	nop
 8009234:	24000ac0 	.word	0x24000ac0

08009238 <vQueueWaitForMessageRestricted>:
 8009238:	b580      	push	{r7, lr}
 800923a:	b086      	sub	sp, #24
 800923c:	af00      	add	r7, sp, #0
 800923e:	60f8      	str	r0, [r7, #12]
 8009240:	60b9      	str	r1, [r7, #8]
 8009242:	607a      	str	r2, [r7, #4]
 8009244:	68fb      	ldr	r3, [r7, #12]
 8009246:	617b      	str	r3, [r7, #20]
 8009248:	f001 fbbe 	bl	800a9c8 <vPortEnterCritical>
 800924c:	697b      	ldr	r3, [r7, #20]
 800924e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8009252:	b25b      	sxtb	r3, r3
 8009254:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009258:	d103      	bne.n	8009262 <vQueueWaitForMessageRestricted+0x2a>
 800925a:	697b      	ldr	r3, [r7, #20]
 800925c:	2200      	movs	r2, #0
 800925e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009262:	697b      	ldr	r3, [r7, #20]
 8009264:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8009268:	b25b      	sxtb	r3, r3
 800926a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800926e:	d103      	bne.n	8009278 <vQueueWaitForMessageRestricted+0x40>
 8009270:	697b      	ldr	r3, [r7, #20]
 8009272:	2200      	movs	r2, #0
 8009274:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009278:	f001 fbd8 	bl	800aa2c <vPortExitCritical>
 800927c:	697b      	ldr	r3, [r7, #20]
 800927e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009280:	2b00      	cmp	r3, #0
 8009282:	d106      	bne.n	8009292 <vQueueWaitForMessageRestricted+0x5a>
 8009284:	697b      	ldr	r3, [r7, #20]
 8009286:	3324      	adds	r3, #36	@ 0x24
 8009288:	687a      	ldr	r2, [r7, #4]
 800928a:	68b9      	ldr	r1, [r7, #8]
 800928c:	4618      	mov	r0, r3
 800928e:	f000 fc45 	bl	8009b1c <vTaskPlaceOnEventListRestricted>
 8009292:	6978      	ldr	r0, [r7, #20]
 8009294:	f7ff ff26 	bl	80090e4 <prvUnlockQueue>
 8009298:	bf00      	nop
 800929a:	3718      	adds	r7, #24
 800929c:	46bd      	mov	sp, r7
 800929e:	bd80      	pop	{r7, pc}

080092a0 <xTaskCreateStatic>:
 80092a0:	b580      	push	{r7, lr}
 80092a2:	b08e      	sub	sp, #56	@ 0x38
 80092a4:	af04      	add	r7, sp, #16
 80092a6:	60f8      	str	r0, [r7, #12]
 80092a8:	60b9      	str	r1, [r7, #8]
 80092aa:	607a      	str	r2, [r7, #4]
 80092ac:	603b      	str	r3, [r7, #0]
 80092ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80092b0:	2b00      	cmp	r3, #0
 80092b2:	d10b      	bne.n	80092cc <xTaskCreateStatic+0x2c>
 80092b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092b8:	f383 8811 	msr	BASEPRI, r3
 80092bc:	f3bf 8f6f 	isb	sy
 80092c0:	f3bf 8f4f 	dsb	sy
 80092c4:	623b      	str	r3, [r7, #32]
 80092c6:	bf00      	nop
 80092c8:	bf00      	nop
 80092ca:	e7fd      	b.n	80092c8 <xTaskCreateStatic+0x28>
 80092cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80092ce:	2b00      	cmp	r3, #0
 80092d0:	d10b      	bne.n	80092ea <xTaskCreateStatic+0x4a>
 80092d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092d6:	f383 8811 	msr	BASEPRI, r3
 80092da:	f3bf 8f6f 	isb	sy
 80092de:	f3bf 8f4f 	dsb	sy
 80092e2:	61fb      	str	r3, [r7, #28]
 80092e4:	bf00      	nop
 80092e6:	bf00      	nop
 80092e8:	e7fd      	b.n	80092e6 <xTaskCreateStatic+0x46>
 80092ea:	235c      	movs	r3, #92	@ 0x5c
 80092ec:	613b      	str	r3, [r7, #16]
 80092ee:	693b      	ldr	r3, [r7, #16]
 80092f0:	2b5c      	cmp	r3, #92	@ 0x5c
 80092f2:	d00b      	beq.n	800930c <xTaskCreateStatic+0x6c>
 80092f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80092f8:	f383 8811 	msr	BASEPRI, r3
 80092fc:	f3bf 8f6f 	isb	sy
 8009300:	f3bf 8f4f 	dsb	sy
 8009304:	61bb      	str	r3, [r7, #24]
 8009306:	bf00      	nop
 8009308:	bf00      	nop
 800930a:	e7fd      	b.n	8009308 <xTaskCreateStatic+0x68>
 800930c:	693b      	ldr	r3, [r7, #16]
 800930e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009310:	2b00      	cmp	r3, #0
 8009312:	d01e      	beq.n	8009352 <xTaskCreateStatic+0xb2>
 8009314:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009316:	2b00      	cmp	r3, #0
 8009318:	d01b      	beq.n	8009352 <xTaskCreateStatic+0xb2>
 800931a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800931c:	627b      	str	r3, [r7, #36]	@ 0x24
 800931e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009320:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009322:	631a      	str	r2, [r3, #48]	@ 0x30
 8009324:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009326:	2202      	movs	r2, #2
 8009328:	f883 2059 	strb.w	r2, [r3, #89]	@ 0x59
 800932c:	2300      	movs	r3, #0
 800932e:	9303      	str	r3, [sp, #12]
 8009330:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009332:	9302      	str	r3, [sp, #8]
 8009334:	f107 0314 	add.w	r3, r7, #20
 8009338:	9301      	str	r3, [sp, #4]
 800933a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800933c:	9300      	str	r3, [sp, #0]
 800933e:	683b      	ldr	r3, [r7, #0]
 8009340:	687a      	ldr	r2, [r7, #4]
 8009342:	68b9      	ldr	r1, [r7, #8]
 8009344:	68f8      	ldr	r0, [r7, #12]
 8009346:	f000 f850 	bl	80093ea <prvInitialiseNewTask>
 800934a:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800934c:	f000 f8de 	bl	800950c <prvAddNewTaskToReadyList>
 8009350:	e001      	b.n	8009356 <xTaskCreateStatic+0xb6>
 8009352:	2300      	movs	r3, #0
 8009354:	617b      	str	r3, [r7, #20]
 8009356:	697b      	ldr	r3, [r7, #20]
 8009358:	4618      	mov	r0, r3
 800935a:	3728      	adds	r7, #40	@ 0x28
 800935c:	46bd      	mov	sp, r7
 800935e:	bd80      	pop	{r7, pc}

08009360 <xTaskCreate>:
 8009360:	b580      	push	{r7, lr}
 8009362:	b08c      	sub	sp, #48	@ 0x30
 8009364:	af04      	add	r7, sp, #16
 8009366:	60f8      	str	r0, [r7, #12]
 8009368:	60b9      	str	r1, [r7, #8]
 800936a:	603b      	str	r3, [r7, #0]
 800936c:	4613      	mov	r3, r2
 800936e:	80fb      	strh	r3, [r7, #6]
 8009370:	88fb      	ldrh	r3, [r7, #6]
 8009372:	009b      	lsls	r3, r3, #2
 8009374:	4618      	mov	r0, r3
 8009376:	f001 fc49 	bl	800ac0c <pvPortMalloc>
 800937a:	6178      	str	r0, [r7, #20]
 800937c:	697b      	ldr	r3, [r7, #20]
 800937e:	2b00      	cmp	r3, #0
 8009380:	d00e      	beq.n	80093a0 <xTaskCreate+0x40>
 8009382:	205c      	movs	r0, #92	@ 0x5c
 8009384:	f001 fc42 	bl	800ac0c <pvPortMalloc>
 8009388:	61f8      	str	r0, [r7, #28]
 800938a:	69fb      	ldr	r3, [r7, #28]
 800938c:	2b00      	cmp	r3, #0
 800938e:	d003      	beq.n	8009398 <xTaskCreate+0x38>
 8009390:	69fb      	ldr	r3, [r7, #28]
 8009392:	697a      	ldr	r2, [r7, #20]
 8009394:	631a      	str	r2, [r3, #48]	@ 0x30
 8009396:	e005      	b.n	80093a4 <xTaskCreate+0x44>
 8009398:	6978      	ldr	r0, [r7, #20]
 800939a:	f001 fd05 	bl	800ada8 <vPortFree>
 800939e:	e001      	b.n	80093a4 <xTaskCreate+0x44>
 80093a0:	2300      	movs	r3, #0
 80093a2:	61fb      	str	r3, [r7, #28]
 80093a4:	69fb      	ldr	r3, [r7, #28]
 80093a6:	2b00      	cmp	r3, #0
 80093a8:	d017      	beq.n	80093da <xTaskCreate+0x7a>
 80093aa:	69fb      	ldr	r3, [r7, #28]
 80093ac:	2200      	movs	r2, #0
 80093ae:	f883 2059 	strb.w	r2, [r3, #89]	@ 0x59
 80093b2:	88fa      	ldrh	r2, [r7, #6]
 80093b4:	2300      	movs	r3, #0
 80093b6:	9303      	str	r3, [sp, #12]
 80093b8:	69fb      	ldr	r3, [r7, #28]
 80093ba:	9302      	str	r3, [sp, #8]
 80093bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80093be:	9301      	str	r3, [sp, #4]
 80093c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093c2:	9300      	str	r3, [sp, #0]
 80093c4:	683b      	ldr	r3, [r7, #0]
 80093c6:	68b9      	ldr	r1, [r7, #8]
 80093c8:	68f8      	ldr	r0, [r7, #12]
 80093ca:	f000 f80e 	bl	80093ea <prvInitialiseNewTask>
 80093ce:	69f8      	ldr	r0, [r7, #28]
 80093d0:	f000 f89c 	bl	800950c <prvAddNewTaskToReadyList>
 80093d4:	2301      	movs	r3, #1
 80093d6:	61bb      	str	r3, [r7, #24]
 80093d8:	e002      	b.n	80093e0 <xTaskCreate+0x80>
 80093da:	f04f 33ff 	mov.w	r3, #4294967295
 80093de:	61bb      	str	r3, [r7, #24]
 80093e0:	69bb      	ldr	r3, [r7, #24]
 80093e2:	4618      	mov	r0, r3
 80093e4:	3720      	adds	r7, #32
 80093e6:	46bd      	mov	sp, r7
 80093e8:	bd80      	pop	{r7, pc}

080093ea <prvInitialiseNewTask>:
 80093ea:	b580      	push	{r7, lr}
 80093ec:	b088      	sub	sp, #32
 80093ee:	af00      	add	r7, sp, #0
 80093f0:	60f8      	str	r0, [r7, #12]
 80093f2:	60b9      	str	r1, [r7, #8]
 80093f4:	607a      	str	r2, [r7, #4]
 80093f6:	603b      	str	r3, [r7, #0]
 80093f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80093fa:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	009b      	lsls	r3, r3, #2
 8009400:	461a      	mov	r2, r3
 8009402:	21a5      	movs	r1, #165	@ 0xa5
 8009404:	f001 fdf0 	bl	800afe8 <memset>
 8009408:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800940a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800940c:	6879      	ldr	r1, [r7, #4]
 800940e:	f06f 4340 	mvn.w	r3, #3221225472	@ 0xc0000000
 8009412:	440b      	add	r3, r1
 8009414:	009b      	lsls	r3, r3, #2
 8009416:	4413      	add	r3, r2
 8009418:	61bb      	str	r3, [r7, #24]
 800941a:	69bb      	ldr	r3, [r7, #24]
 800941c:	f023 0307 	bic.w	r3, r3, #7
 8009420:	61bb      	str	r3, [r7, #24]
 8009422:	69bb      	ldr	r3, [r7, #24]
 8009424:	f003 0307 	and.w	r3, r3, #7
 8009428:	2b00      	cmp	r3, #0
 800942a:	d00b      	beq.n	8009444 <prvInitialiseNewTask+0x5a>
 800942c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009430:	f383 8811 	msr	BASEPRI, r3
 8009434:	f3bf 8f6f 	isb	sy
 8009438:	f3bf 8f4f 	dsb	sy
 800943c:	617b      	str	r3, [r7, #20]
 800943e:	bf00      	nop
 8009440:	bf00      	nop
 8009442:	e7fd      	b.n	8009440 <prvInitialiseNewTask+0x56>
 8009444:	68bb      	ldr	r3, [r7, #8]
 8009446:	2b00      	cmp	r3, #0
 8009448:	d01f      	beq.n	800948a <prvInitialiseNewTask+0xa0>
 800944a:	2300      	movs	r3, #0
 800944c:	61fb      	str	r3, [r7, #28]
 800944e:	e012      	b.n	8009476 <prvInitialiseNewTask+0x8c>
 8009450:	68ba      	ldr	r2, [r7, #8]
 8009452:	69fb      	ldr	r3, [r7, #28]
 8009454:	4413      	add	r3, r2
 8009456:	7819      	ldrb	r1, [r3, #0]
 8009458:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800945a:	69fb      	ldr	r3, [r7, #28]
 800945c:	4413      	add	r3, r2
 800945e:	3334      	adds	r3, #52	@ 0x34
 8009460:	460a      	mov	r2, r1
 8009462:	701a      	strb	r2, [r3, #0]
 8009464:	68ba      	ldr	r2, [r7, #8]
 8009466:	69fb      	ldr	r3, [r7, #28]
 8009468:	4413      	add	r3, r2
 800946a:	781b      	ldrb	r3, [r3, #0]
 800946c:	2b00      	cmp	r3, #0
 800946e:	d006      	beq.n	800947e <prvInitialiseNewTask+0x94>
 8009470:	69fb      	ldr	r3, [r7, #28]
 8009472:	3301      	adds	r3, #1
 8009474:	61fb      	str	r3, [r7, #28]
 8009476:	69fb      	ldr	r3, [r7, #28]
 8009478:	2b0f      	cmp	r3, #15
 800947a:	d9e9      	bls.n	8009450 <prvInitialiseNewTask+0x66>
 800947c:	e000      	b.n	8009480 <prvInitialiseNewTask+0x96>
 800947e:	bf00      	nop
 8009480:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009482:	2200      	movs	r2, #0
 8009484:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8009488:	e003      	b.n	8009492 <prvInitialiseNewTask+0xa8>
 800948a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800948c:	2200      	movs	r2, #0
 800948e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8009492:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009494:	2b37      	cmp	r3, #55	@ 0x37
 8009496:	d901      	bls.n	800949c <prvInitialiseNewTask+0xb2>
 8009498:	2337      	movs	r3, #55	@ 0x37
 800949a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800949c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800949e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80094a0:	62da      	str	r2, [r3, #44]	@ 0x2c
 80094a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094a4:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80094a6:	64da      	str	r2, [r3, #76]	@ 0x4c
 80094a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094aa:	2200      	movs	r2, #0
 80094ac:	651a      	str	r2, [r3, #80]	@ 0x50
 80094ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094b0:	3304      	adds	r3, #4
 80094b2:	4618      	mov	r0, r3
 80094b4:	f7ff f966 	bl	8008784 <vListInitialiseItem>
 80094b8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094ba:	3318      	adds	r3, #24
 80094bc:	4618      	mov	r0, r3
 80094be:	f7ff f961 	bl	8008784 <vListInitialiseItem>
 80094c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80094c6:	611a      	str	r2, [r3, #16]
 80094c8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80094ca:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80094ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094d0:	619a      	str	r2, [r3, #24]
 80094d2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094d4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80094d6:	625a      	str	r2, [r3, #36]	@ 0x24
 80094d8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094da:	2200      	movs	r2, #0
 80094dc:	655a      	str	r2, [r3, #84]	@ 0x54
 80094de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094e0:	2200      	movs	r2, #0
 80094e2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
 80094e6:	683a      	ldr	r2, [r7, #0]
 80094e8:	68f9      	ldr	r1, [r7, #12]
 80094ea:	69b8      	ldr	r0, [r7, #24]
 80094ec:	f001 f93e 	bl	800a76c <pxPortInitialiseStack>
 80094f0:	4602      	mov	r2, r0
 80094f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094f4:	601a      	str	r2, [r3, #0]
 80094f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80094f8:	2b00      	cmp	r3, #0
 80094fa:	d002      	beq.n	8009502 <prvInitialiseNewTask+0x118>
 80094fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80094fe:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009500:	601a      	str	r2, [r3, #0]
 8009502:	bf00      	nop
 8009504:	3720      	adds	r7, #32
 8009506:	46bd      	mov	sp, r7
 8009508:	bd80      	pop	{r7, pc}
	...

0800950c <prvAddNewTaskToReadyList>:
 800950c:	b580      	push	{r7, lr}
 800950e:	b082      	sub	sp, #8
 8009510:	af00      	add	r7, sp, #0
 8009512:	6078      	str	r0, [r7, #4]
 8009514:	f001 fa58 	bl	800a9c8 <vPortEnterCritical>
 8009518:	4b2d      	ldr	r3, [pc, #180]	@ (80095d0 <prvAddNewTaskToReadyList+0xc4>)
 800951a:	681b      	ldr	r3, [r3, #0]
 800951c:	3301      	adds	r3, #1
 800951e:	4a2c      	ldr	r2, [pc, #176]	@ (80095d0 <prvAddNewTaskToReadyList+0xc4>)
 8009520:	6013      	str	r3, [r2, #0]
 8009522:	4b2c      	ldr	r3, [pc, #176]	@ (80095d4 <prvAddNewTaskToReadyList+0xc8>)
 8009524:	681b      	ldr	r3, [r3, #0]
 8009526:	2b00      	cmp	r3, #0
 8009528:	d109      	bne.n	800953e <prvAddNewTaskToReadyList+0x32>
 800952a:	4a2a      	ldr	r2, [pc, #168]	@ (80095d4 <prvAddNewTaskToReadyList+0xc8>)
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	6013      	str	r3, [r2, #0]
 8009530:	4b27      	ldr	r3, [pc, #156]	@ (80095d0 <prvAddNewTaskToReadyList+0xc4>)
 8009532:	681b      	ldr	r3, [r3, #0]
 8009534:	2b01      	cmp	r3, #1
 8009536:	d110      	bne.n	800955a <prvAddNewTaskToReadyList+0x4e>
 8009538:	f000 fc1e 	bl	8009d78 <prvInitialiseTaskLists>
 800953c:	e00d      	b.n	800955a <prvAddNewTaskToReadyList+0x4e>
 800953e:	4b26      	ldr	r3, [pc, #152]	@ (80095d8 <prvAddNewTaskToReadyList+0xcc>)
 8009540:	681b      	ldr	r3, [r3, #0]
 8009542:	2b00      	cmp	r3, #0
 8009544:	d109      	bne.n	800955a <prvAddNewTaskToReadyList+0x4e>
 8009546:	4b23      	ldr	r3, [pc, #140]	@ (80095d4 <prvAddNewTaskToReadyList+0xc8>)
 8009548:	681b      	ldr	r3, [r3, #0]
 800954a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009550:	429a      	cmp	r2, r3
 8009552:	d802      	bhi.n	800955a <prvAddNewTaskToReadyList+0x4e>
 8009554:	4a1f      	ldr	r2, [pc, #124]	@ (80095d4 <prvAddNewTaskToReadyList+0xc8>)
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	6013      	str	r3, [r2, #0]
 800955a:	4b20      	ldr	r3, [pc, #128]	@ (80095dc <prvAddNewTaskToReadyList+0xd0>)
 800955c:	681b      	ldr	r3, [r3, #0]
 800955e:	3301      	adds	r3, #1
 8009560:	4a1e      	ldr	r2, [pc, #120]	@ (80095dc <prvAddNewTaskToReadyList+0xd0>)
 8009562:	6013      	str	r3, [r2, #0]
 8009564:	4b1d      	ldr	r3, [pc, #116]	@ (80095dc <prvAddNewTaskToReadyList+0xd0>)
 8009566:	681a      	ldr	r2, [r3, #0]
 8009568:	687b      	ldr	r3, [r7, #4]
 800956a:	645a      	str	r2, [r3, #68]	@ 0x44
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009570:	4b1b      	ldr	r3, [pc, #108]	@ (80095e0 <prvAddNewTaskToReadyList+0xd4>)
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	429a      	cmp	r2, r3
 8009576:	d903      	bls.n	8009580 <prvAddNewTaskToReadyList+0x74>
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800957c:	4a18      	ldr	r2, [pc, #96]	@ (80095e0 <prvAddNewTaskToReadyList+0xd4>)
 800957e:	6013      	str	r3, [r2, #0]
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009584:	4613      	mov	r3, r2
 8009586:	009b      	lsls	r3, r3, #2
 8009588:	4413      	add	r3, r2
 800958a:	009b      	lsls	r3, r3, #2
 800958c:	4a15      	ldr	r2, [pc, #84]	@ (80095e4 <prvAddNewTaskToReadyList+0xd8>)
 800958e:	441a      	add	r2, r3
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	3304      	adds	r3, #4
 8009594:	4619      	mov	r1, r3
 8009596:	4610      	mov	r0, r2
 8009598:	f7ff f901 	bl	800879e <vListInsertEnd>
 800959c:	f001 fa46 	bl	800aa2c <vPortExitCritical>
 80095a0:	4b0d      	ldr	r3, [pc, #52]	@ (80095d8 <prvAddNewTaskToReadyList+0xcc>)
 80095a2:	681b      	ldr	r3, [r3, #0]
 80095a4:	2b00      	cmp	r3, #0
 80095a6:	d00e      	beq.n	80095c6 <prvAddNewTaskToReadyList+0xba>
 80095a8:	4b0a      	ldr	r3, [pc, #40]	@ (80095d4 <prvAddNewTaskToReadyList+0xc8>)
 80095aa:	681b      	ldr	r3, [r3, #0]
 80095ac:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80095b2:	429a      	cmp	r2, r3
 80095b4:	d207      	bcs.n	80095c6 <prvAddNewTaskToReadyList+0xba>
 80095b6:	4b0c      	ldr	r3, [pc, #48]	@ (80095e8 <prvAddNewTaskToReadyList+0xdc>)
 80095b8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80095bc:	601a      	str	r2, [r3, #0]
 80095be:	f3bf 8f4f 	dsb	sy
 80095c2:	f3bf 8f6f 	isb	sy
 80095c6:	bf00      	nop
 80095c8:	3708      	adds	r7, #8
 80095ca:	46bd      	mov	sp, r7
 80095cc:	bd80      	pop	{r7, pc}
 80095ce:	bf00      	nop
 80095d0:	24000fd4 	.word	0x24000fd4
 80095d4:	24000b00 	.word	0x24000b00
 80095d8:	24000fe0 	.word	0x24000fe0
 80095dc:	24000ff0 	.word	0x24000ff0
 80095e0:	24000fdc 	.word	0x24000fdc
 80095e4:	24000b04 	.word	0x24000b04
 80095e8:	e000ed04 	.word	0xe000ed04

080095ec <vTaskDelay>:
 80095ec:	b580      	push	{r7, lr}
 80095ee:	b084      	sub	sp, #16
 80095f0:	af00      	add	r7, sp, #0
 80095f2:	6078      	str	r0, [r7, #4]
 80095f4:	2300      	movs	r3, #0
 80095f6:	60fb      	str	r3, [r7, #12]
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	2b00      	cmp	r3, #0
 80095fc:	d018      	beq.n	8009630 <vTaskDelay+0x44>
 80095fe:	4b14      	ldr	r3, [pc, #80]	@ (8009650 <vTaskDelay+0x64>)
 8009600:	681b      	ldr	r3, [r3, #0]
 8009602:	2b00      	cmp	r3, #0
 8009604:	d00b      	beq.n	800961e <vTaskDelay+0x32>
 8009606:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800960a:	f383 8811 	msr	BASEPRI, r3
 800960e:	f3bf 8f6f 	isb	sy
 8009612:	f3bf 8f4f 	dsb	sy
 8009616:	60bb      	str	r3, [r7, #8]
 8009618:	bf00      	nop
 800961a:	bf00      	nop
 800961c:	e7fd      	b.n	800961a <vTaskDelay+0x2e>
 800961e:	f000 f883 	bl	8009728 <vTaskSuspendAll>
 8009622:	2100      	movs	r1, #0
 8009624:	6878      	ldr	r0, [r7, #4]
 8009626:	f000 fcf3 	bl	800a010 <prvAddCurrentTaskToDelayedList>
 800962a:	f000 f88b 	bl	8009744 <xTaskResumeAll>
 800962e:	60f8      	str	r0, [r7, #12]
 8009630:	68fb      	ldr	r3, [r7, #12]
 8009632:	2b00      	cmp	r3, #0
 8009634:	d107      	bne.n	8009646 <vTaskDelay+0x5a>
 8009636:	4b07      	ldr	r3, [pc, #28]	@ (8009654 <vTaskDelay+0x68>)
 8009638:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800963c:	601a      	str	r2, [r3, #0]
 800963e:	f3bf 8f4f 	dsb	sy
 8009642:	f3bf 8f6f 	isb	sy
 8009646:	bf00      	nop
 8009648:	3710      	adds	r7, #16
 800964a:	46bd      	mov	sp, r7
 800964c:	bd80      	pop	{r7, pc}
 800964e:	bf00      	nop
 8009650:	24000ffc 	.word	0x24000ffc
 8009654:	e000ed04 	.word	0xe000ed04

08009658 <vTaskStartScheduler>:
 8009658:	b580      	push	{r7, lr}
 800965a:	b08a      	sub	sp, #40	@ 0x28
 800965c:	af04      	add	r7, sp, #16
 800965e:	2300      	movs	r3, #0
 8009660:	60bb      	str	r3, [r7, #8]
 8009662:	2300      	movs	r3, #0
 8009664:	607b      	str	r3, [r7, #4]
 8009666:	463a      	mov	r2, r7
 8009668:	1d39      	adds	r1, r7, #4
 800966a:	f107 0308 	add.w	r3, r7, #8
 800966e:	4618      	mov	r0, r3
 8009670:	f7ff f834 	bl	80086dc <vApplicationGetIdleTaskMemory>
 8009674:	6839      	ldr	r1, [r7, #0]
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	68ba      	ldr	r2, [r7, #8]
 800967a:	9202      	str	r2, [sp, #8]
 800967c:	9301      	str	r3, [sp, #4]
 800967e:	2300      	movs	r3, #0
 8009680:	9300      	str	r3, [sp, #0]
 8009682:	2300      	movs	r3, #0
 8009684:	460a      	mov	r2, r1
 8009686:	4922      	ldr	r1, [pc, #136]	@ (8009710 <vTaskStartScheduler+0xb8>)
 8009688:	4822      	ldr	r0, [pc, #136]	@ (8009714 <vTaskStartScheduler+0xbc>)
 800968a:	f7ff fe09 	bl	80092a0 <xTaskCreateStatic>
 800968e:	4603      	mov	r3, r0
 8009690:	4a21      	ldr	r2, [pc, #132]	@ (8009718 <vTaskStartScheduler+0xc0>)
 8009692:	6013      	str	r3, [r2, #0]
 8009694:	4b20      	ldr	r3, [pc, #128]	@ (8009718 <vTaskStartScheduler+0xc0>)
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	2b00      	cmp	r3, #0
 800969a:	d002      	beq.n	80096a2 <vTaskStartScheduler+0x4a>
 800969c:	2301      	movs	r3, #1
 800969e:	617b      	str	r3, [r7, #20]
 80096a0:	e001      	b.n	80096a6 <vTaskStartScheduler+0x4e>
 80096a2:	2300      	movs	r3, #0
 80096a4:	617b      	str	r3, [r7, #20]
 80096a6:	697b      	ldr	r3, [r7, #20]
 80096a8:	2b01      	cmp	r3, #1
 80096aa:	d102      	bne.n	80096b2 <vTaskStartScheduler+0x5a>
 80096ac:	f000 fd04 	bl	800a0b8 <xTimerCreateTimerTask>
 80096b0:	6178      	str	r0, [r7, #20]
 80096b2:	697b      	ldr	r3, [r7, #20]
 80096b4:	2b01      	cmp	r3, #1
 80096b6:	d116      	bne.n	80096e6 <vTaskStartScheduler+0x8e>
 80096b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096bc:	f383 8811 	msr	BASEPRI, r3
 80096c0:	f3bf 8f6f 	isb	sy
 80096c4:	f3bf 8f4f 	dsb	sy
 80096c8:	613b      	str	r3, [r7, #16]
 80096ca:	bf00      	nop
 80096cc:	4b13      	ldr	r3, [pc, #76]	@ (800971c <vTaskStartScheduler+0xc4>)
 80096ce:	f04f 32ff 	mov.w	r2, #4294967295
 80096d2:	601a      	str	r2, [r3, #0]
 80096d4:	4b12      	ldr	r3, [pc, #72]	@ (8009720 <vTaskStartScheduler+0xc8>)
 80096d6:	2201      	movs	r2, #1
 80096d8:	601a      	str	r2, [r3, #0]
 80096da:	4b12      	ldr	r3, [pc, #72]	@ (8009724 <vTaskStartScheduler+0xcc>)
 80096dc:	2200      	movs	r2, #0
 80096de:	601a      	str	r2, [r3, #0]
 80096e0:	f001 f8ce 	bl	800a880 <xPortStartScheduler>
 80096e4:	e00f      	b.n	8009706 <vTaskStartScheduler+0xae>
 80096e6:	697b      	ldr	r3, [r7, #20]
 80096e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80096ec:	d10b      	bne.n	8009706 <vTaskStartScheduler+0xae>
 80096ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80096f2:	f383 8811 	msr	BASEPRI, r3
 80096f6:	f3bf 8f6f 	isb	sy
 80096fa:	f3bf 8f4f 	dsb	sy
 80096fe:	60fb      	str	r3, [r7, #12]
 8009700:	bf00      	nop
 8009702:	bf00      	nop
 8009704:	e7fd      	b.n	8009702 <vTaskStartScheduler+0xaa>
 8009706:	bf00      	nop
 8009708:	3718      	adds	r7, #24
 800970a:	46bd      	mov	sp, r7
 800970c:	bd80      	pop	{r7, pc}
 800970e:	bf00      	nop
 8009710:	0800b0a4 	.word	0x0800b0a4
 8009714:	08009d49 	.word	0x08009d49
 8009718:	24000ff8 	.word	0x24000ff8
 800971c:	24000ff4 	.word	0x24000ff4
 8009720:	24000fe0 	.word	0x24000fe0
 8009724:	24000fd8 	.word	0x24000fd8

08009728 <vTaskSuspendAll>:
 8009728:	b480      	push	{r7}
 800972a:	af00      	add	r7, sp, #0
 800972c:	4b04      	ldr	r3, [pc, #16]	@ (8009740 <vTaskSuspendAll+0x18>)
 800972e:	681b      	ldr	r3, [r3, #0]
 8009730:	3301      	adds	r3, #1
 8009732:	4a03      	ldr	r2, [pc, #12]	@ (8009740 <vTaskSuspendAll+0x18>)
 8009734:	6013      	str	r3, [r2, #0]
 8009736:	bf00      	nop
 8009738:	46bd      	mov	sp, r7
 800973a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800973e:	4770      	bx	lr
 8009740:	24000ffc 	.word	0x24000ffc

08009744 <xTaskResumeAll>:
 8009744:	b580      	push	{r7, lr}
 8009746:	b084      	sub	sp, #16
 8009748:	af00      	add	r7, sp, #0
 800974a:	2300      	movs	r3, #0
 800974c:	60fb      	str	r3, [r7, #12]
 800974e:	2300      	movs	r3, #0
 8009750:	60bb      	str	r3, [r7, #8]
 8009752:	4b42      	ldr	r3, [pc, #264]	@ (800985c <xTaskResumeAll+0x118>)
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	2b00      	cmp	r3, #0
 8009758:	d10b      	bne.n	8009772 <xTaskResumeAll+0x2e>
 800975a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800975e:	f383 8811 	msr	BASEPRI, r3
 8009762:	f3bf 8f6f 	isb	sy
 8009766:	f3bf 8f4f 	dsb	sy
 800976a:	603b      	str	r3, [r7, #0]
 800976c:	bf00      	nop
 800976e:	bf00      	nop
 8009770:	e7fd      	b.n	800976e <xTaskResumeAll+0x2a>
 8009772:	f001 f929 	bl	800a9c8 <vPortEnterCritical>
 8009776:	4b39      	ldr	r3, [pc, #228]	@ (800985c <xTaskResumeAll+0x118>)
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	3b01      	subs	r3, #1
 800977c:	4a37      	ldr	r2, [pc, #220]	@ (800985c <xTaskResumeAll+0x118>)
 800977e:	6013      	str	r3, [r2, #0]
 8009780:	4b36      	ldr	r3, [pc, #216]	@ (800985c <xTaskResumeAll+0x118>)
 8009782:	681b      	ldr	r3, [r3, #0]
 8009784:	2b00      	cmp	r3, #0
 8009786:	d162      	bne.n	800984e <xTaskResumeAll+0x10a>
 8009788:	4b35      	ldr	r3, [pc, #212]	@ (8009860 <xTaskResumeAll+0x11c>)
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	2b00      	cmp	r3, #0
 800978e:	d05e      	beq.n	800984e <xTaskResumeAll+0x10a>
 8009790:	e02f      	b.n	80097f2 <xTaskResumeAll+0xae>
 8009792:	4b34      	ldr	r3, [pc, #208]	@ (8009864 <xTaskResumeAll+0x120>)
 8009794:	68db      	ldr	r3, [r3, #12]
 8009796:	68db      	ldr	r3, [r3, #12]
 8009798:	60fb      	str	r3, [r7, #12]
 800979a:	68fb      	ldr	r3, [r7, #12]
 800979c:	3318      	adds	r3, #24
 800979e:	4618      	mov	r0, r3
 80097a0:	f7ff f85a 	bl	8008858 <uxListRemove>
 80097a4:	68fb      	ldr	r3, [r7, #12]
 80097a6:	3304      	adds	r3, #4
 80097a8:	4618      	mov	r0, r3
 80097aa:	f7ff f855 	bl	8008858 <uxListRemove>
 80097ae:	68fb      	ldr	r3, [r7, #12]
 80097b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80097b2:	4b2d      	ldr	r3, [pc, #180]	@ (8009868 <xTaskResumeAll+0x124>)
 80097b4:	681b      	ldr	r3, [r3, #0]
 80097b6:	429a      	cmp	r2, r3
 80097b8:	d903      	bls.n	80097c2 <xTaskResumeAll+0x7e>
 80097ba:	68fb      	ldr	r3, [r7, #12]
 80097bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80097be:	4a2a      	ldr	r2, [pc, #168]	@ (8009868 <xTaskResumeAll+0x124>)
 80097c0:	6013      	str	r3, [r2, #0]
 80097c2:	68fb      	ldr	r3, [r7, #12]
 80097c4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80097c6:	4613      	mov	r3, r2
 80097c8:	009b      	lsls	r3, r3, #2
 80097ca:	4413      	add	r3, r2
 80097cc:	009b      	lsls	r3, r3, #2
 80097ce:	4a27      	ldr	r2, [pc, #156]	@ (800986c <xTaskResumeAll+0x128>)
 80097d0:	441a      	add	r2, r3
 80097d2:	68fb      	ldr	r3, [r7, #12]
 80097d4:	3304      	adds	r3, #4
 80097d6:	4619      	mov	r1, r3
 80097d8:	4610      	mov	r0, r2
 80097da:	f7fe ffe0 	bl	800879e <vListInsertEnd>
 80097de:	68fb      	ldr	r3, [r7, #12]
 80097e0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80097e2:	4b23      	ldr	r3, [pc, #140]	@ (8009870 <xTaskResumeAll+0x12c>)
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80097e8:	429a      	cmp	r2, r3
 80097ea:	d302      	bcc.n	80097f2 <xTaskResumeAll+0xae>
 80097ec:	4b21      	ldr	r3, [pc, #132]	@ (8009874 <xTaskResumeAll+0x130>)
 80097ee:	2201      	movs	r2, #1
 80097f0:	601a      	str	r2, [r3, #0]
 80097f2:	4b1c      	ldr	r3, [pc, #112]	@ (8009864 <xTaskResumeAll+0x120>)
 80097f4:	681b      	ldr	r3, [r3, #0]
 80097f6:	2b00      	cmp	r3, #0
 80097f8:	d1cb      	bne.n	8009792 <xTaskResumeAll+0x4e>
 80097fa:	68fb      	ldr	r3, [r7, #12]
 80097fc:	2b00      	cmp	r3, #0
 80097fe:	d001      	beq.n	8009804 <xTaskResumeAll+0xc0>
 8009800:	f000 fb58 	bl	8009eb4 <prvResetNextTaskUnblockTime>
 8009804:	4b1c      	ldr	r3, [pc, #112]	@ (8009878 <xTaskResumeAll+0x134>)
 8009806:	681b      	ldr	r3, [r3, #0]
 8009808:	607b      	str	r3, [r7, #4]
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	2b00      	cmp	r3, #0
 800980e:	d010      	beq.n	8009832 <xTaskResumeAll+0xee>
 8009810:	f000 f846 	bl	80098a0 <xTaskIncrementTick>
 8009814:	4603      	mov	r3, r0
 8009816:	2b00      	cmp	r3, #0
 8009818:	d002      	beq.n	8009820 <xTaskResumeAll+0xdc>
 800981a:	4b16      	ldr	r3, [pc, #88]	@ (8009874 <xTaskResumeAll+0x130>)
 800981c:	2201      	movs	r2, #1
 800981e:	601a      	str	r2, [r3, #0]
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	3b01      	subs	r3, #1
 8009824:	607b      	str	r3, [r7, #4]
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	2b00      	cmp	r3, #0
 800982a:	d1f1      	bne.n	8009810 <xTaskResumeAll+0xcc>
 800982c:	4b12      	ldr	r3, [pc, #72]	@ (8009878 <xTaskResumeAll+0x134>)
 800982e:	2200      	movs	r2, #0
 8009830:	601a      	str	r2, [r3, #0]
 8009832:	4b10      	ldr	r3, [pc, #64]	@ (8009874 <xTaskResumeAll+0x130>)
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	2b00      	cmp	r3, #0
 8009838:	d009      	beq.n	800984e <xTaskResumeAll+0x10a>
 800983a:	2301      	movs	r3, #1
 800983c:	60bb      	str	r3, [r7, #8]
 800983e:	4b0f      	ldr	r3, [pc, #60]	@ (800987c <xTaskResumeAll+0x138>)
 8009840:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009844:	601a      	str	r2, [r3, #0]
 8009846:	f3bf 8f4f 	dsb	sy
 800984a:	f3bf 8f6f 	isb	sy
 800984e:	f001 f8ed 	bl	800aa2c <vPortExitCritical>
 8009852:	68bb      	ldr	r3, [r7, #8]
 8009854:	4618      	mov	r0, r3
 8009856:	3710      	adds	r7, #16
 8009858:	46bd      	mov	sp, r7
 800985a:	bd80      	pop	{r7, pc}
 800985c:	24000ffc 	.word	0x24000ffc
 8009860:	24000fd4 	.word	0x24000fd4
 8009864:	24000f94 	.word	0x24000f94
 8009868:	24000fdc 	.word	0x24000fdc
 800986c:	24000b04 	.word	0x24000b04
 8009870:	24000b00 	.word	0x24000b00
 8009874:	24000fe8 	.word	0x24000fe8
 8009878:	24000fe4 	.word	0x24000fe4
 800987c:	e000ed04 	.word	0xe000ed04

08009880 <xTaskGetTickCount>:
 8009880:	b480      	push	{r7}
 8009882:	b083      	sub	sp, #12
 8009884:	af00      	add	r7, sp, #0
 8009886:	4b05      	ldr	r3, [pc, #20]	@ (800989c <xTaskGetTickCount+0x1c>)
 8009888:	681b      	ldr	r3, [r3, #0]
 800988a:	607b      	str	r3, [r7, #4]
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	4618      	mov	r0, r3
 8009890:	370c      	adds	r7, #12
 8009892:	46bd      	mov	sp, r7
 8009894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009898:	4770      	bx	lr
 800989a:	bf00      	nop
 800989c:	24000fd8 	.word	0x24000fd8

080098a0 <xTaskIncrementTick>:
 80098a0:	b580      	push	{r7, lr}
 80098a2:	b086      	sub	sp, #24
 80098a4:	af00      	add	r7, sp, #0
 80098a6:	2300      	movs	r3, #0
 80098a8:	617b      	str	r3, [r7, #20]
 80098aa:	4b4f      	ldr	r3, [pc, #316]	@ (80099e8 <xTaskIncrementTick+0x148>)
 80098ac:	681b      	ldr	r3, [r3, #0]
 80098ae:	2b00      	cmp	r3, #0
 80098b0:	f040 8090 	bne.w	80099d4 <xTaskIncrementTick+0x134>
 80098b4:	4b4d      	ldr	r3, [pc, #308]	@ (80099ec <xTaskIncrementTick+0x14c>)
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	3301      	adds	r3, #1
 80098ba:	613b      	str	r3, [r7, #16]
 80098bc:	4a4b      	ldr	r2, [pc, #300]	@ (80099ec <xTaskIncrementTick+0x14c>)
 80098be:	693b      	ldr	r3, [r7, #16]
 80098c0:	6013      	str	r3, [r2, #0]
 80098c2:	693b      	ldr	r3, [r7, #16]
 80098c4:	2b00      	cmp	r3, #0
 80098c6:	d121      	bne.n	800990c <xTaskIncrementTick+0x6c>
 80098c8:	4b49      	ldr	r3, [pc, #292]	@ (80099f0 <xTaskIncrementTick+0x150>)
 80098ca:	681b      	ldr	r3, [r3, #0]
 80098cc:	681b      	ldr	r3, [r3, #0]
 80098ce:	2b00      	cmp	r3, #0
 80098d0:	d00b      	beq.n	80098ea <xTaskIncrementTick+0x4a>
 80098d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80098d6:	f383 8811 	msr	BASEPRI, r3
 80098da:	f3bf 8f6f 	isb	sy
 80098de:	f3bf 8f4f 	dsb	sy
 80098e2:	603b      	str	r3, [r7, #0]
 80098e4:	bf00      	nop
 80098e6:	bf00      	nop
 80098e8:	e7fd      	b.n	80098e6 <xTaskIncrementTick+0x46>
 80098ea:	4b41      	ldr	r3, [pc, #260]	@ (80099f0 <xTaskIncrementTick+0x150>)
 80098ec:	681b      	ldr	r3, [r3, #0]
 80098ee:	60fb      	str	r3, [r7, #12]
 80098f0:	4b40      	ldr	r3, [pc, #256]	@ (80099f4 <xTaskIncrementTick+0x154>)
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	4a3e      	ldr	r2, [pc, #248]	@ (80099f0 <xTaskIncrementTick+0x150>)
 80098f6:	6013      	str	r3, [r2, #0]
 80098f8:	4a3e      	ldr	r2, [pc, #248]	@ (80099f4 <xTaskIncrementTick+0x154>)
 80098fa:	68fb      	ldr	r3, [r7, #12]
 80098fc:	6013      	str	r3, [r2, #0]
 80098fe:	4b3e      	ldr	r3, [pc, #248]	@ (80099f8 <xTaskIncrementTick+0x158>)
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	3301      	adds	r3, #1
 8009904:	4a3c      	ldr	r2, [pc, #240]	@ (80099f8 <xTaskIncrementTick+0x158>)
 8009906:	6013      	str	r3, [r2, #0]
 8009908:	f000 fad4 	bl	8009eb4 <prvResetNextTaskUnblockTime>
 800990c:	4b3b      	ldr	r3, [pc, #236]	@ (80099fc <xTaskIncrementTick+0x15c>)
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	693a      	ldr	r2, [r7, #16]
 8009912:	429a      	cmp	r2, r3
 8009914:	d349      	bcc.n	80099aa <xTaskIncrementTick+0x10a>
 8009916:	4b36      	ldr	r3, [pc, #216]	@ (80099f0 <xTaskIncrementTick+0x150>)
 8009918:	681b      	ldr	r3, [r3, #0]
 800991a:	681b      	ldr	r3, [r3, #0]
 800991c:	2b00      	cmp	r3, #0
 800991e:	d104      	bne.n	800992a <xTaskIncrementTick+0x8a>
 8009920:	4b36      	ldr	r3, [pc, #216]	@ (80099fc <xTaskIncrementTick+0x15c>)
 8009922:	f04f 32ff 	mov.w	r2, #4294967295
 8009926:	601a      	str	r2, [r3, #0]
 8009928:	e03f      	b.n	80099aa <xTaskIncrementTick+0x10a>
 800992a:	4b31      	ldr	r3, [pc, #196]	@ (80099f0 <xTaskIncrementTick+0x150>)
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	68db      	ldr	r3, [r3, #12]
 8009930:	68db      	ldr	r3, [r3, #12]
 8009932:	60bb      	str	r3, [r7, #8]
 8009934:	68bb      	ldr	r3, [r7, #8]
 8009936:	685b      	ldr	r3, [r3, #4]
 8009938:	607b      	str	r3, [r7, #4]
 800993a:	693a      	ldr	r2, [r7, #16]
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	429a      	cmp	r2, r3
 8009940:	d203      	bcs.n	800994a <xTaskIncrementTick+0xaa>
 8009942:	4a2e      	ldr	r2, [pc, #184]	@ (80099fc <xTaskIncrementTick+0x15c>)
 8009944:	687b      	ldr	r3, [r7, #4]
 8009946:	6013      	str	r3, [r2, #0]
 8009948:	e02f      	b.n	80099aa <xTaskIncrementTick+0x10a>
 800994a:	68bb      	ldr	r3, [r7, #8]
 800994c:	3304      	adds	r3, #4
 800994e:	4618      	mov	r0, r3
 8009950:	f7fe ff82 	bl	8008858 <uxListRemove>
 8009954:	68bb      	ldr	r3, [r7, #8]
 8009956:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009958:	2b00      	cmp	r3, #0
 800995a:	d004      	beq.n	8009966 <xTaskIncrementTick+0xc6>
 800995c:	68bb      	ldr	r3, [r7, #8]
 800995e:	3318      	adds	r3, #24
 8009960:	4618      	mov	r0, r3
 8009962:	f7fe ff79 	bl	8008858 <uxListRemove>
 8009966:	68bb      	ldr	r3, [r7, #8]
 8009968:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800996a:	4b25      	ldr	r3, [pc, #148]	@ (8009a00 <xTaskIncrementTick+0x160>)
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	429a      	cmp	r2, r3
 8009970:	d903      	bls.n	800997a <xTaskIncrementTick+0xda>
 8009972:	68bb      	ldr	r3, [r7, #8]
 8009974:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009976:	4a22      	ldr	r2, [pc, #136]	@ (8009a00 <xTaskIncrementTick+0x160>)
 8009978:	6013      	str	r3, [r2, #0]
 800997a:	68bb      	ldr	r3, [r7, #8]
 800997c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800997e:	4613      	mov	r3, r2
 8009980:	009b      	lsls	r3, r3, #2
 8009982:	4413      	add	r3, r2
 8009984:	009b      	lsls	r3, r3, #2
 8009986:	4a1f      	ldr	r2, [pc, #124]	@ (8009a04 <xTaskIncrementTick+0x164>)
 8009988:	441a      	add	r2, r3
 800998a:	68bb      	ldr	r3, [r7, #8]
 800998c:	3304      	adds	r3, #4
 800998e:	4619      	mov	r1, r3
 8009990:	4610      	mov	r0, r2
 8009992:	f7fe ff04 	bl	800879e <vListInsertEnd>
 8009996:	68bb      	ldr	r3, [r7, #8]
 8009998:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800999a:	4b1b      	ldr	r3, [pc, #108]	@ (8009a08 <xTaskIncrementTick+0x168>)
 800999c:	681b      	ldr	r3, [r3, #0]
 800999e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80099a0:	429a      	cmp	r2, r3
 80099a2:	d3b8      	bcc.n	8009916 <xTaskIncrementTick+0x76>
 80099a4:	2301      	movs	r3, #1
 80099a6:	617b      	str	r3, [r7, #20]
 80099a8:	e7b5      	b.n	8009916 <xTaskIncrementTick+0x76>
 80099aa:	4b17      	ldr	r3, [pc, #92]	@ (8009a08 <xTaskIncrementTick+0x168>)
 80099ac:	681b      	ldr	r3, [r3, #0]
 80099ae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80099b0:	4914      	ldr	r1, [pc, #80]	@ (8009a04 <xTaskIncrementTick+0x164>)
 80099b2:	4613      	mov	r3, r2
 80099b4:	009b      	lsls	r3, r3, #2
 80099b6:	4413      	add	r3, r2
 80099b8:	009b      	lsls	r3, r3, #2
 80099ba:	440b      	add	r3, r1
 80099bc:	681b      	ldr	r3, [r3, #0]
 80099be:	2b01      	cmp	r3, #1
 80099c0:	d901      	bls.n	80099c6 <xTaskIncrementTick+0x126>
 80099c2:	2301      	movs	r3, #1
 80099c4:	617b      	str	r3, [r7, #20]
 80099c6:	4b11      	ldr	r3, [pc, #68]	@ (8009a0c <xTaskIncrementTick+0x16c>)
 80099c8:	681b      	ldr	r3, [r3, #0]
 80099ca:	2b00      	cmp	r3, #0
 80099cc:	d007      	beq.n	80099de <xTaskIncrementTick+0x13e>
 80099ce:	2301      	movs	r3, #1
 80099d0:	617b      	str	r3, [r7, #20]
 80099d2:	e004      	b.n	80099de <xTaskIncrementTick+0x13e>
 80099d4:	4b0e      	ldr	r3, [pc, #56]	@ (8009a10 <xTaskIncrementTick+0x170>)
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	3301      	adds	r3, #1
 80099da:	4a0d      	ldr	r2, [pc, #52]	@ (8009a10 <xTaskIncrementTick+0x170>)
 80099dc:	6013      	str	r3, [r2, #0]
 80099de:	697b      	ldr	r3, [r7, #20]
 80099e0:	4618      	mov	r0, r3
 80099e2:	3718      	adds	r7, #24
 80099e4:	46bd      	mov	sp, r7
 80099e6:	bd80      	pop	{r7, pc}
 80099e8:	24000ffc 	.word	0x24000ffc
 80099ec:	24000fd8 	.word	0x24000fd8
 80099f0:	24000f8c 	.word	0x24000f8c
 80099f4:	24000f90 	.word	0x24000f90
 80099f8:	24000fec 	.word	0x24000fec
 80099fc:	24000ff4 	.word	0x24000ff4
 8009a00:	24000fdc 	.word	0x24000fdc
 8009a04:	24000b04 	.word	0x24000b04
 8009a08:	24000b00 	.word	0x24000b00
 8009a0c:	24000fe8 	.word	0x24000fe8
 8009a10:	24000fe4 	.word	0x24000fe4

08009a14 <vTaskSwitchContext>:
 8009a14:	b480      	push	{r7}
 8009a16:	b085      	sub	sp, #20
 8009a18:	af00      	add	r7, sp, #0
 8009a1a:	4b28      	ldr	r3, [pc, #160]	@ (8009abc <vTaskSwitchContext+0xa8>)
 8009a1c:	681b      	ldr	r3, [r3, #0]
 8009a1e:	2b00      	cmp	r3, #0
 8009a20:	d003      	beq.n	8009a2a <vTaskSwitchContext+0x16>
 8009a22:	4b27      	ldr	r3, [pc, #156]	@ (8009ac0 <vTaskSwitchContext+0xac>)
 8009a24:	2201      	movs	r2, #1
 8009a26:	601a      	str	r2, [r3, #0]
 8009a28:	e042      	b.n	8009ab0 <vTaskSwitchContext+0x9c>
 8009a2a:	4b25      	ldr	r3, [pc, #148]	@ (8009ac0 <vTaskSwitchContext+0xac>)
 8009a2c:	2200      	movs	r2, #0
 8009a2e:	601a      	str	r2, [r3, #0]
 8009a30:	4b24      	ldr	r3, [pc, #144]	@ (8009ac4 <vTaskSwitchContext+0xb0>)
 8009a32:	681b      	ldr	r3, [r3, #0]
 8009a34:	60fb      	str	r3, [r7, #12]
 8009a36:	e011      	b.n	8009a5c <vTaskSwitchContext+0x48>
 8009a38:	68fb      	ldr	r3, [r7, #12]
 8009a3a:	2b00      	cmp	r3, #0
 8009a3c:	d10b      	bne.n	8009a56 <vTaskSwitchContext+0x42>
 8009a3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009a42:	f383 8811 	msr	BASEPRI, r3
 8009a46:	f3bf 8f6f 	isb	sy
 8009a4a:	f3bf 8f4f 	dsb	sy
 8009a4e:	607b      	str	r3, [r7, #4]
 8009a50:	bf00      	nop
 8009a52:	bf00      	nop
 8009a54:	e7fd      	b.n	8009a52 <vTaskSwitchContext+0x3e>
 8009a56:	68fb      	ldr	r3, [r7, #12]
 8009a58:	3b01      	subs	r3, #1
 8009a5a:	60fb      	str	r3, [r7, #12]
 8009a5c:	491a      	ldr	r1, [pc, #104]	@ (8009ac8 <vTaskSwitchContext+0xb4>)
 8009a5e:	68fa      	ldr	r2, [r7, #12]
 8009a60:	4613      	mov	r3, r2
 8009a62:	009b      	lsls	r3, r3, #2
 8009a64:	4413      	add	r3, r2
 8009a66:	009b      	lsls	r3, r3, #2
 8009a68:	440b      	add	r3, r1
 8009a6a:	681b      	ldr	r3, [r3, #0]
 8009a6c:	2b00      	cmp	r3, #0
 8009a6e:	d0e3      	beq.n	8009a38 <vTaskSwitchContext+0x24>
 8009a70:	68fa      	ldr	r2, [r7, #12]
 8009a72:	4613      	mov	r3, r2
 8009a74:	009b      	lsls	r3, r3, #2
 8009a76:	4413      	add	r3, r2
 8009a78:	009b      	lsls	r3, r3, #2
 8009a7a:	4a13      	ldr	r2, [pc, #76]	@ (8009ac8 <vTaskSwitchContext+0xb4>)
 8009a7c:	4413      	add	r3, r2
 8009a7e:	60bb      	str	r3, [r7, #8]
 8009a80:	68bb      	ldr	r3, [r7, #8]
 8009a82:	685b      	ldr	r3, [r3, #4]
 8009a84:	685a      	ldr	r2, [r3, #4]
 8009a86:	68bb      	ldr	r3, [r7, #8]
 8009a88:	605a      	str	r2, [r3, #4]
 8009a8a:	68bb      	ldr	r3, [r7, #8]
 8009a8c:	685a      	ldr	r2, [r3, #4]
 8009a8e:	68bb      	ldr	r3, [r7, #8]
 8009a90:	3308      	adds	r3, #8
 8009a92:	429a      	cmp	r2, r3
 8009a94:	d104      	bne.n	8009aa0 <vTaskSwitchContext+0x8c>
 8009a96:	68bb      	ldr	r3, [r7, #8]
 8009a98:	685b      	ldr	r3, [r3, #4]
 8009a9a:	685a      	ldr	r2, [r3, #4]
 8009a9c:	68bb      	ldr	r3, [r7, #8]
 8009a9e:	605a      	str	r2, [r3, #4]
 8009aa0:	68bb      	ldr	r3, [r7, #8]
 8009aa2:	685b      	ldr	r3, [r3, #4]
 8009aa4:	68db      	ldr	r3, [r3, #12]
 8009aa6:	4a09      	ldr	r2, [pc, #36]	@ (8009acc <vTaskSwitchContext+0xb8>)
 8009aa8:	6013      	str	r3, [r2, #0]
 8009aaa:	4a06      	ldr	r2, [pc, #24]	@ (8009ac4 <vTaskSwitchContext+0xb0>)
 8009aac:	68fb      	ldr	r3, [r7, #12]
 8009aae:	6013      	str	r3, [r2, #0]
 8009ab0:	bf00      	nop
 8009ab2:	3714      	adds	r7, #20
 8009ab4:	46bd      	mov	sp, r7
 8009ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aba:	4770      	bx	lr
 8009abc:	24000ffc 	.word	0x24000ffc
 8009ac0:	24000fe8 	.word	0x24000fe8
 8009ac4:	24000fdc 	.word	0x24000fdc
 8009ac8:	24000b04 	.word	0x24000b04
 8009acc:	24000b00 	.word	0x24000b00

08009ad0 <vTaskPlaceOnEventList>:
 8009ad0:	b580      	push	{r7, lr}
 8009ad2:	b084      	sub	sp, #16
 8009ad4:	af00      	add	r7, sp, #0
 8009ad6:	6078      	str	r0, [r7, #4]
 8009ad8:	6039      	str	r1, [r7, #0]
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d10b      	bne.n	8009af8 <vTaskPlaceOnEventList+0x28>
 8009ae0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009ae4:	f383 8811 	msr	BASEPRI, r3
 8009ae8:	f3bf 8f6f 	isb	sy
 8009aec:	f3bf 8f4f 	dsb	sy
 8009af0:	60fb      	str	r3, [r7, #12]
 8009af2:	bf00      	nop
 8009af4:	bf00      	nop
 8009af6:	e7fd      	b.n	8009af4 <vTaskPlaceOnEventList+0x24>
 8009af8:	4b07      	ldr	r3, [pc, #28]	@ (8009b18 <vTaskPlaceOnEventList+0x48>)
 8009afa:	681b      	ldr	r3, [r3, #0]
 8009afc:	3318      	adds	r3, #24
 8009afe:	4619      	mov	r1, r3
 8009b00:	6878      	ldr	r0, [r7, #4]
 8009b02:	f7fe fe70 	bl	80087e6 <vListInsert>
 8009b06:	2101      	movs	r1, #1
 8009b08:	6838      	ldr	r0, [r7, #0]
 8009b0a:	f000 fa81 	bl	800a010 <prvAddCurrentTaskToDelayedList>
 8009b0e:	bf00      	nop
 8009b10:	3710      	adds	r7, #16
 8009b12:	46bd      	mov	sp, r7
 8009b14:	bd80      	pop	{r7, pc}
 8009b16:	bf00      	nop
 8009b18:	24000b00 	.word	0x24000b00

08009b1c <vTaskPlaceOnEventListRestricted>:
 8009b1c:	b580      	push	{r7, lr}
 8009b1e:	b086      	sub	sp, #24
 8009b20:	af00      	add	r7, sp, #0
 8009b22:	60f8      	str	r0, [r7, #12]
 8009b24:	60b9      	str	r1, [r7, #8]
 8009b26:	607a      	str	r2, [r7, #4]
 8009b28:	68fb      	ldr	r3, [r7, #12]
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	d10b      	bne.n	8009b46 <vTaskPlaceOnEventListRestricted+0x2a>
 8009b2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b32:	f383 8811 	msr	BASEPRI, r3
 8009b36:	f3bf 8f6f 	isb	sy
 8009b3a:	f3bf 8f4f 	dsb	sy
 8009b3e:	617b      	str	r3, [r7, #20]
 8009b40:	bf00      	nop
 8009b42:	bf00      	nop
 8009b44:	e7fd      	b.n	8009b42 <vTaskPlaceOnEventListRestricted+0x26>
 8009b46:	4b0a      	ldr	r3, [pc, #40]	@ (8009b70 <vTaskPlaceOnEventListRestricted+0x54>)
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	3318      	adds	r3, #24
 8009b4c:	4619      	mov	r1, r3
 8009b4e:	68f8      	ldr	r0, [r7, #12]
 8009b50:	f7fe fe25 	bl	800879e <vListInsertEnd>
 8009b54:	687b      	ldr	r3, [r7, #4]
 8009b56:	2b00      	cmp	r3, #0
 8009b58:	d002      	beq.n	8009b60 <vTaskPlaceOnEventListRestricted+0x44>
 8009b5a:	f04f 33ff 	mov.w	r3, #4294967295
 8009b5e:	60bb      	str	r3, [r7, #8]
 8009b60:	6879      	ldr	r1, [r7, #4]
 8009b62:	68b8      	ldr	r0, [r7, #8]
 8009b64:	f000 fa54 	bl	800a010 <prvAddCurrentTaskToDelayedList>
 8009b68:	bf00      	nop
 8009b6a:	3718      	adds	r7, #24
 8009b6c:	46bd      	mov	sp, r7
 8009b6e:	bd80      	pop	{r7, pc}
 8009b70:	24000b00 	.word	0x24000b00

08009b74 <xTaskRemoveFromEventList>:
 8009b74:	b580      	push	{r7, lr}
 8009b76:	b086      	sub	sp, #24
 8009b78:	af00      	add	r7, sp, #0
 8009b7a:	6078      	str	r0, [r7, #4]
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	68db      	ldr	r3, [r3, #12]
 8009b80:	68db      	ldr	r3, [r3, #12]
 8009b82:	613b      	str	r3, [r7, #16]
 8009b84:	693b      	ldr	r3, [r7, #16]
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	d10b      	bne.n	8009ba2 <xTaskRemoveFromEventList+0x2e>
 8009b8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009b8e:	f383 8811 	msr	BASEPRI, r3
 8009b92:	f3bf 8f6f 	isb	sy
 8009b96:	f3bf 8f4f 	dsb	sy
 8009b9a:	60fb      	str	r3, [r7, #12]
 8009b9c:	bf00      	nop
 8009b9e:	bf00      	nop
 8009ba0:	e7fd      	b.n	8009b9e <xTaskRemoveFromEventList+0x2a>
 8009ba2:	693b      	ldr	r3, [r7, #16]
 8009ba4:	3318      	adds	r3, #24
 8009ba6:	4618      	mov	r0, r3
 8009ba8:	f7fe fe56 	bl	8008858 <uxListRemove>
 8009bac:	4b1d      	ldr	r3, [pc, #116]	@ (8009c24 <xTaskRemoveFromEventList+0xb0>)
 8009bae:	681b      	ldr	r3, [r3, #0]
 8009bb0:	2b00      	cmp	r3, #0
 8009bb2:	d11d      	bne.n	8009bf0 <xTaskRemoveFromEventList+0x7c>
 8009bb4:	693b      	ldr	r3, [r7, #16]
 8009bb6:	3304      	adds	r3, #4
 8009bb8:	4618      	mov	r0, r3
 8009bba:	f7fe fe4d 	bl	8008858 <uxListRemove>
 8009bbe:	693b      	ldr	r3, [r7, #16]
 8009bc0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009bc2:	4b19      	ldr	r3, [pc, #100]	@ (8009c28 <xTaskRemoveFromEventList+0xb4>)
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	429a      	cmp	r2, r3
 8009bc8:	d903      	bls.n	8009bd2 <xTaskRemoveFromEventList+0x5e>
 8009bca:	693b      	ldr	r3, [r7, #16]
 8009bcc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009bce:	4a16      	ldr	r2, [pc, #88]	@ (8009c28 <xTaskRemoveFromEventList+0xb4>)
 8009bd0:	6013      	str	r3, [r2, #0]
 8009bd2:	693b      	ldr	r3, [r7, #16]
 8009bd4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009bd6:	4613      	mov	r3, r2
 8009bd8:	009b      	lsls	r3, r3, #2
 8009bda:	4413      	add	r3, r2
 8009bdc:	009b      	lsls	r3, r3, #2
 8009bde:	4a13      	ldr	r2, [pc, #76]	@ (8009c2c <xTaskRemoveFromEventList+0xb8>)
 8009be0:	441a      	add	r2, r3
 8009be2:	693b      	ldr	r3, [r7, #16]
 8009be4:	3304      	adds	r3, #4
 8009be6:	4619      	mov	r1, r3
 8009be8:	4610      	mov	r0, r2
 8009bea:	f7fe fdd8 	bl	800879e <vListInsertEnd>
 8009bee:	e005      	b.n	8009bfc <xTaskRemoveFromEventList+0x88>
 8009bf0:	693b      	ldr	r3, [r7, #16]
 8009bf2:	3318      	adds	r3, #24
 8009bf4:	4619      	mov	r1, r3
 8009bf6:	480e      	ldr	r0, [pc, #56]	@ (8009c30 <xTaskRemoveFromEventList+0xbc>)
 8009bf8:	f7fe fdd1 	bl	800879e <vListInsertEnd>
 8009bfc:	693b      	ldr	r3, [r7, #16]
 8009bfe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009c00:	4b0c      	ldr	r3, [pc, #48]	@ (8009c34 <xTaskRemoveFromEventList+0xc0>)
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009c06:	429a      	cmp	r2, r3
 8009c08:	d905      	bls.n	8009c16 <xTaskRemoveFromEventList+0xa2>
 8009c0a:	2301      	movs	r3, #1
 8009c0c:	617b      	str	r3, [r7, #20]
 8009c0e:	4b0a      	ldr	r3, [pc, #40]	@ (8009c38 <xTaskRemoveFromEventList+0xc4>)
 8009c10:	2201      	movs	r2, #1
 8009c12:	601a      	str	r2, [r3, #0]
 8009c14:	e001      	b.n	8009c1a <xTaskRemoveFromEventList+0xa6>
 8009c16:	2300      	movs	r3, #0
 8009c18:	617b      	str	r3, [r7, #20]
 8009c1a:	697b      	ldr	r3, [r7, #20]
 8009c1c:	4618      	mov	r0, r3
 8009c1e:	3718      	adds	r7, #24
 8009c20:	46bd      	mov	sp, r7
 8009c22:	bd80      	pop	{r7, pc}
 8009c24:	24000ffc 	.word	0x24000ffc
 8009c28:	24000fdc 	.word	0x24000fdc
 8009c2c:	24000b04 	.word	0x24000b04
 8009c30:	24000f94 	.word	0x24000f94
 8009c34:	24000b00 	.word	0x24000b00
 8009c38:	24000fe8 	.word	0x24000fe8

08009c3c <vTaskInternalSetTimeOutState>:
 8009c3c:	b480      	push	{r7}
 8009c3e:	b083      	sub	sp, #12
 8009c40:	af00      	add	r7, sp, #0
 8009c42:	6078      	str	r0, [r7, #4]
 8009c44:	4b06      	ldr	r3, [pc, #24]	@ (8009c60 <vTaskInternalSetTimeOutState+0x24>)
 8009c46:	681a      	ldr	r2, [r3, #0]
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	601a      	str	r2, [r3, #0]
 8009c4c:	4b05      	ldr	r3, [pc, #20]	@ (8009c64 <vTaskInternalSetTimeOutState+0x28>)
 8009c4e:	681a      	ldr	r2, [r3, #0]
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	605a      	str	r2, [r3, #4]
 8009c54:	bf00      	nop
 8009c56:	370c      	adds	r7, #12
 8009c58:	46bd      	mov	sp, r7
 8009c5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c5e:	4770      	bx	lr
 8009c60:	24000fec 	.word	0x24000fec
 8009c64:	24000fd8 	.word	0x24000fd8

08009c68 <xTaskCheckForTimeOut>:
 8009c68:	b580      	push	{r7, lr}
 8009c6a:	b088      	sub	sp, #32
 8009c6c:	af00      	add	r7, sp, #0
 8009c6e:	6078      	str	r0, [r7, #4]
 8009c70:	6039      	str	r1, [r7, #0]
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	d10b      	bne.n	8009c90 <xTaskCheckForTimeOut+0x28>
 8009c78:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c7c:	f383 8811 	msr	BASEPRI, r3
 8009c80:	f3bf 8f6f 	isb	sy
 8009c84:	f3bf 8f4f 	dsb	sy
 8009c88:	613b      	str	r3, [r7, #16]
 8009c8a:	bf00      	nop
 8009c8c:	bf00      	nop
 8009c8e:	e7fd      	b.n	8009c8c <xTaskCheckForTimeOut+0x24>
 8009c90:	683b      	ldr	r3, [r7, #0]
 8009c92:	2b00      	cmp	r3, #0
 8009c94:	d10b      	bne.n	8009cae <xTaskCheckForTimeOut+0x46>
 8009c96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009c9a:	f383 8811 	msr	BASEPRI, r3
 8009c9e:	f3bf 8f6f 	isb	sy
 8009ca2:	f3bf 8f4f 	dsb	sy
 8009ca6:	60fb      	str	r3, [r7, #12]
 8009ca8:	bf00      	nop
 8009caa:	bf00      	nop
 8009cac:	e7fd      	b.n	8009caa <xTaskCheckForTimeOut+0x42>
 8009cae:	f000 fe8b 	bl	800a9c8 <vPortEnterCritical>
 8009cb2:	4b1d      	ldr	r3, [pc, #116]	@ (8009d28 <xTaskCheckForTimeOut+0xc0>)
 8009cb4:	681b      	ldr	r3, [r3, #0]
 8009cb6:	61bb      	str	r3, [r7, #24]
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	685b      	ldr	r3, [r3, #4]
 8009cbc:	69ba      	ldr	r2, [r7, #24]
 8009cbe:	1ad3      	subs	r3, r2, r3
 8009cc0:	617b      	str	r3, [r7, #20]
 8009cc2:	683b      	ldr	r3, [r7, #0]
 8009cc4:	681b      	ldr	r3, [r3, #0]
 8009cc6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009cca:	d102      	bne.n	8009cd2 <xTaskCheckForTimeOut+0x6a>
 8009ccc:	2300      	movs	r3, #0
 8009cce:	61fb      	str	r3, [r7, #28]
 8009cd0:	e023      	b.n	8009d1a <xTaskCheckForTimeOut+0xb2>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	681a      	ldr	r2, [r3, #0]
 8009cd6:	4b15      	ldr	r3, [pc, #84]	@ (8009d2c <xTaskCheckForTimeOut+0xc4>)
 8009cd8:	681b      	ldr	r3, [r3, #0]
 8009cda:	429a      	cmp	r2, r3
 8009cdc:	d007      	beq.n	8009cee <xTaskCheckForTimeOut+0x86>
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	685b      	ldr	r3, [r3, #4]
 8009ce2:	69ba      	ldr	r2, [r7, #24]
 8009ce4:	429a      	cmp	r2, r3
 8009ce6:	d302      	bcc.n	8009cee <xTaskCheckForTimeOut+0x86>
 8009ce8:	2301      	movs	r3, #1
 8009cea:	61fb      	str	r3, [r7, #28]
 8009cec:	e015      	b.n	8009d1a <xTaskCheckForTimeOut+0xb2>
 8009cee:	683b      	ldr	r3, [r7, #0]
 8009cf0:	681b      	ldr	r3, [r3, #0]
 8009cf2:	697a      	ldr	r2, [r7, #20]
 8009cf4:	429a      	cmp	r2, r3
 8009cf6:	d20b      	bcs.n	8009d10 <xTaskCheckForTimeOut+0xa8>
 8009cf8:	683b      	ldr	r3, [r7, #0]
 8009cfa:	681a      	ldr	r2, [r3, #0]
 8009cfc:	697b      	ldr	r3, [r7, #20]
 8009cfe:	1ad2      	subs	r2, r2, r3
 8009d00:	683b      	ldr	r3, [r7, #0]
 8009d02:	601a      	str	r2, [r3, #0]
 8009d04:	6878      	ldr	r0, [r7, #4]
 8009d06:	f7ff ff99 	bl	8009c3c <vTaskInternalSetTimeOutState>
 8009d0a:	2300      	movs	r3, #0
 8009d0c:	61fb      	str	r3, [r7, #28]
 8009d0e:	e004      	b.n	8009d1a <xTaskCheckForTimeOut+0xb2>
 8009d10:	683b      	ldr	r3, [r7, #0]
 8009d12:	2200      	movs	r2, #0
 8009d14:	601a      	str	r2, [r3, #0]
 8009d16:	2301      	movs	r3, #1
 8009d18:	61fb      	str	r3, [r7, #28]
 8009d1a:	f000 fe87 	bl	800aa2c <vPortExitCritical>
 8009d1e:	69fb      	ldr	r3, [r7, #28]
 8009d20:	4618      	mov	r0, r3
 8009d22:	3720      	adds	r7, #32
 8009d24:	46bd      	mov	sp, r7
 8009d26:	bd80      	pop	{r7, pc}
 8009d28:	24000fd8 	.word	0x24000fd8
 8009d2c:	24000fec 	.word	0x24000fec

08009d30 <vTaskMissedYield>:
 8009d30:	b480      	push	{r7}
 8009d32:	af00      	add	r7, sp, #0
 8009d34:	4b03      	ldr	r3, [pc, #12]	@ (8009d44 <vTaskMissedYield+0x14>)
 8009d36:	2201      	movs	r2, #1
 8009d38:	601a      	str	r2, [r3, #0]
 8009d3a:	bf00      	nop
 8009d3c:	46bd      	mov	sp, r7
 8009d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d42:	4770      	bx	lr
 8009d44:	24000fe8 	.word	0x24000fe8

08009d48 <prvIdleTask>:
 8009d48:	b580      	push	{r7, lr}
 8009d4a:	b082      	sub	sp, #8
 8009d4c:	af00      	add	r7, sp, #0
 8009d4e:	6078      	str	r0, [r7, #4]
 8009d50:	f000 f852 	bl	8009df8 <prvCheckTasksWaitingTermination>
 8009d54:	4b06      	ldr	r3, [pc, #24]	@ (8009d70 <prvIdleTask+0x28>)
 8009d56:	681b      	ldr	r3, [r3, #0]
 8009d58:	2b01      	cmp	r3, #1
 8009d5a:	d9f9      	bls.n	8009d50 <prvIdleTask+0x8>
 8009d5c:	4b05      	ldr	r3, [pc, #20]	@ (8009d74 <prvIdleTask+0x2c>)
 8009d5e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8009d62:	601a      	str	r2, [r3, #0]
 8009d64:	f3bf 8f4f 	dsb	sy
 8009d68:	f3bf 8f6f 	isb	sy
 8009d6c:	e7f0      	b.n	8009d50 <prvIdleTask+0x8>
 8009d6e:	bf00      	nop
 8009d70:	24000b04 	.word	0x24000b04
 8009d74:	e000ed04 	.word	0xe000ed04

08009d78 <prvInitialiseTaskLists>:
 8009d78:	b580      	push	{r7, lr}
 8009d7a:	b082      	sub	sp, #8
 8009d7c:	af00      	add	r7, sp, #0
 8009d7e:	2300      	movs	r3, #0
 8009d80:	607b      	str	r3, [r7, #4]
 8009d82:	e00c      	b.n	8009d9e <prvInitialiseTaskLists+0x26>
 8009d84:	687a      	ldr	r2, [r7, #4]
 8009d86:	4613      	mov	r3, r2
 8009d88:	009b      	lsls	r3, r3, #2
 8009d8a:	4413      	add	r3, r2
 8009d8c:	009b      	lsls	r3, r3, #2
 8009d8e:	4a12      	ldr	r2, [pc, #72]	@ (8009dd8 <prvInitialiseTaskLists+0x60>)
 8009d90:	4413      	add	r3, r2
 8009d92:	4618      	mov	r0, r3
 8009d94:	f7fe fcd6 	bl	8008744 <vListInitialise>
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	3301      	adds	r3, #1
 8009d9c:	607b      	str	r3, [r7, #4]
 8009d9e:	687b      	ldr	r3, [r7, #4]
 8009da0:	2b37      	cmp	r3, #55	@ 0x37
 8009da2:	d9ef      	bls.n	8009d84 <prvInitialiseTaskLists+0xc>
 8009da4:	480d      	ldr	r0, [pc, #52]	@ (8009ddc <prvInitialiseTaskLists+0x64>)
 8009da6:	f7fe fccd 	bl	8008744 <vListInitialise>
 8009daa:	480d      	ldr	r0, [pc, #52]	@ (8009de0 <prvInitialiseTaskLists+0x68>)
 8009dac:	f7fe fcca 	bl	8008744 <vListInitialise>
 8009db0:	480c      	ldr	r0, [pc, #48]	@ (8009de4 <prvInitialiseTaskLists+0x6c>)
 8009db2:	f7fe fcc7 	bl	8008744 <vListInitialise>
 8009db6:	480c      	ldr	r0, [pc, #48]	@ (8009de8 <prvInitialiseTaskLists+0x70>)
 8009db8:	f7fe fcc4 	bl	8008744 <vListInitialise>
 8009dbc:	480b      	ldr	r0, [pc, #44]	@ (8009dec <prvInitialiseTaskLists+0x74>)
 8009dbe:	f7fe fcc1 	bl	8008744 <vListInitialise>
 8009dc2:	4b0b      	ldr	r3, [pc, #44]	@ (8009df0 <prvInitialiseTaskLists+0x78>)
 8009dc4:	4a05      	ldr	r2, [pc, #20]	@ (8009ddc <prvInitialiseTaskLists+0x64>)
 8009dc6:	601a      	str	r2, [r3, #0]
 8009dc8:	4b0a      	ldr	r3, [pc, #40]	@ (8009df4 <prvInitialiseTaskLists+0x7c>)
 8009dca:	4a05      	ldr	r2, [pc, #20]	@ (8009de0 <prvInitialiseTaskLists+0x68>)
 8009dcc:	601a      	str	r2, [r3, #0]
 8009dce:	bf00      	nop
 8009dd0:	3708      	adds	r7, #8
 8009dd2:	46bd      	mov	sp, r7
 8009dd4:	bd80      	pop	{r7, pc}
 8009dd6:	bf00      	nop
 8009dd8:	24000b04 	.word	0x24000b04
 8009ddc:	24000f64 	.word	0x24000f64
 8009de0:	24000f78 	.word	0x24000f78
 8009de4:	24000f94 	.word	0x24000f94
 8009de8:	24000fa8 	.word	0x24000fa8
 8009dec:	24000fc0 	.word	0x24000fc0
 8009df0:	24000f8c 	.word	0x24000f8c
 8009df4:	24000f90 	.word	0x24000f90

08009df8 <prvCheckTasksWaitingTermination>:
 8009df8:	b580      	push	{r7, lr}
 8009dfa:	b082      	sub	sp, #8
 8009dfc:	af00      	add	r7, sp, #0
 8009dfe:	e019      	b.n	8009e34 <prvCheckTasksWaitingTermination+0x3c>
 8009e00:	f000 fde2 	bl	800a9c8 <vPortEnterCritical>
 8009e04:	4b10      	ldr	r3, [pc, #64]	@ (8009e48 <prvCheckTasksWaitingTermination+0x50>)
 8009e06:	68db      	ldr	r3, [r3, #12]
 8009e08:	68db      	ldr	r3, [r3, #12]
 8009e0a:	607b      	str	r3, [r7, #4]
 8009e0c:	687b      	ldr	r3, [r7, #4]
 8009e0e:	3304      	adds	r3, #4
 8009e10:	4618      	mov	r0, r3
 8009e12:	f7fe fd21 	bl	8008858 <uxListRemove>
 8009e16:	4b0d      	ldr	r3, [pc, #52]	@ (8009e4c <prvCheckTasksWaitingTermination+0x54>)
 8009e18:	681b      	ldr	r3, [r3, #0]
 8009e1a:	3b01      	subs	r3, #1
 8009e1c:	4a0b      	ldr	r2, [pc, #44]	@ (8009e4c <prvCheckTasksWaitingTermination+0x54>)
 8009e1e:	6013      	str	r3, [r2, #0]
 8009e20:	4b0b      	ldr	r3, [pc, #44]	@ (8009e50 <prvCheckTasksWaitingTermination+0x58>)
 8009e22:	681b      	ldr	r3, [r3, #0]
 8009e24:	3b01      	subs	r3, #1
 8009e26:	4a0a      	ldr	r2, [pc, #40]	@ (8009e50 <prvCheckTasksWaitingTermination+0x58>)
 8009e28:	6013      	str	r3, [r2, #0]
 8009e2a:	f000 fdff 	bl	800aa2c <vPortExitCritical>
 8009e2e:	6878      	ldr	r0, [r7, #4]
 8009e30:	f000 f810 	bl	8009e54 <prvDeleteTCB>
 8009e34:	4b06      	ldr	r3, [pc, #24]	@ (8009e50 <prvCheckTasksWaitingTermination+0x58>)
 8009e36:	681b      	ldr	r3, [r3, #0]
 8009e38:	2b00      	cmp	r3, #0
 8009e3a:	d1e1      	bne.n	8009e00 <prvCheckTasksWaitingTermination+0x8>
 8009e3c:	bf00      	nop
 8009e3e:	bf00      	nop
 8009e40:	3708      	adds	r7, #8
 8009e42:	46bd      	mov	sp, r7
 8009e44:	bd80      	pop	{r7, pc}
 8009e46:	bf00      	nop
 8009e48:	24000fa8 	.word	0x24000fa8
 8009e4c:	24000fd4 	.word	0x24000fd4
 8009e50:	24000fbc 	.word	0x24000fbc

08009e54 <prvDeleteTCB>:
 8009e54:	b580      	push	{r7, lr}
 8009e56:	b084      	sub	sp, #16
 8009e58:	af00      	add	r7, sp, #0
 8009e5a:	6078      	str	r0, [r7, #4]
 8009e5c:	687b      	ldr	r3, [r7, #4]
 8009e5e:	f893 3059 	ldrb.w	r3, [r3, #89]	@ 0x59
 8009e62:	2b00      	cmp	r3, #0
 8009e64:	d108      	bne.n	8009e78 <prvDeleteTCB+0x24>
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009e6a:	4618      	mov	r0, r3
 8009e6c:	f000 ff9c 	bl	800ada8 <vPortFree>
 8009e70:	6878      	ldr	r0, [r7, #4]
 8009e72:	f000 ff99 	bl	800ada8 <vPortFree>
 8009e76:	e019      	b.n	8009eac <prvDeleteTCB+0x58>
 8009e78:	687b      	ldr	r3, [r7, #4]
 8009e7a:	f893 3059 	ldrb.w	r3, [r3, #89]	@ 0x59
 8009e7e:	2b01      	cmp	r3, #1
 8009e80:	d103      	bne.n	8009e8a <prvDeleteTCB+0x36>
 8009e82:	6878      	ldr	r0, [r7, #4]
 8009e84:	f000 ff90 	bl	800ada8 <vPortFree>
 8009e88:	e010      	b.n	8009eac <prvDeleteTCB+0x58>
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	f893 3059 	ldrb.w	r3, [r3, #89]	@ 0x59
 8009e90:	2b02      	cmp	r3, #2
 8009e92:	d00b      	beq.n	8009eac <prvDeleteTCB+0x58>
 8009e94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009e98:	f383 8811 	msr	BASEPRI, r3
 8009e9c:	f3bf 8f6f 	isb	sy
 8009ea0:	f3bf 8f4f 	dsb	sy
 8009ea4:	60fb      	str	r3, [r7, #12]
 8009ea6:	bf00      	nop
 8009ea8:	bf00      	nop
 8009eaa:	e7fd      	b.n	8009ea8 <prvDeleteTCB+0x54>
 8009eac:	bf00      	nop
 8009eae:	3710      	adds	r7, #16
 8009eb0:	46bd      	mov	sp, r7
 8009eb2:	bd80      	pop	{r7, pc}

08009eb4 <prvResetNextTaskUnblockTime>:
 8009eb4:	b480      	push	{r7}
 8009eb6:	b083      	sub	sp, #12
 8009eb8:	af00      	add	r7, sp, #0
 8009eba:	4b0c      	ldr	r3, [pc, #48]	@ (8009eec <prvResetNextTaskUnblockTime+0x38>)
 8009ebc:	681b      	ldr	r3, [r3, #0]
 8009ebe:	681b      	ldr	r3, [r3, #0]
 8009ec0:	2b00      	cmp	r3, #0
 8009ec2:	d104      	bne.n	8009ece <prvResetNextTaskUnblockTime+0x1a>
 8009ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8009ef0 <prvResetNextTaskUnblockTime+0x3c>)
 8009ec6:	f04f 32ff 	mov.w	r2, #4294967295
 8009eca:	601a      	str	r2, [r3, #0]
 8009ecc:	e008      	b.n	8009ee0 <prvResetNextTaskUnblockTime+0x2c>
 8009ece:	4b07      	ldr	r3, [pc, #28]	@ (8009eec <prvResetNextTaskUnblockTime+0x38>)
 8009ed0:	681b      	ldr	r3, [r3, #0]
 8009ed2:	68db      	ldr	r3, [r3, #12]
 8009ed4:	68db      	ldr	r3, [r3, #12]
 8009ed6:	607b      	str	r3, [r7, #4]
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	685b      	ldr	r3, [r3, #4]
 8009edc:	4a04      	ldr	r2, [pc, #16]	@ (8009ef0 <prvResetNextTaskUnblockTime+0x3c>)
 8009ede:	6013      	str	r3, [r2, #0]
 8009ee0:	bf00      	nop
 8009ee2:	370c      	adds	r7, #12
 8009ee4:	46bd      	mov	sp, r7
 8009ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009eea:	4770      	bx	lr
 8009eec:	24000f8c 	.word	0x24000f8c
 8009ef0:	24000ff4 	.word	0x24000ff4

08009ef4 <xTaskGetSchedulerState>:
 8009ef4:	b480      	push	{r7}
 8009ef6:	b083      	sub	sp, #12
 8009ef8:	af00      	add	r7, sp, #0
 8009efa:	4b0b      	ldr	r3, [pc, #44]	@ (8009f28 <xTaskGetSchedulerState+0x34>)
 8009efc:	681b      	ldr	r3, [r3, #0]
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d102      	bne.n	8009f08 <xTaskGetSchedulerState+0x14>
 8009f02:	2301      	movs	r3, #1
 8009f04:	607b      	str	r3, [r7, #4]
 8009f06:	e008      	b.n	8009f1a <xTaskGetSchedulerState+0x26>
 8009f08:	4b08      	ldr	r3, [pc, #32]	@ (8009f2c <xTaskGetSchedulerState+0x38>)
 8009f0a:	681b      	ldr	r3, [r3, #0]
 8009f0c:	2b00      	cmp	r3, #0
 8009f0e:	d102      	bne.n	8009f16 <xTaskGetSchedulerState+0x22>
 8009f10:	2302      	movs	r3, #2
 8009f12:	607b      	str	r3, [r7, #4]
 8009f14:	e001      	b.n	8009f1a <xTaskGetSchedulerState+0x26>
 8009f16:	2300      	movs	r3, #0
 8009f18:	607b      	str	r3, [r7, #4]
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	4618      	mov	r0, r3
 8009f1e:	370c      	adds	r7, #12
 8009f20:	46bd      	mov	sp, r7
 8009f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f26:	4770      	bx	lr
 8009f28:	24000fe0 	.word	0x24000fe0
 8009f2c:	24000ffc 	.word	0x24000ffc

08009f30 <xTaskPriorityDisinherit>:
 8009f30:	b580      	push	{r7, lr}
 8009f32:	b086      	sub	sp, #24
 8009f34:	af00      	add	r7, sp, #0
 8009f36:	6078      	str	r0, [r7, #4]
 8009f38:	687b      	ldr	r3, [r7, #4]
 8009f3a:	613b      	str	r3, [r7, #16]
 8009f3c:	2300      	movs	r3, #0
 8009f3e:	617b      	str	r3, [r7, #20]
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	2b00      	cmp	r3, #0
 8009f44:	d058      	beq.n	8009ff8 <xTaskPriorityDisinherit+0xc8>
 8009f46:	4b2f      	ldr	r3, [pc, #188]	@ (800a004 <xTaskPriorityDisinherit+0xd4>)
 8009f48:	681b      	ldr	r3, [r3, #0]
 8009f4a:	693a      	ldr	r2, [r7, #16]
 8009f4c:	429a      	cmp	r2, r3
 8009f4e:	d00b      	beq.n	8009f68 <xTaskPriorityDisinherit+0x38>
 8009f50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f54:	f383 8811 	msr	BASEPRI, r3
 8009f58:	f3bf 8f6f 	isb	sy
 8009f5c:	f3bf 8f4f 	dsb	sy
 8009f60:	60fb      	str	r3, [r7, #12]
 8009f62:	bf00      	nop
 8009f64:	bf00      	nop
 8009f66:	e7fd      	b.n	8009f64 <xTaskPriorityDisinherit+0x34>
 8009f68:	693b      	ldr	r3, [r7, #16]
 8009f6a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d10b      	bne.n	8009f88 <xTaskPriorityDisinherit+0x58>
 8009f70:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009f74:	f383 8811 	msr	BASEPRI, r3
 8009f78:	f3bf 8f6f 	isb	sy
 8009f7c:	f3bf 8f4f 	dsb	sy
 8009f80:	60bb      	str	r3, [r7, #8]
 8009f82:	bf00      	nop
 8009f84:	bf00      	nop
 8009f86:	e7fd      	b.n	8009f84 <xTaskPriorityDisinherit+0x54>
 8009f88:	693b      	ldr	r3, [r7, #16]
 8009f8a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009f8c:	1e5a      	subs	r2, r3, #1
 8009f8e:	693b      	ldr	r3, [r7, #16]
 8009f90:	651a      	str	r2, [r3, #80]	@ 0x50
 8009f92:	693b      	ldr	r3, [r7, #16]
 8009f94:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009f96:	693b      	ldr	r3, [r7, #16]
 8009f98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8009f9a:	429a      	cmp	r2, r3
 8009f9c:	d02c      	beq.n	8009ff8 <xTaskPriorityDisinherit+0xc8>
 8009f9e:	693b      	ldr	r3, [r7, #16]
 8009fa0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009fa2:	2b00      	cmp	r3, #0
 8009fa4:	d128      	bne.n	8009ff8 <xTaskPriorityDisinherit+0xc8>
 8009fa6:	693b      	ldr	r3, [r7, #16]
 8009fa8:	3304      	adds	r3, #4
 8009faa:	4618      	mov	r0, r3
 8009fac:	f7fe fc54 	bl	8008858 <uxListRemove>
 8009fb0:	693b      	ldr	r3, [r7, #16]
 8009fb2:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009fb4:	693b      	ldr	r3, [r7, #16]
 8009fb6:	62da      	str	r2, [r3, #44]	@ 0x2c
 8009fb8:	693b      	ldr	r3, [r7, #16]
 8009fba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fbc:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009fc0:	693b      	ldr	r3, [r7, #16]
 8009fc2:	619a      	str	r2, [r3, #24]
 8009fc4:	693b      	ldr	r3, [r7, #16]
 8009fc6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009fc8:	4b0f      	ldr	r3, [pc, #60]	@ (800a008 <xTaskPriorityDisinherit+0xd8>)
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	429a      	cmp	r2, r3
 8009fce:	d903      	bls.n	8009fd8 <xTaskPriorityDisinherit+0xa8>
 8009fd0:	693b      	ldr	r3, [r7, #16]
 8009fd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009fd4:	4a0c      	ldr	r2, [pc, #48]	@ (800a008 <xTaskPriorityDisinherit+0xd8>)
 8009fd6:	6013      	str	r3, [r2, #0]
 8009fd8:	693b      	ldr	r3, [r7, #16]
 8009fda:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009fdc:	4613      	mov	r3, r2
 8009fde:	009b      	lsls	r3, r3, #2
 8009fe0:	4413      	add	r3, r2
 8009fe2:	009b      	lsls	r3, r3, #2
 8009fe4:	4a09      	ldr	r2, [pc, #36]	@ (800a00c <xTaskPriorityDisinherit+0xdc>)
 8009fe6:	441a      	add	r2, r3
 8009fe8:	693b      	ldr	r3, [r7, #16]
 8009fea:	3304      	adds	r3, #4
 8009fec:	4619      	mov	r1, r3
 8009fee:	4610      	mov	r0, r2
 8009ff0:	f7fe fbd5 	bl	800879e <vListInsertEnd>
 8009ff4:	2301      	movs	r3, #1
 8009ff6:	617b      	str	r3, [r7, #20]
 8009ff8:	697b      	ldr	r3, [r7, #20]
 8009ffa:	4618      	mov	r0, r3
 8009ffc:	3718      	adds	r7, #24
 8009ffe:	46bd      	mov	sp, r7
 800a000:	bd80      	pop	{r7, pc}
 800a002:	bf00      	nop
 800a004:	24000b00 	.word	0x24000b00
 800a008:	24000fdc 	.word	0x24000fdc
 800a00c:	24000b04 	.word	0x24000b04

0800a010 <prvAddCurrentTaskToDelayedList>:
 800a010:	b580      	push	{r7, lr}
 800a012:	b084      	sub	sp, #16
 800a014:	af00      	add	r7, sp, #0
 800a016:	6078      	str	r0, [r7, #4]
 800a018:	6039      	str	r1, [r7, #0]
 800a01a:	4b21      	ldr	r3, [pc, #132]	@ (800a0a0 <prvAddCurrentTaskToDelayedList+0x90>)
 800a01c:	681b      	ldr	r3, [r3, #0]
 800a01e:	60fb      	str	r3, [r7, #12]
 800a020:	4b20      	ldr	r3, [pc, #128]	@ (800a0a4 <prvAddCurrentTaskToDelayedList+0x94>)
 800a022:	681b      	ldr	r3, [r3, #0]
 800a024:	3304      	adds	r3, #4
 800a026:	4618      	mov	r0, r3
 800a028:	f7fe fc16 	bl	8008858 <uxListRemove>
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a032:	d10a      	bne.n	800a04a <prvAddCurrentTaskToDelayedList+0x3a>
 800a034:	683b      	ldr	r3, [r7, #0]
 800a036:	2b00      	cmp	r3, #0
 800a038:	d007      	beq.n	800a04a <prvAddCurrentTaskToDelayedList+0x3a>
 800a03a:	4b1a      	ldr	r3, [pc, #104]	@ (800a0a4 <prvAddCurrentTaskToDelayedList+0x94>)
 800a03c:	681b      	ldr	r3, [r3, #0]
 800a03e:	3304      	adds	r3, #4
 800a040:	4619      	mov	r1, r3
 800a042:	4819      	ldr	r0, [pc, #100]	@ (800a0a8 <prvAddCurrentTaskToDelayedList+0x98>)
 800a044:	f7fe fbab 	bl	800879e <vListInsertEnd>
 800a048:	e026      	b.n	800a098 <prvAddCurrentTaskToDelayedList+0x88>
 800a04a:	68fa      	ldr	r2, [r7, #12]
 800a04c:	687b      	ldr	r3, [r7, #4]
 800a04e:	4413      	add	r3, r2
 800a050:	60bb      	str	r3, [r7, #8]
 800a052:	4b14      	ldr	r3, [pc, #80]	@ (800a0a4 <prvAddCurrentTaskToDelayedList+0x94>)
 800a054:	681b      	ldr	r3, [r3, #0]
 800a056:	68ba      	ldr	r2, [r7, #8]
 800a058:	605a      	str	r2, [r3, #4]
 800a05a:	68ba      	ldr	r2, [r7, #8]
 800a05c:	68fb      	ldr	r3, [r7, #12]
 800a05e:	429a      	cmp	r2, r3
 800a060:	d209      	bcs.n	800a076 <prvAddCurrentTaskToDelayedList+0x66>
 800a062:	4b12      	ldr	r3, [pc, #72]	@ (800a0ac <prvAddCurrentTaskToDelayedList+0x9c>)
 800a064:	681a      	ldr	r2, [r3, #0]
 800a066:	4b0f      	ldr	r3, [pc, #60]	@ (800a0a4 <prvAddCurrentTaskToDelayedList+0x94>)
 800a068:	681b      	ldr	r3, [r3, #0]
 800a06a:	3304      	adds	r3, #4
 800a06c:	4619      	mov	r1, r3
 800a06e:	4610      	mov	r0, r2
 800a070:	f7fe fbb9 	bl	80087e6 <vListInsert>
 800a074:	e010      	b.n	800a098 <prvAddCurrentTaskToDelayedList+0x88>
 800a076:	4b0e      	ldr	r3, [pc, #56]	@ (800a0b0 <prvAddCurrentTaskToDelayedList+0xa0>)
 800a078:	681a      	ldr	r2, [r3, #0]
 800a07a:	4b0a      	ldr	r3, [pc, #40]	@ (800a0a4 <prvAddCurrentTaskToDelayedList+0x94>)
 800a07c:	681b      	ldr	r3, [r3, #0]
 800a07e:	3304      	adds	r3, #4
 800a080:	4619      	mov	r1, r3
 800a082:	4610      	mov	r0, r2
 800a084:	f7fe fbaf 	bl	80087e6 <vListInsert>
 800a088:	4b0a      	ldr	r3, [pc, #40]	@ (800a0b4 <prvAddCurrentTaskToDelayedList+0xa4>)
 800a08a:	681b      	ldr	r3, [r3, #0]
 800a08c:	68ba      	ldr	r2, [r7, #8]
 800a08e:	429a      	cmp	r2, r3
 800a090:	d202      	bcs.n	800a098 <prvAddCurrentTaskToDelayedList+0x88>
 800a092:	4a08      	ldr	r2, [pc, #32]	@ (800a0b4 <prvAddCurrentTaskToDelayedList+0xa4>)
 800a094:	68bb      	ldr	r3, [r7, #8]
 800a096:	6013      	str	r3, [r2, #0]
 800a098:	bf00      	nop
 800a09a:	3710      	adds	r7, #16
 800a09c:	46bd      	mov	sp, r7
 800a09e:	bd80      	pop	{r7, pc}
 800a0a0:	24000fd8 	.word	0x24000fd8
 800a0a4:	24000b00 	.word	0x24000b00
 800a0a8:	24000fc0 	.word	0x24000fc0
 800a0ac:	24000f90 	.word	0x24000f90
 800a0b0:	24000f8c 	.word	0x24000f8c
 800a0b4:	24000ff4 	.word	0x24000ff4

0800a0b8 <xTimerCreateTimerTask>:
 800a0b8:	b580      	push	{r7, lr}
 800a0ba:	b08a      	sub	sp, #40	@ 0x28
 800a0bc:	af04      	add	r7, sp, #16
 800a0be:	2300      	movs	r3, #0
 800a0c0:	617b      	str	r3, [r7, #20]
 800a0c2:	f000 fb13 	bl	800a6ec <prvCheckForValidListAndQueue>
 800a0c6:	4b1d      	ldr	r3, [pc, #116]	@ (800a13c <xTimerCreateTimerTask+0x84>)
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	2b00      	cmp	r3, #0
 800a0cc:	d021      	beq.n	800a112 <xTimerCreateTimerTask+0x5a>
 800a0ce:	2300      	movs	r3, #0
 800a0d0:	60fb      	str	r3, [r7, #12]
 800a0d2:	2300      	movs	r3, #0
 800a0d4:	60bb      	str	r3, [r7, #8]
 800a0d6:	1d3a      	adds	r2, r7, #4
 800a0d8:	f107 0108 	add.w	r1, r7, #8
 800a0dc:	f107 030c 	add.w	r3, r7, #12
 800a0e0:	4618      	mov	r0, r3
 800a0e2:	f7fe fb15 	bl	8008710 <vApplicationGetTimerTaskMemory>
 800a0e6:	6879      	ldr	r1, [r7, #4]
 800a0e8:	68bb      	ldr	r3, [r7, #8]
 800a0ea:	68fa      	ldr	r2, [r7, #12]
 800a0ec:	9202      	str	r2, [sp, #8]
 800a0ee:	9301      	str	r3, [sp, #4]
 800a0f0:	2302      	movs	r3, #2
 800a0f2:	9300      	str	r3, [sp, #0]
 800a0f4:	2300      	movs	r3, #0
 800a0f6:	460a      	mov	r2, r1
 800a0f8:	4911      	ldr	r1, [pc, #68]	@ (800a140 <xTimerCreateTimerTask+0x88>)
 800a0fa:	4812      	ldr	r0, [pc, #72]	@ (800a144 <xTimerCreateTimerTask+0x8c>)
 800a0fc:	f7ff f8d0 	bl	80092a0 <xTaskCreateStatic>
 800a100:	4603      	mov	r3, r0
 800a102:	4a11      	ldr	r2, [pc, #68]	@ (800a148 <xTimerCreateTimerTask+0x90>)
 800a104:	6013      	str	r3, [r2, #0]
 800a106:	4b10      	ldr	r3, [pc, #64]	@ (800a148 <xTimerCreateTimerTask+0x90>)
 800a108:	681b      	ldr	r3, [r3, #0]
 800a10a:	2b00      	cmp	r3, #0
 800a10c:	d001      	beq.n	800a112 <xTimerCreateTimerTask+0x5a>
 800a10e:	2301      	movs	r3, #1
 800a110:	617b      	str	r3, [r7, #20]
 800a112:	697b      	ldr	r3, [r7, #20]
 800a114:	2b00      	cmp	r3, #0
 800a116:	d10b      	bne.n	800a130 <xTimerCreateTimerTask+0x78>
 800a118:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a11c:	f383 8811 	msr	BASEPRI, r3
 800a120:	f3bf 8f6f 	isb	sy
 800a124:	f3bf 8f4f 	dsb	sy
 800a128:	613b      	str	r3, [r7, #16]
 800a12a:	bf00      	nop
 800a12c:	bf00      	nop
 800a12e:	e7fd      	b.n	800a12c <xTimerCreateTimerTask+0x74>
 800a130:	697b      	ldr	r3, [r7, #20]
 800a132:	4618      	mov	r0, r3
 800a134:	3718      	adds	r7, #24
 800a136:	46bd      	mov	sp, r7
 800a138:	bd80      	pop	{r7, pc}
 800a13a:	bf00      	nop
 800a13c:	24001030 	.word	0x24001030
 800a140:	0800b0ac 	.word	0x0800b0ac
 800a144:	0800a285 	.word	0x0800a285
 800a148:	24001034 	.word	0x24001034

0800a14c <xTimerGenericCommand>:
 800a14c:	b580      	push	{r7, lr}
 800a14e:	b08a      	sub	sp, #40	@ 0x28
 800a150:	af00      	add	r7, sp, #0
 800a152:	60f8      	str	r0, [r7, #12]
 800a154:	60b9      	str	r1, [r7, #8]
 800a156:	607a      	str	r2, [r7, #4]
 800a158:	603b      	str	r3, [r7, #0]
 800a15a:	2300      	movs	r3, #0
 800a15c:	627b      	str	r3, [r7, #36]	@ 0x24
 800a15e:	68fb      	ldr	r3, [r7, #12]
 800a160:	2b00      	cmp	r3, #0
 800a162:	d10b      	bne.n	800a17c <xTimerGenericCommand+0x30>
 800a164:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a168:	f383 8811 	msr	BASEPRI, r3
 800a16c:	f3bf 8f6f 	isb	sy
 800a170:	f3bf 8f4f 	dsb	sy
 800a174:	623b      	str	r3, [r7, #32]
 800a176:	bf00      	nop
 800a178:	bf00      	nop
 800a17a:	e7fd      	b.n	800a178 <xTimerGenericCommand+0x2c>
 800a17c:	4b19      	ldr	r3, [pc, #100]	@ (800a1e4 <xTimerGenericCommand+0x98>)
 800a17e:	681b      	ldr	r3, [r3, #0]
 800a180:	2b00      	cmp	r3, #0
 800a182:	d02a      	beq.n	800a1da <xTimerGenericCommand+0x8e>
 800a184:	68bb      	ldr	r3, [r7, #8]
 800a186:	613b      	str	r3, [r7, #16]
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	617b      	str	r3, [r7, #20]
 800a18c:	68fb      	ldr	r3, [r7, #12]
 800a18e:	61bb      	str	r3, [r7, #24]
 800a190:	68bb      	ldr	r3, [r7, #8]
 800a192:	2b05      	cmp	r3, #5
 800a194:	dc18      	bgt.n	800a1c8 <xTimerGenericCommand+0x7c>
 800a196:	f7ff fead 	bl	8009ef4 <xTaskGetSchedulerState>
 800a19a:	4603      	mov	r3, r0
 800a19c:	2b02      	cmp	r3, #2
 800a19e:	d109      	bne.n	800a1b4 <xTimerGenericCommand+0x68>
 800a1a0:	4b10      	ldr	r3, [pc, #64]	@ (800a1e4 <xTimerGenericCommand+0x98>)
 800a1a2:	6818      	ldr	r0, [r3, #0]
 800a1a4:	f107 0110 	add.w	r1, r7, #16
 800a1a8:	2300      	movs	r3, #0
 800a1aa:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a1ac:	f7fe fc88 	bl	8008ac0 <xQueueGenericSend>
 800a1b0:	6278      	str	r0, [r7, #36]	@ 0x24
 800a1b2:	e012      	b.n	800a1da <xTimerGenericCommand+0x8e>
 800a1b4:	4b0b      	ldr	r3, [pc, #44]	@ (800a1e4 <xTimerGenericCommand+0x98>)
 800a1b6:	6818      	ldr	r0, [r3, #0]
 800a1b8:	f107 0110 	add.w	r1, r7, #16
 800a1bc:	2300      	movs	r3, #0
 800a1be:	2200      	movs	r2, #0
 800a1c0:	f7fe fc7e 	bl	8008ac0 <xQueueGenericSend>
 800a1c4:	6278      	str	r0, [r7, #36]	@ 0x24
 800a1c6:	e008      	b.n	800a1da <xTimerGenericCommand+0x8e>
 800a1c8:	4b06      	ldr	r3, [pc, #24]	@ (800a1e4 <xTimerGenericCommand+0x98>)
 800a1ca:	6818      	ldr	r0, [r3, #0]
 800a1cc:	f107 0110 	add.w	r1, r7, #16
 800a1d0:	2300      	movs	r3, #0
 800a1d2:	683a      	ldr	r2, [r7, #0]
 800a1d4:	f7fe fd76 	bl	8008cc4 <xQueueGenericSendFromISR>
 800a1d8:	6278      	str	r0, [r7, #36]	@ 0x24
 800a1da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a1dc:	4618      	mov	r0, r3
 800a1de:	3728      	adds	r7, #40	@ 0x28
 800a1e0:	46bd      	mov	sp, r7
 800a1e2:	bd80      	pop	{r7, pc}
 800a1e4:	24001030 	.word	0x24001030

0800a1e8 <prvProcessExpiredTimer>:
 800a1e8:	b580      	push	{r7, lr}
 800a1ea:	b088      	sub	sp, #32
 800a1ec:	af02      	add	r7, sp, #8
 800a1ee:	6078      	str	r0, [r7, #4]
 800a1f0:	6039      	str	r1, [r7, #0]
 800a1f2:	4b23      	ldr	r3, [pc, #140]	@ (800a280 <prvProcessExpiredTimer+0x98>)
 800a1f4:	681b      	ldr	r3, [r3, #0]
 800a1f6:	68db      	ldr	r3, [r3, #12]
 800a1f8:	68db      	ldr	r3, [r3, #12]
 800a1fa:	617b      	str	r3, [r7, #20]
 800a1fc:	697b      	ldr	r3, [r7, #20]
 800a1fe:	3304      	adds	r3, #4
 800a200:	4618      	mov	r0, r3
 800a202:	f7fe fb29 	bl	8008858 <uxListRemove>
 800a206:	697b      	ldr	r3, [r7, #20]
 800a208:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a20c:	f003 0304 	and.w	r3, r3, #4
 800a210:	2b00      	cmp	r3, #0
 800a212:	d023      	beq.n	800a25c <prvProcessExpiredTimer+0x74>
 800a214:	697b      	ldr	r3, [r7, #20]
 800a216:	699a      	ldr	r2, [r3, #24]
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	18d1      	adds	r1, r2, r3
 800a21c:	687b      	ldr	r3, [r7, #4]
 800a21e:	683a      	ldr	r2, [r7, #0]
 800a220:	6978      	ldr	r0, [r7, #20]
 800a222:	f000 f8d5 	bl	800a3d0 <prvInsertTimerInActiveList>
 800a226:	4603      	mov	r3, r0
 800a228:	2b00      	cmp	r3, #0
 800a22a:	d020      	beq.n	800a26e <prvProcessExpiredTimer+0x86>
 800a22c:	2300      	movs	r3, #0
 800a22e:	9300      	str	r3, [sp, #0]
 800a230:	2300      	movs	r3, #0
 800a232:	687a      	ldr	r2, [r7, #4]
 800a234:	2100      	movs	r1, #0
 800a236:	6978      	ldr	r0, [r7, #20]
 800a238:	f7ff ff88 	bl	800a14c <xTimerGenericCommand>
 800a23c:	6138      	str	r0, [r7, #16]
 800a23e:	693b      	ldr	r3, [r7, #16]
 800a240:	2b00      	cmp	r3, #0
 800a242:	d114      	bne.n	800a26e <prvProcessExpiredTimer+0x86>
 800a244:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a248:	f383 8811 	msr	BASEPRI, r3
 800a24c:	f3bf 8f6f 	isb	sy
 800a250:	f3bf 8f4f 	dsb	sy
 800a254:	60fb      	str	r3, [r7, #12]
 800a256:	bf00      	nop
 800a258:	bf00      	nop
 800a25a:	e7fd      	b.n	800a258 <prvProcessExpiredTimer+0x70>
 800a25c:	697b      	ldr	r3, [r7, #20]
 800a25e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a262:	f023 0301 	bic.w	r3, r3, #1
 800a266:	b2da      	uxtb	r2, r3
 800a268:	697b      	ldr	r3, [r7, #20]
 800a26a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a26e:	697b      	ldr	r3, [r7, #20]
 800a270:	6a1b      	ldr	r3, [r3, #32]
 800a272:	6978      	ldr	r0, [r7, #20]
 800a274:	4798      	blx	r3
 800a276:	bf00      	nop
 800a278:	3718      	adds	r7, #24
 800a27a:	46bd      	mov	sp, r7
 800a27c:	bd80      	pop	{r7, pc}
 800a27e:	bf00      	nop
 800a280:	24001028 	.word	0x24001028

0800a284 <prvTimerTask>:
 800a284:	b580      	push	{r7, lr}
 800a286:	b084      	sub	sp, #16
 800a288:	af00      	add	r7, sp, #0
 800a28a:	6078      	str	r0, [r7, #4]
 800a28c:	f107 0308 	add.w	r3, r7, #8
 800a290:	4618      	mov	r0, r3
 800a292:	f000 f859 	bl	800a348 <prvGetNextExpireTime>
 800a296:	60f8      	str	r0, [r7, #12]
 800a298:	68bb      	ldr	r3, [r7, #8]
 800a29a:	4619      	mov	r1, r3
 800a29c:	68f8      	ldr	r0, [r7, #12]
 800a29e:	f000 f805 	bl	800a2ac <prvProcessTimerOrBlockTask>
 800a2a2:	f000 f8d7 	bl	800a454 <prvProcessReceivedCommands>
 800a2a6:	bf00      	nop
 800a2a8:	e7f0      	b.n	800a28c <prvTimerTask+0x8>
	...

0800a2ac <prvProcessTimerOrBlockTask>:
 800a2ac:	b580      	push	{r7, lr}
 800a2ae:	b084      	sub	sp, #16
 800a2b0:	af00      	add	r7, sp, #0
 800a2b2:	6078      	str	r0, [r7, #4]
 800a2b4:	6039      	str	r1, [r7, #0]
 800a2b6:	f7ff fa37 	bl	8009728 <vTaskSuspendAll>
 800a2ba:	f107 0308 	add.w	r3, r7, #8
 800a2be:	4618      	mov	r0, r3
 800a2c0:	f000 f866 	bl	800a390 <prvSampleTimeNow>
 800a2c4:	60f8      	str	r0, [r7, #12]
 800a2c6:	68bb      	ldr	r3, [r7, #8]
 800a2c8:	2b00      	cmp	r3, #0
 800a2ca:	d130      	bne.n	800a32e <prvProcessTimerOrBlockTask+0x82>
 800a2cc:	683b      	ldr	r3, [r7, #0]
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	d10a      	bne.n	800a2e8 <prvProcessTimerOrBlockTask+0x3c>
 800a2d2:	687a      	ldr	r2, [r7, #4]
 800a2d4:	68fb      	ldr	r3, [r7, #12]
 800a2d6:	429a      	cmp	r2, r3
 800a2d8:	d806      	bhi.n	800a2e8 <prvProcessTimerOrBlockTask+0x3c>
 800a2da:	f7ff fa33 	bl	8009744 <xTaskResumeAll>
 800a2de:	68f9      	ldr	r1, [r7, #12]
 800a2e0:	6878      	ldr	r0, [r7, #4]
 800a2e2:	f7ff ff81 	bl	800a1e8 <prvProcessExpiredTimer>
 800a2e6:	e024      	b.n	800a332 <prvProcessTimerOrBlockTask+0x86>
 800a2e8:	683b      	ldr	r3, [r7, #0]
 800a2ea:	2b00      	cmp	r3, #0
 800a2ec:	d008      	beq.n	800a300 <prvProcessTimerOrBlockTask+0x54>
 800a2ee:	4b13      	ldr	r3, [pc, #76]	@ (800a33c <prvProcessTimerOrBlockTask+0x90>)
 800a2f0:	681b      	ldr	r3, [r3, #0]
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	2b00      	cmp	r3, #0
 800a2f6:	d101      	bne.n	800a2fc <prvProcessTimerOrBlockTask+0x50>
 800a2f8:	2301      	movs	r3, #1
 800a2fa:	e000      	b.n	800a2fe <prvProcessTimerOrBlockTask+0x52>
 800a2fc:	2300      	movs	r3, #0
 800a2fe:	603b      	str	r3, [r7, #0]
 800a300:	4b0f      	ldr	r3, [pc, #60]	@ (800a340 <prvProcessTimerOrBlockTask+0x94>)
 800a302:	6818      	ldr	r0, [r3, #0]
 800a304:	687a      	ldr	r2, [r7, #4]
 800a306:	68fb      	ldr	r3, [r7, #12]
 800a308:	1ad3      	subs	r3, r2, r3
 800a30a:	683a      	ldr	r2, [r7, #0]
 800a30c:	4619      	mov	r1, r3
 800a30e:	f7fe ff93 	bl	8009238 <vQueueWaitForMessageRestricted>
 800a312:	f7ff fa17 	bl	8009744 <xTaskResumeAll>
 800a316:	4603      	mov	r3, r0
 800a318:	2b00      	cmp	r3, #0
 800a31a:	d10a      	bne.n	800a332 <prvProcessTimerOrBlockTask+0x86>
 800a31c:	4b09      	ldr	r3, [pc, #36]	@ (800a344 <prvProcessTimerOrBlockTask+0x98>)
 800a31e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a322:	601a      	str	r2, [r3, #0]
 800a324:	f3bf 8f4f 	dsb	sy
 800a328:	f3bf 8f6f 	isb	sy
 800a32c:	e001      	b.n	800a332 <prvProcessTimerOrBlockTask+0x86>
 800a32e:	f7ff fa09 	bl	8009744 <xTaskResumeAll>
 800a332:	bf00      	nop
 800a334:	3710      	adds	r7, #16
 800a336:	46bd      	mov	sp, r7
 800a338:	bd80      	pop	{r7, pc}
 800a33a:	bf00      	nop
 800a33c:	2400102c 	.word	0x2400102c
 800a340:	24001030 	.word	0x24001030
 800a344:	e000ed04 	.word	0xe000ed04

0800a348 <prvGetNextExpireTime>:
 800a348:	b480      	push	{r7}
 800a34a:	b085      	sub	sp, #20
 800a34c:	af00      	add	r7, sp, #0
 800a34e:	6078      	str	r0, [r7, #4]
 800a350:	4b0e      	ldr	r3, [pc, #56]	@ (800a38c <prvGetNextExpireTime+0x44>)
 800a352:	681b      	ldr	r3, [r3, #0]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	2b00      	cmp	r3, #0
 800a358:	d101      	bne.n	800a35e <prvGetNextExpireTime+0x16>
 800a35a:	2201      	movs	r2, #1
 800a35c:	e000      	b.n	800a360 <prvGetNextExpireTime+0x18>
 800a35e:	2200      	movs	r2, #0
 800a360:	687b      	ldr	r3, [r7, #4]
 800a362:	601a      	str	r2, [r3, #0]
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	681b      	ldr	r3, [r3, #0]
 800a368:	2b00      	cmp	r3, #0
 800a36a:	d105      	bne.n	800a378 <prvGetNextExpireTime+0x30>
 800a36c:	4b07      	ldr	r3, [pc, #28]	@ (800a38c <prvGetNextExpireTime+0x44>)
 800a36e:	681b      	ldr	r3, [r3, #0]
 800a370:	68db      	ldr	r3, [r3, #12]
 800a372:	681b      	ldr	r3, [r3, #0]
 800a374:	60fb      	str	r3, [r7, #12]
 800a376:	e001      	b.n	800a37c <prvGetNextExpireTime+0x34>
 800a378:	2300      	movs	r3, #0
 800a37a:	60fb      	str	r3, [r7, #12]
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	4618      	mov	r0, r3
 800a380:	3714      	adds	r7, #20
 800a382:	46bd      	mov	sp, r7
 800a384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a388:	4770      	bx	lr
 800a38a:	bf00      	nop
 800a38c:	24001028 	.word	0x24001028

0800a390 <prvSampleTimeNow>:
 800a390:	b580      	push	{r7, lr}
 800a392:	b084      	sub	sp, #16
 800a394:	af00      	add	r7, sp, #0
 800a396:	6078      	str	r0, [r7, #4]
 800a398:	f7ff fa72 	bl	8009880 <xTaskGetTickCount>
 800a39c:	60f8      	str	r0, [r7, #12]
 800a39e:	4b0b      	ldr	r3, [pc, #44]	@ (800a3cc <prvSampleTimeNow+0x3c>)
 800a3a0:	681b      	ldr	r3, [r3, #0]
 800a3a2:	68fa      	ldr	r2, [r7, #12]
 800a3a4:	429a      	cmp	r2, r3
 800a3a6:	d205      	bcs.n	800a3b4 <prvSampleTimeNow+0x24>
 800a3a8:	f000 f93a 	bl	800a620 <prvSwitchTimerLists>
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	2201      	movs	r2, #1
 800a3b0:	601a      	str	r2, [r3, #0]
 800a3b2:	e002      	b.n	800a3ba <prvSampleTimeNow+0x2a>
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	2200      	movs	r2, #0
 800a3b8:	601a      	str	r2, [r3, #0]
 800a3ba:	4a04      	ldr	r2, [pc, #16]	@ (800a3cc <prvSampleTimeNow+0x3c>)
 800a3bc:	68fb      	ldr	r3, [r7, #12]
 800a3be:	6013      	str	r3, [r2, #0]
 800a3c0:	68fb      	ldr	r3, [r7, #12]
 800a3c2:	4618      	mov	r0, r3
 800a3c4:	3710      	adds	r7, #16
 800a3c6:	46bd      	mov	sp, r7
 800a3c8:	bd80      	pop	{r7, pc}
 800a3ca:	bf00      	nop
 800a3cc:	24001038 	.word	0x24001038

0800a3d0 <prvInsertTimerInActiveList>:
 800a3d0:	b580      	push	{r7, lr}
 800a3d2:	b086      	sub	sp, #24
 800a3d4:	af00      	add	r7, sp, #0
 800a3d6:	60f8      	str	r0, [r7, #12]
 800a3d8:	60b9      	str	r1, [r7, #8]
 800a3da:	607a      	str	r2, [r7, #4]
 800a3dc:	603b      	str	r3, [r7, #0]
 800a3de:	2300      	movs	r3, #0
 800a3e0:	617b      	str	r3, [r7, #20]
 800a3e2:	68fb      	ldr	r3, [r7, #12]
 800a3e4:	68ba      	ldr	r2, [r7, #8]
 800a3e6:	605a      	str	r2, [r3, #4]
 800a3e8:	68fb      	ldr	r3, [r7, #12]
 800a3ea:	68fa      	ldr	r2, [r7, #12]
 800a3ec:	611a      	str	r2, [r3, #16]
 800a3ee:	68ba      	ldr	r2, [r7, #8]
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	429a      	cmp	r2, r3
 800a3f4:	d812      	bhi.n	800a41c <prvInsertTimerInActiveList+0x4c>
 800a3f6:	687a      	ldr	r2, [r7, #4]
 800a3f8:	683b      	ldr	r3, [r7, #0]
 800a3fa:	1ad2      	subs	r2, r2, r3
 800a3fc:	68fb      	ldr	r3, [r7, #12]
 800a3fe:	699b      	ldr	r3, [r3, #24]
 800a400:	429a      	cmp	r2, r3
 800a402:	d302      	bcc.n	800a40a <prvInsertTimerInActiveList+0x3a>
 800a404:	2301      	movs	r3, #1
 800a406:	617b      	str	r3, [r7, #20]
 800a408:	e01b      	b.n	800a442 <prvInsertTimerInActiveList+0x72>
 800a40a:	4b10      	ldr	r3, [pc, #64]	@ (800a44c <prvInsertTimerInActiveList+0x7c>)
 800a40c:	681a      	ldr	r2, [r3, #0]
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	3304      	adds	r3, #4
 800a412:	4619      	mov	r1, r3
 800a414:	4610      	mov	r0, r2
 800a416:	f7fe f9e6 	bl	80087e6 <vListInsert>
 800a41a:	e012      	b.n	800a442 <prvInsertTimerInActiveList+0x72>
 800a41c:	687a      	ldr	r2, [r7, #4]
 800a41e:	683b      	ldr	r3, [r7, #0]
 800a420:	429a      	cmp	r2, r3
 800a422:	d206      	bcs.n	800a432 <prvInsertTimerInActiveList+0x62>
 800a424:	68ba      	ldr	r2, [r7, #8]
 800a426:	683b      	ldr	r3, [r7, #0]
 800a428:	429a      	cmp	r2, r3
 800a42a:	d302      	bcc.n	800a432 <prvInsertTimerInActiveList+0x62>
 800a42c:	2301      	movs	r3, #1
 800a42e:	617b      	str	r3, [r7, #20]
 800a430:	e007      	b.n	800a442 <prvInsertTimerInActiveList+0x72>
 800a432:	4b07      	ldr	r3, [pc, #28]	@ (800a450 <prvInsertTimerInActiveList+0x80>)
 800a434:	681a      	ldr	r2, [r3, #0]
 800a436:	68fb      	ldr	r3, [r7, #12]
 800a438:	3304      	adds	r3, #4
 800a43a:	4619      	mov	r1, r3
 800a43c:	4610      	mov	r0, r2
 800a43e:	f7fe f9d2 	bl	80087e6 <vListInsert>
 800a442:	697b      	ldr	r3, [r7, #20]
 800a444:	4618      	mov	r0, r3
 800a446:	3718      	adds	r7, #24
 800a448:	46bd      	mov	sp, r7
 800a44a:	bd80      	pop	{r7, pc}
 800a44c:	2400102c 	.word	0x2400102c
 800a450:	24001028 	.word	0x24001028

0800a454 <prvProcessReceivedCommands>:
 800a454:	b580      	push	{r7, lr}
 800a456:	b08e      	sub	sp, #56	@ 0x38
 800a458:	af02      	add	r7, sp, #8
 800a45a:	e0ce      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	2b00      	cmp	r3, #0
 800a460:	da19      	bge.n	800a496 <prvProcessReceivedCommands+0x42>
 800a462:	1d3b      	adds	r3, r7, #4
 800a464:	3304      	adds	r3, #4
 800a466:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a468:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a46a:	2b00      	cmp	r3, #0
 800a46c:	d10b      	bne.n	800a486 <prvProcessReceivedCommands+0x32>
 800a46e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a472:	f383 8811 	msr	BASEPRI, r3
 800a476:	f3bf 8f6f 	isb	sy
 800a47a:	f3bf 8f4f 	dsb	sy
 800a47e:	61fb      	str	r3, [r7, #28]
 800a480:	bf00      	nop
 800a482:	bf00      	nop
 800a484:	e7fd      	b.n	800a482 <prvProcessReceivedCommands+0x2e>
 800a486:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a48c:	6850      	ldr	r0, [r2, #4]
 800a48e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a490:	6892      	ldr	r2, [r2, #8]
 800a492:	4611      	mov	r1, r2
 800a494:	4798      	blx	r3
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	2b00      	cmp	r3, #0
 800a49a:	f2c0 80ae 	blt.w	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a49e:	68fb      	ldr	r3, [r7, #12]
 800a4a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a4a2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a4a4:	695b      	ldr	r3, [r3, #20]
 800a4a6:	2b00      	cmp	r3, #0
 800a4a8:	d004      	beq.n	800a4b4 <prvProcessReceivedCommands+0x60>
 800a4aa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a4ac:	3304      	adds	r3, #4
 800a4ae:	4618      	mov	r0, r3
 800a4b0:	f7fe f9d2 	bl	8008858 <uxListRemove>
 800a4b4:	463b      	mov	r3, r7
 800a4b6:	4618      	mov	r0, r3
 800a4b8:	f7ff ff6a 	bl	800a390 <prvSampleTimeNow>
 800a4bc:	6278      	str	r0, [r7, #36]	@ 0x24
 800a4be:	687b      	ldr	r3, [r7, #4]
 800a4c0:	2b09      	cmp	r3, #9
 800a4c2:	f200 8097 	bhi.w	800a5f4 <prvProcessReceivedCommands+0x1a0>
 800a4c6:	a201      	add	r2, pc, #4	@ (adr r2, 800a4cc <prvProcessReceivedCommands+0x78>)
 800a4c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a4cc:	0800a4f5 	.word	0x0800a4f5
 800a4d0:	0800a4f5 	.word	0x0800a4f5
 800a4d4:	0800a4f5 	.word	0x0800a4f5
 800a4d8:	0800a56b 	.word	0x0800a56b
 800a4dc:	0800a57f 	.word	0x0800a57f
 800a4e0:	0800a5cb 	.word	0x0800a5cb
 800a4e4:	0800a4f5 	.word	0x0800a4f5
 800a4e8:	0800a4f5 	.word	0x0800a4f5
 800a4ec:	0800a56b 	.word	0x0800a56b
 800a4f0:	0800a57f 	.word	0x0800a57f
 800a4f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a4f6:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a4fa:	f043 0301 	orr.w	r3, r3, #1
 800a4fe:	b2da      	uxtb	r2, r3
 800a500:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a502:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a506:	68ba      	ldr	r2, [r7, #8]
 800a508:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a50a:	699b      	ldr	r3, [r3, #24]
 800a50c:	18d1      	adds	r1, r2, r3
 800a50e:	68bb      	ldr	r3, [r7, #8]
 800a510:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a512:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a514:	f7ff ff5c 	bl	800a3d0 <prvInsertTimerInActiveList>
 800a518:	4603      	mov	r3, r0
 800a51a:	2b00      	cmp	r3, #0
 800a51c:	d06c      	beq.n	800a5f8 <prvProcessReceivedCommands+0x1a4>
 800a51e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a520:	6a1b      	ldr	r3, [r3, #32]
 800a522:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a524:	4798      	blx	r3
 800a526:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a528:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a52c:	f003 0304 	and.w	r3, r3, #4
 800a530:	2b00      	cmp	r3, #0
 800a532:	d061      	beq.n	800a5f8 <prvProcessReceivedCommands+0x1a4>
 800a534:	68ba      	ldr	r2, [r7, #8]
 800a536:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a538:	699b      	ldr	r3, [r3, #24]
 800a53a:	441a      	add	r2, r3
 800a53c:	2300      	movs	r3, #0
 800a53e:	9300      	str	r3, [sp, #0]
 800a540:	2300      	movs	r3, #0
 800a542:	2100      	movs	r1, #0
 800a544:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a546:	f7ff fe01 	bl	800a14c <xTimerGenericCommand>
 800a54a:	6238      	str	r0, [r7, #32]
 800a54c:	6a3b      	ldr	r3, [r7, #32]
 800a54e:	2b00      	cmp	r3, #0
 800a550:	d152      	bne.n	800a5f8 <prvProcessReceivedCommands+0x1a4>
 800a552:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a556:	f383 8811 	msr	BASEPRI, r3
 800a55a:	f3bf 8f6f 	isb	sy
 800a55e:	f3bf 8f4f 	dsb	sy
 800a562:	61bb      	str	r3, [r7, #24]
 800a564:	bf00      	nop
 800a566:	bf00      	nop
 800a568:	e7fd      	b.n	800a566 <prvProcessReceivedCommands+0x112>
 800a56a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a56c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a570:	f023 0301 	bic.w	r3, r3, #1
 800a574:	b2da      	uxtb	r2, r3
 800a576:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a578:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a57c:	e03d      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a57e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a580:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a584:	f043 0301 	orr.w	r3, r3, #1
 800a588:	b2da      	uxtb	r2, r3
 800a58a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a58c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a590:	68ba      	ldr	r2, [r7, #8]
 800a592:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a594:	619a      	str	r2, [r3, #24]
 800a596:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a598:	699b      	ldr	r3, [r3, #24]
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d10b      	bne.n	800a5b6 <prvProcessReceivedCommands+0x162>
 800a59e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5a2:	f383 8811 	msr	BASEPRI, r3
 800a5a6:	f3bf 8f6f 	isb	sy
 800a5aa:	f3bf 8f4f 	dsb	sy
 800a5ae:	617b      	str	r3, [r7, #20]
 800a5b0:	bf00      	nop
 800a5b2:	bf00      	nop
 800a5b4:	e7fd      	b.n	800a5b2 <prvProcessReceivedCommands+0x15e>
 800a5b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a5b8:	699a      	ldr	r2, [r3, #24]
 800a5ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a5bc:	18d1      	adds	r1, r2, r3
 800a5be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a5c0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800a5c2:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a5c4:	f7ff ff04 	bl	800a3d0 <prvInsertTimerInActiveList>
 800a5c8:	e017      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a5ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a5cc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a5d0:	f003 0302 	and.w	r3, r3, #2
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	d103      	bne.n	800a5e0 <prvProcessReceivedCommands+0x18c>
 800a5d8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800a5da:	f000 fbe5 	bl	800ada8 <vPortFree>
 800a5de:	e00c      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a5e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a5e2:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a5e6:	f023 0301 	bic.w	r3, r3, #1
 800a5ea:	b2da      	uxtb	r2, r3
 800a5ec:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a5ee:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800a5f2:	e002      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a5f4:	bf00      	nop
 800a5f6:	e000      	b.n	800a5fa <prvProcessReceivedCommands+0x1a6>
 800a5f8:	bf00      	nop
 800a5fa:	4b08      	ldr	r3, [pc, #32]	@ (800a61c <prvProcessReceivedCommands+0x1c8>)
 800a5fc:	681b      	ldr	r3, [r3, #0]
 800a5fe:	1d39      	adds	r1, r7, #4
 800a600:	2200      	movs	r2, #0
 800a602:	4618      	mov	r0, r3
 800a604:	f7fe fbfc 	bl	8008e00 <xQueueReceive>
 800a608:	4603      	mov	r3, r0
 800a60a:	2b00      	cmp	r3, #0
 800a60c:	f47f af26 	bne.w	800a45c <prvProcessReceivedCommands+0x8>
 800a610:	bf00      	nop
 800a612:	bf00      	nop
 800a614:	3730      	adds	r7, #48	@ 0x30
 800a616:	46bd      	mov	sp, r7
 800a618:	bd80      	pop	{r7, pc}
 800a61a:	bf00      	nop
 800a61c:	24001030 	.word	0x24001030

0800a620 <prvSwitchTimerLists>:
 800a620:	b580      	push	{r7, lr}
 800a622:	b088      	sub	sp, #32
 800a624:	af02      	add	r7, sp, #8
 800a626:	e049      	b.n	800a6bc <prvSwitchTimerLists+0x9c>
 800a628:	4b2e      	ldr	r3, [pc, #184]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a62a:	681b      	ldr	r3, [r3, #0]
 800a62c:	68db      	ldr	r3, [r3, #12]
 800a62e:	681b      	ldr	r3, [r3, #0]
 800a630:	613b      	str	r3, [r7, #16]
 800a632:	4b2c      	ldr	r3, [pc, #176]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a634:	681b      	ldr	r3, [r3, #0]
 800a636:	68db      	ldr	r3, [r3, #12]
 800a638:	68db      	ldr	r3, [r3, #12]
 800a63a:	60fb      	str	r3, [r7, #12]
 800a63c:	68fb      	ldr	r3, [r7, #12]
 800a63e:	3304      	adds	r3, #4
 800a640:	4618      	mov	r0, r3
 800a642:	f7fe f909 	bl	8008858 <uxListRemove>
 800a646:	68fb      	ldr	r3, [r7, #12]
 800a648:	6a1b      	ldr	r3, [r3, #32]
 800a64a:	68f8      	ldr	r0, [r7, #12]
 800a64c:	4798      	blx	r3
 800a64e:	68fb      	ldr	r3, [r7, #12]
 800a650:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800a654:	f003 0304 	and.w	r3, r3, #4
 800a658:	2b00      	cmp	r3, #0
 800a65a:	d02f      	beq.n	800a6bc <prvSwitchTimerLists+0x9c>
 800a65c:	68fb      	ldr	r3, [r7, #12]
 800a65e:	699b      	ldr	r3, [r3, #24]
 800a660:	693a      	ldr	r2, [r7, #16]
 800a662:	4413      	add	r3, r2
 800a664:	60bb      	str	r3, [r7, #8]
 800a666:	68ba      	ldr	r2, [r7, #8]
 800a668:	693b      	ldr	r3, [r7, #16]
 800a66a:	429a      	cmp	r2, r3
 800a66c:	d90e      	bls.n	800a68c <prvSwitchTimerLists+0x6c>
 800a66e:	68fb      	ldr	r3, [r7, #12]
 800a670:	68ba      	ldr	r2, [r7, #8]
 800a672:	605a      	str	r2, [r3, #4]
 800a674:	68fb      	ldr	r3, [r7, #12]
 800a676:	68fa      	ldr	r2, [r7, #12]
 800a678:	611a      	str	r2, [r3, #16]
 800a67a:	4b1a      	ldr	r3, [pc, #104]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a67c:	681a      	ldr	r2, [r3, #0]
 800a67e:	68fb      	ldr	r3, [r7, #12]
 800a680:	3304      	adds	r3, #4
 800a682:	4619      	mov	r1, r3
 800a684:	4610      	mov	r0, r2
 800a686:	f7fe f8ae 	bl	80087e6 <vListInsert>
 800a68a:	e017      	b.n	800a6bc <prvSwitchTimerLists+0x9c>
 800a68c:	2300      	movs	r3, #0
 800a68e:	9300      	str	r3, [sp, #0]
 800a690:	2300      	movs	r3, #0
 800a692:	693a      	ldr	r2, [r7, #16]
 800a694:	2100      	movs	r1, #0
 800a696:	68f8      	ldr	r0, [r7, #12]
 800a698:	f7ff fd58 	bl	800a14c <xTimerGenericCommand>
 800a69c:	6078      	str	r0, [r7, #4]
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	2b00      	cmp	r3, #0
 800a6a2:	d10b      	bne.n	800a6bc <prvSwitchTimerLists+0x9c>
 800a6a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a6a8:	f383 8811 	msr	BASEPRI, r3
 800a6ac:	f3bf 8f6f 	isb	sy
 800a6b0:	f3bf 8f4f 	dsb	sy
 800a6b4:	603b      	str	r3, [r7, #0]
 800a6b6:	bf00      	nop
 800a6b8:	bf00      	nop
 800a6ba:	e7fd      	b.n	800a6b8 <prvSwitchTimerLists+0x98>
 800a6bc:	4b09      	ldr	r3, [pc, #36]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a6be:	681b      	ldr	r3, [r3, #0]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	2b00      	cmp	r3, #0
 800a6c4:	d1b0      	bne.n	800a628 <prvSwitchTimerLists+0x8>
 800a6c6:	4b07      	ldr	r3, [pc, #28]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	617b      	str	r3, [r7, #20]
 800a6cc:	4b06      	ldr	r3, [pc, #24]	@ (800a6e8 <prvSwitchTimerLists+0xc8>)
 800a6ce:	681b      	ldr	r3, [r3, #0]
 800a6d0:	4a04      	ldr	r2, [pc, #16]	@ (800a6e4 <prvSwitchTimerLists+0xc4>)
 800a6d2:	6013      	str	r3, [r2, #0]
 800a6d4:	4a04      	ldr	r2, [pc, #16]	@ (800a6e8 <prvSwitchTimerLists+0xc8>)
 800a6d6:	697b      	ldr	r3, [r7, #20]
 800a6d8:	6013      	str	r3, [r2, #0]
 800a6da:	bf00      	nop
 800a6dc:	3718      	adds	r7, #24
 800a6de:	46bd      	mov	sp, r7
 800a6e0:	bd80      	pop	{r7, pc}
 800a6e2:	bf00      	nop
 800a6e4:	24001028 	.word	0x24001028
 800a6e8:	2400102c 	.word	0x2400102c

0800a6ec <prvCheckForValidListAndQueue>:
 800a6ec:	b580      	push	{r7, lr}
 800a6ee:	b082      	sub	sp, #8
 800a6f0:	af02      	add	r7, sp, #8
 800a6f2:	f000 f969 	bl	800a9c8 <vPortEnterCritical>
 800a6f6:	4b15      	ldr	r3, [pc, #84]	@ (800a74c <prvCheckForValidListAndQueue+0x60>)
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	2b00      	cmp	r3, #0
 800a6fc:	d120      	bne.n	800a740 <prvCheckForValidListAndQueue+0x54>
 800a6fe:	4814      	ldr	r0, [pc, #80]	@ (800a750 <prvCheckForValidListAndQueue+0x64>)
 800a700:	f7fe f820 	bl	8008744 <vListInitialise>
 800a704:	4813      	ldr	r0, [pc, #76]	@ (800a754 <prvCheckForValidListAndQueue+0x68>)
 800a706:	f7fe f81d 	bl	8008744 <vListInitialise>
 800a70a:	4b13      	ldr	r3, [pc, #76]	@ (800a758 <prvCheckForValidListAndQueue+0x6c>)
 800a70c:	4a10      	ldr	r2, [pc, #64]	@ (800a750 <prvCheckForValidListAndQueue+0x64>)
 800a70e:	601a      	str	r2, [r3, #0]
 800a710:	4b12      	ldr	r3, [pc, #72]	@ (800a75c <prvCheckForValidListAndQueue+0x70>)
 800a712:	4a10      	ldr	r2, [pc, #64]	@ (800a754 <prvCheckForValidListAndQueue+0x68>)
 800a714:	601a      	str	r2, [r3, #0]
 800a716:	2300      	movs	r3, #0
 800a718:	9300      	str	r3, [sp, #0]
 800a71a:	4b11      	ldr	r3, [pc, #68]	@ (800a760 <prvCheckForValidListAndQueue+0x74>)
 800a71c:	4a11      	ldr	r2, [pc, #68]	@ (800a764 <prvCheckForValidListAndQueue+0x78>)
 800a71e:	2110      	movs	r1, #16
 800a720:	200a      	movs	r0, #10
 800a722:	f7fe f92d 	bl	8008980 <xQueueGenericCreateStatic>
 800a726:	4603      	mov	r3, r0
 800a728:	4a08      	ldr	r2, [pc, #32]	@ (800a74c <prvCheckForValidListAndQueue+0x60>)
 800a72a:	6013      	str	r3, [r2, #0]
 800a72c:	4b07      	ldr	r3, [pc, #28]	@ (800a74c <prvCheckForValidListAndQueue+0x60>)
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	2b00      	cmp	r3, #0
 800a732:	d005      	beq.n	800a740 <prvCheckForValidListAndQueue+0x54>
 800a734:	4b05      	ldr	r3, [pc, #20]	@ (800a74c <prvCheckForValidListAndQueue+0x60>)
 800a736:	681b      	ldr	r3, [r3, #0]
 800a738:	490b      	ldr	r1, [pc, #44]	@ (800a768 <prvCheckForValidListAndQueue+0x7c>)
 800a73a:	4618      	mov	r0, r3
 800a73c:	f7fe fd52 	bl	80091e4 <vQueueAddToRegistry>
 800a740:	f000 f974 	bl	800aa2c <vPortExitCritical>
 800a744:	bf00      	nop
 800a746:	46bd      	mov	sp, r7
 800a748:	bd80      	pop	{r7, pc}
 800a74a:	bf00      	nop
 800a74c:	24001030 	.word	0x24001030
 800a750:	24001000 	.word	0x24001000
 800a754:	24001014 	.word	0x24001014
 800a758:	24001028 	.word	0x24001028
 800a75c:	2400102c 	.word	0x2400102c
 800a760:	240010dc 	.word	0x240010dc
 800a764:	2400103c 	.word	0x2400103c
 800a768:	0800b0b4 	.word	0x0800b0b4

0800a76c <pxPortInitialiseStack>:
 800a76c:	b480      	push	{r7}
 800a76e:	b085      	sub	sp, #20
 800a770:	af00      	add	r7, sp, #0
 800a772:	60f8      	str	r0, [r7, #12]
 800a774:	60b9      	str	r1, [r7, #8]
 800a776:	607a      	str	r2, [r7, #4]
 800a778:	68fb      	ldr	r3, [r7, #12]
 800a77a:	3b04      	subs	r3, #4
 800a77c:	60fb      	str	r3, [r7, #12]
 800a77e:	68fb      	ldr	r3, [r7, #12]
 800a780:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 800a784:	601a      	str	r2, [r3, #0]
 800a786:	68fb      	ldr	r3, [r7, #12]
 800a788:	3b04      	subs	r3, #4
 800a78a:	60fb      	str	r3, [r7, #12]
 800a78c:	68bb      	ldr	r3, [r7, #8]
 800a78e:	f023 0201 	bic.w	r2, r3, #1
 800a792:	68fb      	ldr	r3, [r7, #12]
 800a794:	601a      	str	r2, [r3, #0]
 800a796:	68fb      	ldr	r3, [r7, #12]
 800a798:	3b04      	subs	r3, #4
 800a79a:	60fb      	str	r3, [r7, #12]
 800a79c:	4a0c      	ldr	r2, [pc, #48]	@ (800a7d0 <pxPortInitialiseStack+0x64>)
 800a79e:	68fb      	ldr	r3, [r7, #12]
 800a7a0:	601a      	str	r2, [r3, #0]
 800a7a2:	68fb      	ldr	r3, [r7, #12]
 800a7a4:	3b14      	subs	r3, #20
 800a7a6:	60fb      	str	r3, [r7, #12]
 800a7a8:	687a      	ldr	r2, [r7, #4]
 800a7aa:	68fb      	ldr	r3, [r7, #12]
 800a7ac:	601a      	str	r2, [r3, #0]
 800a7ae:	68fb      	ldr	r3, [r7, #12]
 800a7b0:	3b04      	subs	r3, #4
 800a7b2:	60fb      	str	r3, [r7, #12]
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	f06f 0202 	mvn.w	r2, #2
 800a7ba:	601a      	str	r2, [r3, #0]
 800a7bc:	68fb      	ldr	r3, [r7, #12]
 800a7be:	3b20      	subs	r3, #32
 800a7c0:	60fb      	str	r3, [r7, #12]
 800a7c2:	68fb      	ldr	r3, [r7, #12]
 800a7c4:	4618      	mov	r0, r3
 800a7c6:	3714      	adds	r7, #20
 800a7c8:	46bd      	mov	sp, r7
 800a7ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ce:	4770      	bx	lr
 800a7d0:	0800a7d5 	.word	0x0800a7d5

0800a7d4 <prvTaskExitError>:
 800a7d4:	b480      	push	{r7}
 800a7d6:	b085      	sub	sp, #20
 800a7d8:	af00      	add	r7, sp, #0
 800a7da:	2300      	movs	r3, #0
 800a7dc:	607b      	str	r3, [r7, #4]
 800a7de:	4b13      	ldr	r3, [pc, #76]	@ (800a82c <prvTaskExitError+0x58>)
 800a7e0:	681b      	ldr	r3, [r3, #0]
 800a7e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a7e6:	d00b      	beq.n	800a800 <prvTaskExitError+0x2c>
 800a7e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7ec:	f383 8811 	msr	BASEPRI, r3
 800a7f0:	f3bf 8f6f 	isb	sy
 800a7f4:	f3bf 8f4f 	dsb	sy
 800a7f8:	60fb      	str	r3, [r7, #12]
 800a7fa:	bf00      	nop
 800a7fc:	bf00      	nop
 800a7fe:	e7fd      	b.n	800a7fc <prvTaskExitError+0x28>
 800a800:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a804:	f383 8811 	msr	BASEPRI, r3
 800a808:	f3bf 8f6f 	isb	sy
 800a80c:	f3bf 8f4f 	dsb	sy
 800a810:	60bb      	str	r3, [r7, #8]
 800a812:	bf00      	nop
 800a814:	bf00      	nop
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	2b00      	cmp	r3, #0
 800a81a:	d0fc      	beq.n	800a816 <prvTaskExitError+0x42>
 800a81c:	bf00      	nop
 800a81e:	bf00      	nop
 800a820:	3714      	adds	r7, #20
 800a822:	46bd      	mov	sp, r7
 800a824:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a828:	4770      	bx	lr
 800a82a:	bf00      	nop
 800a82c:	24000178 	.word	0x24000178

0800a830 <SVC_Handler>:
 800a830:	4b07      	ldr	r3, [pc, #28]	@ (800a850 <pxCurrentTCBConst2>)
 800a832:	6819      	ldr	r1, [r3, #0]
 800a834:	6808      	ldr	r0, [r1, #0]
 800a836:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a83a:	f380 8809 	msr	PSP, r0
 800a83e:	f3bf 8f6f 	isb	sy
 800a842:	f04f 0000 	mov.w	r0, #0
 800a846:	f380 8811 	msr	BASEPRI, r0
 800a84a:	4770      	bx	lr
 800a84c:	f3af 8000 	nop.w

0800a850 <pxCurrentTCBConst2>:
 800a850:	24000b00 	.word	0x24000b00
 800a854:	bf00      	nop
 800a856:	bf00      	nop

0800a858 <prvPortStartFirstTask>:
 800a858:	4808      	ldr	r0, [pc, #32]	@ (800a87c <prvPortStartFirstTask+0x24>)
 800a85a:	6800      	ldr	r0, [r0, #0]
 800a85c:	6800      	ldr	r0, [r0, #0]
 800a85e:	f380 8808 	msr	MSP, r0
 800a862:	f04f 0000 	mov.w	r0, #0
 800a866:	f380 8814 	msr	CONTROL, r0
 800a86a:	b662      	cpsie	i
 800a86c:	b661      	cpsie	f
 800a86e:	f3bf 8f4f 	dsb	sy
 800a872:	f3bf 8f6f 	isb	sy
 800a876:	df00      	svc	0
 800a878:	bf00      	nop
 800a87a:	bf00      	nop
 800a87c:	e000ed08 	.word	0xe000ed08

0800a880 <xPortStartScheduler>:
 800a880:	b580      	push	{r7, lr}
 800a882:	b086      	sub	sp, #24
 800a884:	af00      	add	r7, sp, #0
 800a886:	4b47      	ldr	r3, [pc, #284]	@ (800a9a4 <xPortStartScheduler+0x124>)
 800a888:	681b      	ldr	r3, [r3, #0]
 800a88a:	4a47      	ldr	r2, [pc, #284]	@ (800a9a8 <xPortStartScheduler+0x128>)
 800a88c:	4293      	cmp	r3, r2
 800a88e:	d10b      	bne.n	800a8a8 <xPortStartScheduler+0x28>
 800a890:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a894:	f383 8811 	msr	BASEPRI, r3
 800a898:	f3bf 8f6f 	isb	sy
 800a89c:	f3bf 8f4f 	dsb	sy
 800a8a0:	60fb      	str	r3, [r7, #12]
 800a8a2:	bf00      	nop
 800a8a4:	bf00      	nop
 800a8a6:	e7fd      	b.n	800a8a4 <xPortStartScheduler+0x24>
 800a8a8:	4b3e      	ldr	r3, [pc, #248]	@ (800a9a4 <xPortStartScheduler+0x124>)
 800a8aa:	681b      	ldr	r3, [r3, #0]
 800a8ac:	4a3f      	ldr	r2, [pc, #252]	@ (800a9ac <xPortStartScheduler+0x12c>)
 800a8ae:	4293      	cmp	r3, r2
 800a8b0:	d10b      	bne.n	800a8ca <xPortStartScheduler+0x4a>
 800a8b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a8b6:	f383 8811 	msr	BASEPRI, r3
 800a8ba:	f3bf 8f6f 	isb	sy
 800a8be:	f3bf 8f4f 	dsb	sy
 800a8c2:	613b      	str	r3, [r7, #16]
 800a8c4:	bf00      	nop
 800a8c6:	bf00      	nop
 800a8c8:	e7fd      	b.n	800a8c6 <xPortStartScheduler+0x46>
 800a8ca:	4b39      	ldr	r3, [pc, #228]	@ (800a9b0 <xPortStartScheduler+0x130>)
 800a8cc:	617b      	str	r3, [r7, #20]
 800a8ce:	697b      	ldr	r3, [r7, #20]
 800a8d0:	781b      	ldrb	r3, [r3, #0]
 800a8d2:	b2db      	uxtb	r3, r3
 800a8d4:	607b      	str	r3, [r7, #4]
 800a8d6:	697b      	ldr	r3, [r7, #20]
 800a8d8:	22ff      	movs	r2, #255	@ 0xff
 800a8da:	701a      	strb	r2, [r3, #0]
 800a8dc:	697b      	ldr	r3, [r7, #20]
 800a8de:	781b      	ldrb	r3, [r3, #0]
 800a8e0:	b2db      	uxtb	r3, r3
 800a8e2:	70fb      	strb	r3, [r7, #3]
 800a8e4:	78fb      	ldrb	r3, [r7, #3]
 800a8e6:	b2db      	uxtb	r3, r3
 800a8e8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800a8ec:	b2da      	uxtb	r2, r3
 800a8ee:	4b31      	ldr	r3, [pc, #196]	@ (800a9b4 <xPortStartScheduler+0x134>)
 800a8f0:	701a      	strb	r2, [r3, #0]
 800a8f2:	4b31      	ldr	r3, [pc, #196]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a8f4:	2207      	movs	r2, #7
 800a8f6:	601a      	str	r2, [r3, #0]
 800a8f8:	e009      	b.n	800a90e <xPortStartScheduler+0x8e>
 800a8fa:	4b2f      	ldr	r3, [pc, #188]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a8fc:	681b      	ldr	r3, [r3, #0]
 800a8fe:	3b01      	subs	r3, #1
 800a900:	4a2d      	ldr	r2, [pc, #180]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a902:	6013      	str	r3, [r2, #0]
 800a904:	78fb      	ldrb	r3, [r7, #3]
 800a906:	b2db      	uxtb	r3, r3
 800a908:	005b      	lsls	r3, r3, #1
 800a90a:	b2db      	uxtb	r3, r3
 800a90c:	70fb      	strb	r3, [r7, #3]
 800a90e:	78fb      	ldrb	r3, [r7, #3]
 800a910:	b2db      	uxtb	r3, r3
 800a912:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a916:	2b80      	cmp	r3, #128	@ 0x80
 800a918:	d0ef      	beq.n	800a8fa <xPortStartScheduler+0x7a>
 800a91a:	4b27      	ldr	r3, [pc, #156]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a91c:	681b      	ldr	r3, [r3, #0]
 800a91e:	f1c3 0307 	rsb	r3, r3, #7
 800a922:	2b04      	cmp	r3, #4
 800a924:	d00b      	beq.n	800a93e <xPortStartScheduler+0xbe>
 800a926:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a92a:	f383 8811 	msr	BASEPRI, r3
 800a92e:	f3bf 8f6f 	isb	sy
 800a932:	f3bf 8f4f 	dsb	sy
 800a936:	60bb      	str	r3, [r7, #8]
 800a938:	bf00      	nop
 800a93a:	bf00      	nop
 800a93c:	e7fd      	b.n	800a93a <xPortStartScheduler+0xba>
 800a93e:	4b1e      	ldr	r3, [pc, #120]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a940:	681b      	ldr	r3, [r3, #0]
 800a942:	021b      	lsls	r3, r3, #8
 800a944:	4a1c      	ldr	r2, [pc, #112]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a946:	6013      	str	r3, [r2, #0]
 800a948:	4b1b      	ldr	r3, [pc, #108]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a94a:	681b      	ldr	r3, [r3, #0]
 800a94c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800a950:	4a19      	ldr	r2, [pc, #100]	@ (800a9b8 <xPortStartScheduler+0x138>)
 800a952:	6013      	str	r3, [r2, #0]
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	b2da      	uxtb	r2, r3
 800a958:	697b      	ldr	r3, [r7, #20]
 800a95a:	701a      	strb	r2, [r3, #0]
 800a95c:	4b17      	ldr	r3, [pc, #92]	@ (800a9bc <xPortStartScheduler+0x13c>)
 800a95e:	681b      	ldr	r3, [r3, #0]
 800a960:	4a16      	ldr	r2, [pc, #88]	@ (800a9bc <xPortStartScheduler+0x13c>)
 800a962:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800a966:	6013      	str	r3, [r2, #0]
 800a968:	4b14      	ldr	r3, [pc, #80]	@ (800a9bc <xPortStartScheduler+0x13c>)
 800a96a:	681b      	ldr	r3, [r3, #0]
 800a96c:	4a13      	ldr	r2, [pc, #76]	@ (800a9bc <xPortStartScheduler+0x13c>)
 800a96e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 800a972:	6013      	str	r3, [r2, #0]
 800a974:	f000 f8da 	bl	800ab2c <vPortSetupTimerInterrupt>
 800a978:	4b11      	ldr	r3, [pc, #68]	@ (800a9c0 <xPortStartScheduler+0x140>)
 800a97a:	2200      	movs	r2, #0
 800a97c:	601a      	str	r2, [r3, #0]
 800a97e:	f000 f8f9 	bl	800ab74 <vPortEnableVFP>
 800a982:	4b10      	ldr	r3, [pc, #64]	@ (800a9c4 <xPortStartScheduler+0x144>)
 800a984:	681b      	ldr	r3, [r3, #0]
 800a986:	4a0f      	ldr	r2, [pc, #60]	@ (800a9c4 <xPortStartScheduler+0x144>)
 800a988:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800a98c:	6013      	str	r3, [r2, #0]
 800a98e:	f7ff ff63 	bl	800a858 <prvPortStartFirstTask>
 800a992:	f7ff f83f 	bl	8009a14 <vTaskSwitchContext>
 800a996:	f7ff ff1d 	bl	800a7d4 <prvTaskExitError>
 800a99a:	2300      	movs	r3, #0
 800a99c:	4618      	mov	r0, r3
 800a99e:	3718      	adds	r7, #24
 800a9a0:	46bd      	mov	sp, r7
 800a9a2:	bd80      	pop	{r7, pc}
 800a9a4:	e000ed00 	.word	0xe000ed00
 800a9a8:	410fc271 	.word	0x410fc271
 800a9ac:	410fc270 	.word	0x410fc270
 800a9b0:	e000e400 	.word	0xe000e400
 800a9b4:	2400112c 	.word	0x2400112c
 800a9b8:	24001130 	.word	0x24001130
 800a9bc:	e000ed20 	.word	0xe000ed20
 800a9c0:	24000178 	.word	0x24000178
 800a9c4:	e000ef34 	.word	0xe000ef34

0800a9c8 <vPortEnterCritical>:
 800a9c8:	b480      	push	{r7}
 800a9ca:	b083      	sub	sp, #12
 800a9cc:	af00      	add	r7, sp, #0
 800a9ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a9d2:	f383 8811 	msr	BASEPRI, r3
 800a9d6:	f3bf 8f6f 	isb	sy
 800a9da:	f3bf 8f4f 	dsb	sy
 800a9de:	607b      	str	r3, [r7, #4]
 800a9e0:	bf00      	nop
 800a9e2:	4b10      	ldr	r3, [pc, #64]	@ (800aa24 <vPortEnterCritical+0x5c>)
 800a9e4:	681b      	ldr	r3, [r3, #0]
 800a9e6:	3301      	adds	r3, #1
 800a9e8:	4a0e      	ldr	r2, [pc, #56]	@ (800aa24 <vPortEnterCritical+0x5c>)
 800a9ea:	6013      	str	r3, [r2, #0]
 800a9ec:	4b0d      	ldr	r3, [pc, #52]	@ (800aa24 <vPortEnterCritical+0x5c>)
 800a9ee:	681b      	ldr	r3, [r3, #0]
 800a9f0:	2b01      	cmp	r3, #1
 800a9f2:	d110      	bne.n	800aa16 <vPortEnterCritical+0x4e>
 800a9f4:	4b0c      	ldr	r3, [pc, #48]	@ (800aa28 <vPortEnterCritical+0x60>)
 800a9f6:	681b      	ldr	r3, [r3, #0]
 800a9f8:	b2db      	uxtb	r3, r3
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d00b      	beq.n	800aa16 <vPortEnterCritical+0x4e>
 800a9fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa02:	f383 8811 	msr	BASEPRI, r3
 800aa06:	f3bf 8f6f 	isb	sy
 800aa0a:	f3bf 8f4f 	dsb	sy
 800aa0e:	603b      	str	r3, [r7, #0]
 800aa10:	bf00      	nop
 800aa12:	bf00      	nop
 800aa14:	e7fd      	b.n	800aa12 <vPortEnterCritical+0x4a>
 800aa16:	bf00      	nop
 800aa18:	370c      	adds	r7, #12
 800aa1a:	46bd      	mov	sp, r7
 800aa1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa20:	4770      	bx	lr
 800aa22:	bf00      	nop
 800aa24:	24000178 	.word	0x24000178
 800aa28:	e000ed04 	.word	0xe000ed04

0800aa2c <vPortExitCritical>:
 800aa2c:	b480      	push	{r7}
 800aa2e:	b083      	sub	sp, #12
 800aa30:	af00      	add	r7, sp, #0
 800aa32:	4b12      	ldr	r3, [pc, #72]	@ (800aa7c <vPortExitCritical+0x50>)
 800aa34:	681b      	ldr	r3, [r3, #0]
 800aa36:	2b00      	cmp	r3, #0
 800aa38:	d10b      	bne.n	800aa52 <vPortExitCritical+0x26>
 800aa3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa3e:	f383 8811 	msr	BASEPRI, r3
 800aa42:	f3bf 8f6f 	isb	sy
 800aa46:	f3bf 8f4f 	dsb	sy
 800aa4a:	607b      	str	r3, [r7, #4]
 800aa4c:	bf00      	nop
 800aa4e:	bf00      	nop
 800aa50:	e7fd      	b.n	800aa4e <vPortExitCritical+0x22>
 800aa52:	4b0a      	ldr	r3, [pc, #40]	@ (800aa7c <vPortExitCritical+0x50>)
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	3b01      	subs	r3, #1
 800aa58:	4a08      	ldr	r2, [pc, #32]	@ (800aa7c <vPortExitCritical+0x50>)
 800aa5a:	6013      	str	r3, [r2, #0]
 800aa5c:	4b07      	ldr	r3, [pc, #28]	@ (800aa7c <vPortExitCritical+0x50>)
 800aa5e:	681b      	ldr	r3, [r3, #0]
 800aa60:	2b00      	cmp	r3, #0
 800aa62:	d105      	bne.n	800aa70 <vPortExitCritical+0x44>
 800aa64:	2300      	movs	r3, #0
 800aa66:	603b      	str	r3, [r7, #0]
 800aa68:	683b      	ldr	r3, [r7, #0]
 800aa6a:	f383 8811 	msr	BASEPRI, r3
 800aa6e:	bf00      	nop
 800aa70:	bf00      	nop
 800aa72:	370c      	adds	r7, #12
 800aa74:	46bd      	mov	sp, r7
 800aa76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa7a:	4770      	bx	lr
 800aa7c:	24000178 	.word	0x24000178

0800aa80 <PendSV_Handler>:
 800aa80:	f3ef 8009 	mrs	r0, PSP
 800aa84:	f3bf 8f6f 	isb	sy
 800aa88:	4b15      	ldr	r3, [pc, #84]	@ (800aae0 <pxCurrentTCBConst>)
 800aa8a:	681a      	ldr	r2, [r3, #0]
 800aa8c:	f01e 0f10 	tst.w	lr, #16
 800aa90:	bf08      	it	eq
 800aa92:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800aa96:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa9a:	6010      	str	r0, [r2, #0]
 800aa9c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800aaa0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800aaa4:	f380 8811 	msr	BASEPRI, r0
 800aaa8:	f3bf 8f4f 	dsb	sy
 800aaac:	f3bf 8f6f 	isb	sy
 800aab0:	f7fe ffb0 	bl	8009a14 <vTaskSwitchContext>
 800aab4:	f04f 0000 	mov.w	r0, #0
 800aab8:	f380 8811 	msr	BASEPRI, r0
 800aabc:	bc09      	pop	{r0, r3}
 800aabe:	6819      	ldr	r1, [r3, #0]
 800aac0:	6808      	ldr	r0, [r1, #0]
 800aac2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aac6:	f01e 0f10 	tst.w	lr, #16
 800aaca:	bf08      	it	eq
 800aacc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800aad0:	f380 8809 	msr	PSP, r0
 800aad4:	f3bf 8f6f 	isb	sy
 800aad8:	4770      	bx	lr
 800aada:	bf00      	nop
 800aadc:	f3af 8000 	nop.w

0800aae0 <pxCurrentTCBConst>:
 800aae0:	24000b00 	.word	0x24000b00
 800aae4:	bf00      	nop
 800aae6:	bf00      	nop

0800aae8 <xPortSysTickHandler>:
 800aae8:	b580      	push	{r7, lr}
 800aaea:	b082      	sub	sp, #8
 800aaec:	af00      	add	r7, sp, #0
 800aaee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aaf2:	f383 8811 	msr	BASEPRI, r3
 800aaf6:	f3bf 8f6f 	isb	sy
 800aafa:	f3bf 8f4f 	dsb	sy
 800aafe:	607b      	str	r3, [r7, #4]
 800ab00:	bf00      	nop
 800ab02:	f7fe fecd 	bl	80098a0 <xTaskIncrementTick>
 800ab06:	4603      	mov	r3, r0
 800ab08:	2b00      	cmp	r3, #0
 800ab0a:	d003      	beq.n	800ab14 <xPortSysTickHandler+0x2c>
 800ab0c:	4b06      	ldr	r3, [pc, #24]	@ (800ab28 <xPortSysTickHandler+0x40>)
 800ab0e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ab12:	601a      	str	r2, [r3, #0]
 800ab14:	2300      	movs	r3, #0
 800ab16:	603b      	str	r3, [r7, #0]
 800ab18:	683b      	ldr	r3, [r7, #0]
 800ab1a:	f383 8811 	msr	BASEPRI, r3
 800ab1e:	bf00      	nop
 800ab20:	bf00      	nop
 800ab22:	3708      	adds	r7, #8
 800ab24:	46bd      	mov	sp, r7
 800ab26:	bd80      	pop	{r7, pc}
 800ab28:	e000ed04 	.word	0xe000ed04

0800ab2c <vPortSetupTimerInterrupt>:
 800ab2c:	b480      	push	{r7}
 800ab2e:	af00      	add	r7, sp, #0
 800ab30:	4b0b      	ldr	r3, [pc, #44]	@ (800ab60 <vPortSetupTimerInterrupt+0x34>)
 800ab32:	2200      	movs	r2, #0
 800ab34:	601a      	str	r2, [r3, #0]
 800ab36:	4b0b      	ldr	r3, [pc, #44]	@ (800ab64 <vPortSetupTimerInterrupt+0x38>)
 800ab38:	2200      	movs	r2, #0
 800ab3a:	601a      	str	r2, [r3, #0]
 800ab3c:	4b0a      	ldr	r3, [pc, #40]	@ (800ab68 <vPortSetupTimerInterrupt+0x3c>)
 800ab3e:	681b      	ldr	r3, [r3, #0]
 800ab40:	4a0a      	ldr	r2, [pc, #40]	@ (800ab6c <vPortSetupTimerInterrupt+0x40>)
 800ab42:	fba2 2303 	umull	r2, r3, r2, r3
 800ab46:	099b      	lsrs	r3, r3, #6
 800ab48:	4a09      	ldr	r2, [pc, #36]	@ (800ab70 <vPortSetupTimerInterrupt+0x44>)
 800ab4a:	3b01      	subs	r3, #1
 800ab4c:	6013      	str	r3, [r2, #0]
 800ab4e:	4b04      	ldr	r3, [pc, #16]	@ (800ab60 <vPortSetupTimerInterrupt+0x34>)
 800ab50:	2207      	movs	r2, #7
 800ab52:	601a      	str	r2, [r3, #0]
 800ab54:	bf00      	nop
 800ab56:	46bd      	mov	sp, r7
 800ab58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab5c:	4770      	bx	lr
 800ab5e:	bf00      	nop
 800ab60:	e000e010 	.word	0xe000e010
 800ab64:	e000e018 	.word	0xe000e018
 800ab68:	24000168 	.word	0x24000168
 800ab6c:	10624dd3 	.word	0x10624dd3
 800ab70:	e000e014 	.word	0xe000e014

0800ab74 <vPortEnableVFP>:
 800ab74:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 800ab84 <vPortEnableVFP+0x10>
 800ab78:	6801      	ldr	r1, [r0, #0]
 800ab7a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800ab7e:	6001      	str	r1, [r0, #0]
 800ab80:	4770      	bx	lr
 800ab82:	bf00      	nop
 800ab84:	e000ed88 	.word	0xe000ed88

0800ab88 <vPortValidateInterruptPriority>:
 800ab88:	b480      	push	{r7}
 800ab8a:	b085      	sub	sp, #20
 800ab8c:	af00      	add	r7, sp, #0
 800ab8e:	f3ef 8305 	mrs	r3, IPSR
 800ab92:	60fb      	str	r3, [r7, #12]
 800ab94:	68fb      	ldr	r3, [r7, #12]
 800ab96:	2b0f      	cmp	r3, #15
 800ab98:	d915      	bls.n	800abc6 <vPortValidateInterruptPriority+0x3e>
 800ab9a:	4a18      	ldr	r2, [pc, #96]	@ (800abfc <vPortValidateInterruptPriority+0x74>)
 800ab9c:	68fb      	ldr	r3, [r7, #12]
 800ab9e:	4413      	add	r3, r2
 800aba0:	781b      	ldrb	r3, [r3, #0]
 800aba2:	72fb      	strb	r3, [r7, #11]
 800aba4:	4b16      	ldr	r3, [pc, #88]	@ (800ac00 <vPortValidateInterruptPriority+0x78>)
 800aba6:	781b      	ldrb	r3, [r3, #0]
 800aba8:	7afa      	ldrb	r2, [r7, #11]
 800abaa:	429a      	cmp	r2, r3
 800abac:	d20b      	bcs.n	800abc6 <vPortValidateInterruptPriority+0x3e>
 800abae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abb2:	f383 8811 	msr	BASEPRI, r3
 800abb6:	f3bf 8f6f 	isb	sy
 800abba:	f3bf 8f4f 	dsb	sy
 800abbe:	607b      	str	r3, [r7, #4]
 800abc0:	bf00      	nop
 800abc2:	bf00      	nop
 800abc4:	e7fd      	b.n	800abc2 <vPortValidateInterruptPriority+0x3a>
 800abc6:	4b0f      	ldr	r3, [pc, #60]	@ (800ac04 <vPortValidateInterruptPriority+0x7c>)
 800abc8:	681b      	ldr	r3, [r3, #0]
 800abca:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800abce:	4b0e      	ldr	r3, [pc, #56]	@ (800ac08 <vPortValidateInterruptPriority+0x80>)
 800abd0:	681b      	ldr	r3, [r3, #0]
 800abd2:	429a      	cmp	r2, r3
 800abd4:	d90b      	bls.n	800abee <vPortValidateInterruptPriority+0x66>
 800abd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abda:	f383 8811 	msr	BASEPRI, r3
 800abde:	f3bf 8f6f 	isb	sy
 800abe2:	f3bf 8f4f 	dsb	sy
 800abe6:	603b      	str	r3, [r7, #0]
 800abe8:	bf00      	nop
 800abea:	bf00      	nop
 800abec:	e7fd      	b.n	800abea <vPortValidateInterruptPriority+0x62>
 800abee:	bf00      	nop
 800abf0:	3714      	adds	r7, #20
 800abf2:	46bd      	mov	sp, r7
 800abf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abf8:	4770      	bx	lr
 800abfa:	bf00      	nop
 800abfc:	e000e3f0 	.word	0xe000e3f0
 800ac00:	2400112c 	.word	0x2400112c
 800ac04:	e000ed0c 	.word	0xe000ed0c
 800ac08:	24001130 	.word	0x24001130

0800ac0c <pvPortMalloc>:
 800ac0c:	b580      	push	{r7, lr}
 800ac0e:	b08a      	sub	sp, #40	@ 0x28
 800ac10:	af00      	add	r7, sp, #0
 800ac12:	6078      	str	r0, [r7, #4]
 800ac14:	2300      	movs	r3, #0
 800ac16:	61fb      	str	r3, [r7, #28]
 800ac18:	f7fe fd86 	bl	8009728 <vTaskSuspendAll>
 800ac1c:	4b5c      	ldr	r3, [pc, #368]	@ (800ad90 <pvPortMalloc+0x184>)
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	d101      	bne.n	800ac28 <pvPortMalloc+0x1c>
 800ac24:	f000 f924 	bl	800ae70 <prvHeapInit>
 800ac28:	4b5a      	ldr	r3, [pc, #360]	@ (800ad94 <pvPortMalloc+0x188>)
 800ac2a:	681a      	ldr	r2, [r3, #0]
 800ac2c:	687b      	ldr	r3, [r7, #4]
 800ac2e:	4013      	ands	r3, r2
 800ac30:	2b00      	cmp	r3, #0
 800ac32:	f040 8095 	bne.w	800ad60 <pvPortMalloc+0x154>
 800ac36:	687b      	ldr	r3, [r7, #4]
 800ac38:	2b00      	cmp	r3, #0
 800ac3a:	d01e      	beq.n	800ac7a <pvPortMalloc+0x6e>
 800ac3c:	2208      	movs	r2, #8
 800ac3e:	687b      	ldr	r3, [r7, #4]
 800ac40:	4413      	add	r3, r2
 800ac42:	607b      	str	r3, [r7, #4]
 800ac44:	687b      	ldr	r3, [r7, #4]
 800ac46:	f003 0307 	and.w	r3, r3, #7
 800ac4a:	2b00      	cmp	r3, #0
 800ac4c:	d015      	beq.n	800ac7a <pvPortMalloc+0x6e>
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	f023 0307 	bic.w	r3, r3, #7
 800ac54:	3308      	adds	r3, #8
 800ac56:	607b      	str	r3, [r7, #4]
 800ac58:	687b      	ldr	r3, [r7, #4]
 800ac5a:	f003 0307 	and.w	r3, r3, #7
 800ac5e:	2b00      	cmp	r3, #0
 800ac60:	d00b      	beq.n	800ac7a <pvPortMalloc+0x6e>
 800ac62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ac66:	f383 8811 	msr	BASEPRI, r3
 800ac6a:	f3bf 8f6f 	isb	sy
 800ac6e:	f3bf 8f4f 	dsb	sy
 800ac72:	617b      	str	r3, [r7, #20]
 800ac74:	bf00      	nop
 800ac76:	bf00      	nop
 800ac78:	e7fd      	b.n	800ac76 <pvPortMalloc+0x6a>
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	2b00      	cmp	r3, #0
 800ac7e:	d06f      	beq.n	800ad60 <pvPortMalloc+0x154>
 800ac80:	4b45      	ldr	r3, [pc, #276]	@ (800ad98 <pvPortMalloc+0x18c>)
 800ac82:	681b      	ldr	r3, [r3, #0]
 800ac84:	687a      	ldr	r2, [r7, #4]
 800ac86:	429a      	cmp	r2, r3
 800ac88:	d86a      	bhi.n	800ad60 <pvPortMalloc+0x154>
 800ac8a:	4b44      	ldr	r3, [pc, #272]	@ (800ad9c <pvPortMalloc+0x190>)
 800ac8c:	623b      	str	r3, [r7, #32]
 800ac8e:	4b43      	ldr	r3, [pc, #268]	@ (800ad9c <pvPortMalloc+0x190>)
 800ac90:	681b      	ldr	r3, [r3, #0]
 800ac92:	627b      	str	r3, [r7, #36]	@ 0x24
 800ac94:	e004      	b.n	800aca0 <pvPortMalloc+0x94>
 800ac96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ac98:	623b      	str	r3, [r7, #32]
 800ac9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ac9c:	681b      	ldr	r3, [r3, #0]
 800ac9e:	627b      	str	r3, [r7, #36]	@ 0x24
 800aca0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aca2:	685b      	ldr	r3, [r3, #4]
 800aca4:	687a      	ldr	r2, [r7, #4]
 800aca6:	429a      	cmp	r2, r3
 800aca8:	d903      	bls.n	800acb2 <pvPortMalloc+0xa6>
 800acaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d1f1      	bne.n	800ac96 <pvPortMalloc+0x8a>
 800acb2:	4b37      	ldr	r3, [pc, #220]	@ (800ad90 <pvPortMalloc+0x184>)
 800acb4:	681b      	ldr	r3, [r3, #0]
 800acb6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800acb8:	429a      	cmp	r2, r3
 800acba:	d051      	beq.n	800ad60 <pvPortMalloc+0x154>
 800acbc:	6a3b      	ldr	r3, [r7, #32]
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	2208      	movs	r2, #8
 800acc2:	4413      	add	r3, r2
 800acc4:	61fb      	str	r3, [r7, #28]
 800acc6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acc8:	681a      	ldr	r2, [r3, #0]
 800acca:	6a3b      	ldr	r3, [r7, #32]
 800accc:	601a      	str	r2, [r3, #0]
 800acce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acd0:	685a      	ldr	r2, [r3, #4]
 800acd2:	687b      	ldr	r3, [r7, #4]
 800acd4:	1ad2      	subs	r2, r2, r3
 800acd6:	2308      	movs	r3, #8
 800acd8:	005b      	lsls	r3, r3, #1
 800acda:	429a      	cmp	r2, r3
 800acdc:	d920      	bls.n	800ad20 <pvPortMalloc+0x114>
 800acde:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	4413      	add	r3, r2
 800ace4:	61bb      	str	r3, [r7, #24]
 800ace6:	69bb      	ldr	r3, [r7, #24]
 800ace8:	f003 0307 	and.w	r3, r3, #7
 800acec:	2b00      	cmp	r3, #0
 800acee:	d00b      	beq.n	800ad08 <pvPortMalloc+0xfc>
 800acf0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800acf4:	f383 8811 	msr	BASEPRI, r3
 800acf8:	f3bf 8f6f 	isb	sy
 800acfc:	f3bf 8f4f 	dsb	sy
 800ad00:	613b      	str	r3, [r7, #16]
 800ad02:	bf00      	nop
 800ad04:	bf00      	nop
 800ad06:	e7fd      	b.n	800ad04 <pvPortMalloc+0xf8>
 800ad08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad0a:	685a      	ldr	r2, [r3, #4]
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	1ad2      	subs	r2, r2, r3
 800ad10:	69bb      	ldr	r3, [r7, #24]
 800ad12:	605a      	str	r2, [r3, #4]
 800ad14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad16:	687a      	ldr	r2, [r7, #4]
 800ad18:	605a      	str	r2, [r3, #4]
 800ad1a:	69b8      	ldr	r0, [r7, #24]
 800ad1c:	f000 f90a 	bl	800af34 <prvInsertBlockIntoFreeList>
 800ad20:	4b1d      	ldr	r3, [pc, #116]	@ (800ad98 <pvPortMalloc+0x18c>)
 800ad22:	681a      	ldr	r2, [r3, #0]
 800ad24:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad26:	685b      	ldr	r3, [r3, #4]
 800ad28:	1ad3      	subs	r3, r2, r3
 800ad2a:	4a1b      	ldr	r2, [pc, #108]	@ (800ad98 <pvPortMalloc+0x18c>)
 800ad2c:	6013      	str	r3, [r2, #0]
 800ad2e:	4b1a      	ldr	r3, [pc, #104]	@ (800ad98 <pvPortMalloc+0x18c>)
 800ad30:	681a      	ldr	r2, [r3, #0]
 800ad32:	4b1b      	ldr	r3, [pc, #108]	@ (800ada0 <pvPortMalloc+0x194>)
 800ad34:	681b      	ldr	r3, [r3, #0]
 800ad36:	429a      	cmp	r2, r3
 800ad38:	d203      	bcs.n	800ad42 <pvPortMalloc+0x136>
 800ad3a:	4b17      	ldr	r3, [pc, #92]	@ (800ad98 <pvPortMalloc+0x18c>)
 800ad3c:	681b      	ldr	r3, [r3, #0]
 800ad3e:	4a18      	ldr	r2, [pc, #96]	@ (800ada0 <pvPortMalloc+0x194>)
 800ad40:	6013      	str	r3, [r2, #0]
 800ad42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad44:	685a      	ldr	r2, [r3, #4]
 800ad46:	4b13      	ldr	r3, [pc, #76]	@ (800ad94 <pvPortMalloc+0x188>)
 800ad48:	681b      	ldr	r3, [r3, #0]
 800ad4a:	431a      	orrs	r2, r3
 800ad4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad4e:	605a      	str	r2, [r3, #4]
 800ad50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad52:	2200      	movs	r2, #0
 800ad54:	601a      	str	r2, [r3, #0]
 800ad56:	4b13      	ldr	r3, [pc, #76]	@ (800ada4 <pvPortMalloc+0x198>)
 800ad58:	681b      	ldr	r3, [r3, #0]
 800ad5a:	3301      	adds	r3, #1
 800ad5c:	4a11      	ldr	r2, [pc, #68]	@ (800ada4 <pvPortMalloc+0x198>)
 800ad5e:	6013      	str	r3, [r2, #0]
 800ad60:	f7fe fcf0 	bl	8009744 <xTaskResumeAll>
 800ad64:	69fb      	ldr	r3, [r7, #28]
 800ad66:	f003 0307 	and.w	r3, r3, #7
 800ad6a:	2b00      	cmp	r3, #0
 800ad6c:	d00b      	beq.n	800ad86 <pvPortMalloc+0x17a>
 800ad6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad72:	f383 8811 	msr	BASEPRI, r3
 800ad76:	f3bf 8f6f 	isb	sy
 800ad7a:	f3bf 8f4f 	dsb	sy
 800ad7e:	60fb      	str	r3, [r7, #12]
 800ad80:	bf00      	nop
 800ad82:	bf00      	nop
 800ad84:	e7fd      	b.n	800ad82 <pvPortMalloc+0x176>
 800ad86:	69fb      	ldr	r3, [r7, #28]
 800ad88:	4618      	mov	r0, r3
 800ad8a:	3728      	adds	r7, #40	@ 0x28
 800ad8c:	46bd      	mov	sp, r7
 800ad8e:	bd80      	pop	{r7, pc}
 800ad90:	24004d3c 	.word	0x24004d3c
 800ad94:	24004d50 	.word	0x24004d50
 800ad98:	24004d40 	.word	0x24004d40
 800ad9c:	24004d34 	.word	0x24004d34
 800ada0:	24004d44 	.word	0x24004d44
 800ada4:	24004d48 	.word	0x24004d48

0800ada8 <vPortFree>:
 800ada8:	b580      	push	{r7, lr}
 800adaa:	b086      	sub	sp, #24
 800adac:	af00      	add	r7, sp, #0
 800adae:	6078      	str	r0, [r7, #4]
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	617b      	str	r3, [r7, #20]
 800adb4:	687b      	ldr	r3, [r7, #4]
 800adb6:	2b00      	cmp	r3, #0
 800adb8:	d04f      	beq.n	800ae5a <vPortFree+0xb2>
 800adba:	2308      	movs	r3, #8
 800adbc:	425b      	negs	r3, r3
 800adbe:	697a      	ldr	r2, [r7, #20]
 800adc0:	4413      	add	r3, r2
 800adc2:	617b      	str	r3, [r7, #20]
 800adc4:	697b      	ldr	r3, [r7, #20]
 800adc6:	613b      	str	r3, [r7, #16]
 800adc8:	693b      	ldr	r3, [r7, #16]
 800adca:	685a      	ldr	r2, [r3, #4]
 800adcc:	4b25      	ldr	r3, [pc, #148]	@ (800ae64 <vPortFree+0xbc>)
 800adce:	681b      	ldr	r3, [r3, #0]
 800add0:	4013      	ands	r3, r2
 800add2:	2b00      	cmp	r3, #0
 800add4:	d10b      	bne.n	800adee <vPortFree+0x46>
 800add6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adda:	f383 8811 	msr	BASEPRI, r3
 800adde:	f3bf 8f6f 	isb	sy
 800ade2:	f3bf 8f4f 	dsb	sy
 800ade6:	60fb      	str	r3, [r7, #12]
 800ade8:	bf00      	nop
 800adea:	bf00      	nop
 800adec:	e7fd      	b.n	800adea <vPortFree+0x42>
 800adee:	693b      	ldr	r3, [r7, #16]
 800adf0:	681b      	ldr	r3, [r3, #0]
 800adf2:	2b00      	cmp	r3, #0
 800adf4:	d00b      	beq.n	800ae0e <vPortFree+0x66>
 800adf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adfa:	f383 8811 	msr	BASEPRI, r3
 800adfe:	f3bf 8f6f 	isb	sy
 800ae02:	f3bf 8f4f 	dsb	sy
 800ae06:	60bb      	str	r3, [r7, #8]
 800ae08:	bf00      	nop
 800ae0a:	bf00      	nop
 800ae0c:	e7fd      	b.n	800ae0a <vPortFree+0x62>
 800ae0e:	693b      	ldr	r3, [r7, #16]
 800ae10:	685a      	ldr	r2, [r3, #4]
 800ae12:	4b14      	ldr	r3, [pc, #80]	@ (800ae64 <vPortFree+0xbc>)
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	4013      	ands	r3, r2
 800ae18:	2b00      	cmp	r3, #0
 800ae1a:	d01e      	beq.n	800ae5a <vPortFree+0xb2>
 800ae1c:	693b      	ldr	r3, [r7, #16]
 800ae1e:	681b      	ldr	r3, [r3, #0]
 800ae20:	2b00      	cmp	r3, #0
 800ae22:	d11a      	bne.n	800ae5a <vPortFree+0xb2>
 800ae24:	693b      	ldr	r3, [r7, #16]
 800ae26:	685a      	ldr	r2, [r3, #4]
 800ae28:	4b0e      	ldr	r3, [pc, #56]	@ (800ae64 <vPortFree+0xbc>)
 800ae2a:	681b      	ldr	r3, [r3, #0]
 800ae2c:	43db      	mvns	r3, r3
 800ae2e:	401a      	ands	r2, r3
 800ae30:	693b      	ldr	r3, [r7, #16]
 800ae32:	605a      	str	r2, [r3, #4]
 800ae34:	f7fe fc78 	bl	8009728 <vTaskSuspendAll>
 800ae38:	693b      	ldr	r3, [r7, #16]
 800ae3a:	685a      	ldr	r2, [r3, #4]
 800ae3c:	4b0a      	ldr	r3, [pc, #40]	@ (800ae68 <vPortFree+0xc0>)
 800ae3e:	681b      	ldr	r3, [r3, #0]
 800ae40:	4413      	add	r3, r2
 800ae42:	4a09      	ldr	r2, [pc, #36]	@ (800ae68 <vPortFree+0xc0>)
 800ae44:	6013      	str	r3, [r2, #0]
 800ae46:	6938      	ldr	r0, [r7, #16]
 800ae48:	f000 f874 	bl	800af34 <prvInsertBlockIntoFreeList>
 800ae4c:	4b07      	ldr	r3, [pc, #28]	@ (800ae6c <vPortFree+0xc4>)
 800ae4e:	681b      	ldr	r3, [r3, #0]
 800ae50:	3301      	adds	r3, #1
 800ae52:	4a06      	ldr	r2, [pc, #24]	@ (800ae6c <vPortFree+0xc4>)
 800ae54:	6013      	str	r3, [r2, #0]
 800ae56:	f7fe fc75 	bl	8009744 <xTaskResumeAll>
 800ae5a:	bf00      	nop
 800ae5c:	3718      	adds	r7, #24
 800ae5e:	46bd      	mov	sp, r7
 800ae60:	bd80      	pop	{r7, pc}
 800ae62:	bf00      	nop
 800ae64:	24004d50 	.word	0x24004d50
 800ae68:	24004d40 	.word	0x24004d40
 800ae6c:	24004d4c 	.word	0x24004d4c

0800ae70 <prvHeapInit>:
 800ae70:	b480      	push	{r7}
 800ae72:	b085      	sub	sp, #20
 800ae74:	af00      	add	r7, sp, #0
 800ae76:	f44f 5370 	mov.w	r3, #15360	@ 0x3c00
 800ae7a:	60bb      	str	r3, [r7, #8]
 800ae7c:	4b27      	ldr	r3, [pc, #156]	@ (800af1c <prvHeapInit+0xac>)
 800ae7e:	60fb      	str	r3, [r7, #12]
 800ae80:	68fb      	ldr	r3, [r7, #12]
 800ae82:	f003 0307 	and.w	r3, r3, #7
 800ae86:	2b00      	cmp	r3, #0
 800ae88:	d00c      	beq.n	800aea4 <prvHeapInit+0x34>
 800ae8a:	68fb      	ldr	r3, [r7, #12]
 800ae8c:	3307      	adds	r3, #7
 800ae8e:	60fb      	str	r3, [r7, #12]
 800ae90:	68fb      	ldr	r3, [r7, #12]
 800ae92:	f023 0307 	bic.w	r3, r3, #7
 800ae96:	60fb      	str	r3, [r7, #12]
 800ae98:	68ba      	ldr	r2, [r7, #8]
 800ae9a:	68fb      	ldr	r3, [r7, #12]
 800ae9c:	1ad3      	subs	r3, r2, r3
 800ae9e:	4a1f      	ldr	r2, [pc, #124]	@ (800af1c <prvHeapInit+0xac>)
 800aea0:	4413      	add	r3, r2
 800aea2:	60bb      	str	r3, [r7, #8]
 800aea4:	68fb      	ldr	r3, [r7, #12]
 800aea6:	607b      	str	r3, [r7, #4]
 800aea8:	4a1d      	ldr	r2, [pc, #116]	@ (800af20 <prvHeapInit+0xb0>)
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	6013      	str	r3, [r2, #0]
 800aeae:	4b1c      	ldr	r3, [pc, #112]	@ (800af20 <prvHeapInit+0xb0>)
 800aeb0:	2200      	movs	r2, #0
 800aeb2:	605a      	str	r2, [r3, #4]
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	68ba      	ldr	r2, [r7, #8]
 800aeb8:	4413      	add	r3, r2
 800aeba:	60fb      	str	r3, [r7, #12]
 800aebc:	2208      	movs	r2, #8
 800aebe:	68fb      	ldr	r3, [r7, #12]
 800aec0:	1a9b      	subs	r3, r3, r2
 800aec2:	60fb      	str	r3, [r7, #12]
 800aec4:	68fb      	ldr	r3, [r7, #12]
 800aec6:	f023 0307 	bic.w	r3, r3, #7
 800aeca:	60fb      	str	r3, [r7, #12]
 800aecc:	68fb      	ldr	r3, [r7, #12]
 800aece:	4a15      	ldr	r2, [pc, #84]	@ (800af24 <prvHeapInit+0xb4>)
 800aed0:	6013      	str	r3, [r2, #0]
 800aed2:	4b14      	ldr	r3, [pc, #80]	@ (800af24 <prvHeapInit+0xb4>)
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	2200      	movs	r2, #0
 800aed8:	605a      	str	r2, [r3, #4]
 800aeda:	4b12      	ldr	r3, [pc, #72]	@ (800af24 <prvHeapInit+0xb4>)
 800aedc:	681b      	ldr	r3, [r3, #0]
 800aede:	2200      	movs	r2, #0
 800aee0:	601a      	str	r2, [r3, #0]
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	603b      	str	r3, [r7, #0]
 800aee6:	683b      	ldr	r3, [r7, #0]
 800aee8:	68fa      	ldr	r2, [r7, #12]
 800aeea:	1ad2      	subs	r2, r2, r3
 800aeec:	683b      	ldr	r3, [r7, #0]
 800aeee:	605a      	str	r2, [r3, #4]
 800aef0:	4b0c      	ldr	r3, [pc, #48]	@ (800af24 <prvHeapInit+0xb4>)
 800aef2:	681a      	ldr	r2, [r3, #0]
 800aef4:	683b      	ldr	r3, [r7, #0]
 800aef6:	601a      	str	r2, [r3, #0]
 800aef8:	683b      	ldr	r3, [r7, #0]
 800aefa:	685b      	ldr	r3, [r3, #4]
 800aefc:	4a0a      	ldr	r2, [pc, #40]	@ (800af28 <prvHeapInit+0xb8>)
 800aefe:	6013      	str	r3, [r2, #0]
 800af00:	683b      	ldr	r3, [r7, #0]
 800af02:	685b      	ldr	r3, [r3, #4]
 800af04:	4a09      	ldr	r2, [pc, #36]	@ (800af2c <prvHeapInit+0xbc>)
 800af06:	6013      	str	r3, [r2, #0]
 800af08:	4b09      	ldr	r3, [pc, #36]	@ (800af30 <prvHeapInit+0xc0>)
 800af0a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 800af0e:	601a      	str	r2, [r3, #0]
 800af10:	bf00      	nop
 800af12:	3714      	adds	r7, #20
 800af14:	46bd      	mov	sp, r7
 800af16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af1a:	4770      	bx	lr
 800af1c:	24001134 	.word	0x24001134
 800af20:	24004d34 	.word	0x24004d34
 800af24:	24004d3c 	.word	0x24004d3c
 800af28:	24004d44 	.word	0x24004d44
 800af2c:	24004d40 	.word	0x24004d40
 800af30:	24004d50 	.word	0x24004d50

0800af34 <prvInsertBlockIntoFreeList>:
 800af34:	b480      	push	{r7}
 800af36:	b085      	sub	sp, #20
 800af38:	af00      	add	r7, sp, #0
 800af3a:	6078      	str	r0, [r7, #4]
 800af3c:	4b28      	ldr	r3, [pc, #160]	@ (800afe0 <prvInsertBlockIntoFreeList+0xac>)
 800af3e:	60fb      	str	r3, [r7, #12]
 800af40:	e002      	b.n	800af48 <prvInsertBlockIntoFreeList+0x14>
 800af42:	68fb      	ldr	r3, [r7, #12]
 800af44:	681b      	ldr	r3, [r3, #0]
 800af46:	60fb      	str	r3, [r7, #12]
 800af48:	68fb      	ldr	r3, [r7, #12]
 800af4a:	681b      	ldr	r3, [r3, #0]
 800af4c:	687a      	ldr	r2, [r7, #4]
 800af4e:	429a      	cmp	r2, r3
 800af50:	d8f7      	bhi.n	800af42 <prvInsertBlockIntoFreeList+0xe>
 800af52:	68fb      	ldr	r3, [r7, #12]
 800af54:	60bb      	str	r3, [r7, #8]
 800af56:	68fb      	ldr	r3, [r7, #12]
 800af58:	685b      	ldr	r3, [r3, #4]
 800af5a:	68ba      	ldr	r2, [r7, #8]
 800af5c:	4413      	add	r3, r2
 800af5e:	687a      	ldr	r2, [r7, #4]
 800af60:	429a      	cmp	r2, r3
 800af62:	d108      	bne.n	800af76 <prvInsertBlockIntoFreeList+0x42>
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	685a      	ldr	r2, [r3, #4]
 800af68:	687b      	ldr	r3, [r7, #4]
 800af6a:	685b      	ldr	r3, [r3, #4]
 800af6c:	441a      	add	r2, r3
 800af6e:	68fb      	ldr	r3, [r7, #12]
 800af70:	605a      	str	r2, [r3, #4]
 800af72:	68fb      	ldr	r3, [r7, #12]
 800af74:	607b      	str	r3, [r7, #4]
 800af76:	687b      	ldr	r3, [r7, #4]
 800af78:	60bb      	str	r3, [r7, #8]
 800af7a:	687b      	ldr	r3, [r7, #4]
 800af7c:	685b      	ldr	r3, [r3, #4]
 800af7e:	68ba      	ldr	r2, [r7, #8]
 800af80:	441a      	add	r2, r3
 800af82:	68fb      	ldr	r3, [r7, #12]
 800af84:	681b      	ldr	r3, [r3, #0]
 800af86:	429a      	cmp	r2, r3
 800af88:	d118      	bne.n	800afbc <prvInsertBlockIntoFreeList+0x88>
 800af8a:	68fb      	ldr	r3, [r7, #12]
 800af8c:	681a      	ldr	r2, [r3, #0]
 800af8e:	4b15      	ldr	r3, [pc, #84]	@ (800afe4 <prvInsertBlockIntoFreeList+0xb0>)
 800af90:	681b      	ldr	r3, [r3, #0]
 800af92:	429a      	cmp	r2, r3
 800af94:	d00d      	beq.n	800afb2 <prvInsertBlockIntoFreeList+0x7e>
 800af96:	687b      	ldr	r3, [r7, #4]
 800af98:	685a      	ldr	r2, [r3, #4]
 800af9a:	68fb      	ldr	r3, [r7, #12]
 800af9c:	681b      	ldr	r3, [r3, #0]
 800af9e:	685b      	ldr	r3, [r3, #4]
 800afa0:	441a      	add	r2, r3
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	605a      	str	r2, [r3, #4]
 800afa6:	68fb      	ldr	r3, [r7, #12]
 800afa8:	681b      	ldr	r3, [r3, #0]
 800afaa:	681a      	ldr	r2, [r3, #0]
 800afac:	687b      	ldr	r3, [r7, #4]
 800afae:	601a      	str	r2, [r3, #0]
 800afb0:	e008      	b.n	800afc4 <prvInsertBlockIntoFreeList+0x90>
 800afb2:	4b0c      	ldr	r3, [pc, #48]	@ (800afe4 <prvInsertBlockIntoFreeList+0xb0>)
 800afb4:	681a      	ldr	r2, [r3, #0]
 800afb6:	687b      	ldr	r3, [r7, #4]
 800afb8:	601a      	str	r2, [r3, #0]
 800afba:	e003      	b.n	800afc4 <prvInsertBlockIntoFreeList+0x90>
 800afbc:	68fb      	ldr	r3, [r7, #12]
 800afbe:	681a      	ldr	r2, [r3, #0]
 800afc0:	687b      	ldr	r3, [r7, #4]
 800afc2:	601a      	str	r2, [r3, #0]
 800afc4:	68fa      	ldr	r2, [r7, #12]
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	429a      	cmp	r2, r3
 800afca:	d002      	beq.n	800afd2 <prvInsertBlockIntoFreeList+0x9e>
 800afcc:	68fb      	ldr	r3, [r7, #12]
 800afce:	687a      	ldr	r2, [r7, #4]
 800afd0:	601a      	str	r2, [r3, #0]
 800afd2:	bf00      	nop
 800afd4:	3714      	adds	r7, #20
 800afd6:	46bd      	mov	sp, r7
 800afd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afdc:	4770      	bx	lr
 800afde:	bf00      	nop
 800afe0:	24004d34 	.word	0x24004d34
 800afe4:	24004d3c 	.word	0x24004d3c

0800afe8 <memset>:
 800afe8:	4402      	add	r2, r0
 800afea:	4603      	mov	r3, r0
 800afec:	4293      	cmp	r3, r2
 800afee:	d100      	bne.n	800aff2 <memset+0xa>
 800aff0:	4770      	bx	lr
 800aff2:	f803 1b01 	strb.w	r1, [r3], #1
 800aff6:	e7f9      	b.n	800afec <memset+0x4>

0800aff8 <__libc_init_array>:
 800aff8:	b570      	push	{r4, r5, r6, lr}
 800affa:	4d0d      	ldr	r5, [pc, #52]	@ (800b030 <__libc_init_array+0x38>)
 800affc:	4c0d      	ldr	r4, [pc, #52]	@ (800b034 <__libc_init_array+0x3c>)
 800affe:	1b64      	subs	r4, r4, r5
 800b000:	10a4      	asrs	r4, r4, #2
 800b002:	2600      	movs	r6, #0
 800b004:	42a6      	cmp	r6, r4
 800b006:	d109      	bne.n	800b01c <__libc_init_array+0x24>
 800b008:	4d0b      	ldr	r5, [pc, #44]	@ (800b038 <__libc_init_array+0x40>)
 800b00a:	4c0c      	ldr	r4, [pc, #48]	@ (800b03c <__libc_init_array+0x44>)
 800b00c:	f000 f826 	bl	800b05c <_init>
 800b010:	1b64      	subs	r4, r4, r5
 800b012:	10a4      	asrs	r4, r4, #2
 800b014:	2600      	movs	r6, #0
 800b016:	42a6      	cmp	r6, r4
 800b018:	d105      	bne.n	800b026 <__libc_init_array+0x2e>
 800b01a:	bd70      	pop	{r4, r5, r6, pc}
 800b01c:	f855 3b04 	ldr.w	r3, [r5], #4
 800b020:	4798      	blx	r3
 800b022:	3601      	adds	r6, #1
 800b024:	e7ee      	b.n	800b004 <__libc_init_array+0xc>
 800b026:	f855 3b04 	ldr.w	r3, [r5], #4
 800b02a:	4798      	blx	r3
 800b02c:	3601      	adds	r6, #1
 800b02e:	e7f2      	b.n	800b016 <__libc_init_array+0x1e>
 800b030:	0800b1a4 	.word	0x0800b1a4
 800b034:	0800b1a4 	.word	0x0800b1a4
 800b038:	0800b1a4 	.word	0x0800b1a4
 800b03c:	0800b1a8 	.word	0x0800b1a8

0800b040 <memcpy>:
 800b040:	440a      	add	r2, r1
 800b042:	4291      	cmp	r1, r2
 800b044:	f100 33ff 	add.w	r3, r0, #4294967295
 800b048:	d100      	bne.n	800b04c <memcpy+0xc>
 800b04a:	4770      	bx	lr
 800b04c:	b510      	push	{r4, lr}
 800b04e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b052:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b056:	4291      	cmp	r1, r2
 800b058:	d1f9      	bne.n	800b04e <memcpy+0xe>
 800b05a:	bd10      	pop	{r4, pc}

0800b05c <_init>:
 800b05c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b05e:	bf00      	nop
 800b060:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b062:	bc08      	pop	{r3}
 800b064:	469e      	mov	lr, r3
 800b066:	4770      	bx	lr

0800b068 <_fini>:
 800b068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b06a:	bf00      	nop
 800b06c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800b06e:	bc08      	pop	{r3}
 800b070:	469e      	mov	lr, r3
 800b072:	4770      	bx	lr
